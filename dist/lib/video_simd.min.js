/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/worker/videoWrapper.simd.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/@babel/runtime/core-js/map.js":
/*!****************************************************!*\
  !*** ./node_modules/@babel/runtime/core-js/map.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! core-js/library/fn/map */ "./node_modules/core-js/library/fn/map.js");

/***/ }),

/***/ "./node_modules/@babel/runtime/core-js/object/assign.js":
/*!**************************************************************!*\
  !*** ./node_modules/@babel/runtime/core-js/object/assign.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! core-js/library/fn/object/assign */ "./node_modules/core-js/library/fn/object/assign.js");

/***/ }),

/***/ "./node_modules/@babel/runtime/core-js/object/define-property.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@babel/runtime/core-js/object/define-property.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! core-js/library/fn/object/define-property */ "./node_modules/core-js/library/fn/object/define-property.js");

/***/ }),

/***/ "./node_modules/@babel/runtime/core-js/object/get-own-property-descriptor.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@babel/runtime/core-js/object/get-own-property-descriptor.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! core-js/library/fn/object/get-own-property-descriptor */ "./node_modules/core-js/library/fn/object/get-own-property-descriptor.js");

/***/ }),

/***/ "./node_modules/@babel/runtime/core-js/object/keys.js":
/*!************************************************************!*\
  !*** ./node_modules/@babel/runtime/core-js/object/keys.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! core-js/library/fn/object/keys */ "./node_modules/core-js/library/fn/object/keys.js");

/***/ }),

/***/ "./node_modules/@babel/runtime/core-js/promise.js":
/*!********************************************************!*\
  !*** ./node_modules/@babel/runtime/core-js/promise.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! core-js/library/fn/promise */ "./node_modules/core-js/library/fn/promise.js");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/interopRequireDefault.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

module.exports = _interopRequireDefault;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/interopRequireWildcard.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/interopRequireWildcard.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _Object$getOwnPropertyDescriptor = __webpack_require__(/*! ../core-js/object/get-own-property-descriptor */ "./node_modules/@babel/runtime/core-js/object/get-own-property-descriptor.js");

var _Object$defineProperty = __webpack_require__(/*! ../core-js/object/define-property */ "./node_modules/@babel/runtime/core-js/object/define-property.js");

function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  } else {
    var newObj = {};

    if (obj != null) {
      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = _Object$defineProperty && _Object$getOwnPropertyDescriptor ? _Object$getOwnPropertyDescriptor(obj, key) : {};

          if (desc.get || desc.set) {
            _Object$defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
    }

    newObj.default = obj;
    return newObj;
  }
}

module.exports = _interopRequireWildcard;

/***/ }),

/***/ "./node_modules/core-js/library/fn/map.js":
/*!************************************************!*\
  !*** ./node_modules/core-js/library/fn/map.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ../modules/es6.object.to-string */ "./node_modules/core-js/library/modules/es6.object.to-string.js");
__webpack_require__(/*! ../modules/es6.string.iterator */ "./node_modules/core-js/library/modules/es6.string.iterator.js");
__webpack_require__(/*! ../modules/web.dom.iterable */ "./node_modules/core-js/library/modules/web.dom.iterable.js");
__webpack_require__(/*! ../modules/es6.map */ "./node_modules/core-js/library/modules/es6.map.js");
__webpack_require__(/*! ../modules/es7.map.to-json */ "./node_modules/core-js/library/modules/es7.map.to-json.js");
__webpack_require__(/*! ../modules/es7.map.of */ "./node_modules/core-js/library/modules/es7.map.of.js");
__webpack_require__(/*! ../modules/es7.map.from */ "./node_modules/core-js/library/modules/es7.map.from.js");
module.exports = __webpack_require__(/*! ../modules/_core */ "./node_modules/core-js/library/modules/_core.js").Map;


/***/ }),

/***/ "./node_modules/core-js/library/fn/object/assign.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/library/fn/object/assign.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ../../modules/es6.object.assign */ "./node_modules/core-js/library/modules/es6.object.assign.js");
module.exports = __webpack_require__(/*! ../../modules/_core */ "./node_modules/core-js/library/modules/_core.js").Object.assign;


/***/ }),

/***/ "./node_modules/core-js/library/fn/object/define-property.js":
/*!*******************************************************************!*\
  !*** ./node_modules/core-js/library/fn/object/define-property.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ../../modules/es6.object.define-property */ "./node_modules/core-js/library/modules/es6.object.define-property.js");
var $Object = __webpack_require__(/*! ../../modules/_core */ "./node_modules/core-js/library/modules/_core.js").Object;
module.exports = function defineProperty(it, key, desc) {
  return $Object.defineProperty(it, key, desc);
};


/***/ }),

/***/ "./node_modules/core-js/library/fn/object/get-own-property-descriptor.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/core-js/library/fn/object/get-own-property-descriptor.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ../../modules/es6.object.get-own-property-descriptor */ "./node_modules/core-js/library/modules/es6.object.get-own-property-descriptor.js");
var $Object = __webpack_require__(/*! ../../modules/_core */ "./node_modules/core-js/library/modules/_core.js").Object;
module.exports = function getOwnPropertyDescriptor(it, key) {
  return $Object.getOwnPropertyDescriptor(it, key);
};


/***/ }),

/***/ "./node_modules/core-js/library/fn/object/keys.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/library/fn/object/keys.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ../../modules/es6.object.keys */ "./node_modules/core-js/library/modules/es6.object.keys.js");
module.exports = __webpack_require__(/*! ../../modules/_core */ "./node_modules/core-js/library/modules/_core.js").Object.keys;


/***/ }),

/***/ "./node_modules/core-js/library/fn/promise.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/library/fn/promise.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ../modules/es6.object.to-string */ "./node_modules/core-js/library/modules/es6.object.to-string.js");
__webpack_require__(/*! ../modules/es6.string.iterator */ "./node_modules/core-js/library/modules/es6.string.iterator.js");
__webpack_require__(/*! ../modules/web.dom.iterable */ "./node_modules/core-js/library/modules/web.dom.iterable.js");
__webpack_require__(/*! ../modules/es6.promise */ "./node_modules/core-js/library/modules/es6.promise.js");
__webpack_require__(/*! ../modules/es7.promise.finally */ "./node_modules/core-js/library/modules/es7.promise.finally.js");
__webpack_require__(/*! ../modules/es7.promise.try */ "./node_modules/core-js/library/modules/es7.promise.try.js");
module.exports = __webpack_require__(/*! ../modules/_core */ "./node_modules/core-js/library/modules/_core.js").Promise;


/***/ }),

/***/ "./node_modules/core-js/library/modules/_a-function.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_a-function.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (it) {
  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
  return it;
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_add-to-unscopables.js":
/*!*********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_add-to-unscopables.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function () { /* empty */ };


/***/ }),

/***/ "./node_modules/core-js/library/modules/_an-instance.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_an-instance.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (it, Constructor, name, forbiddenField) {
  if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {
    throw TypeError(name + ': incorrect invocation!');
  } return it;
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_an-object.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_an-object.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/library/modules/_is-object.js");
module.exports = function (it) {
  if (!isObject(it)) throw TypeError(it + ' is not an object!');
  return it;
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_array-from-iterable.js":
/*!**********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_array-from-iterable.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var forOf = __webpack_require__(/*! ./_for-of */ "./node_modules/core-js/library/modules/_for-of.js");

module.exports = function (iter, ITERATOR) {
  var result = [];
  forOf(iter, false, result.push, result, ITERATOR);
  return result;
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_array-includes.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_array-includes.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// false -> Array#indexOf
// true  -> Array#includes
var toIObject = __webpack_require__(/*! ./_to-iobject */ "./node_modules/core-js/library/modules/_to-iobject.js");
var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/library/modules/_to-length.js");
var toAbsoluteIndex = __webpack_require__(/*! ./_to-absolute-index */ "./node_modules/core-js/library/modules/_to-absolute-index.js");
module.exports = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIObject($this);
    var length = toLength(O.length);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
      if (O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_array-methods.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_array-methods.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 0 -> Array#forEach
// 1 -> Array#map
// 2 -> Array#filter
// 3 -> Array#some
// 4 -> Array#every
// 5 -> Array#find
// 6 -> Array#findIndex
var ctx = __webpack_require__(/*! ./_ctx */ "./node_modules/core-js/library/modules/_ctx.js");
var IObject = __webpack_require__(/*! ./_iobject */ "./node_modules/core-js/library/modules/_iobject.js");
var toObject = __webpack_require__(/*! ./_to-object */ "./node_modules/core-js/library/modules/_to-object.js");
var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/library/modules/_to-length.js");
var asc = __webpack_require__(/*! ./_array-species-create */ "./node_modules/core-js/library/modules/_array-species-create.js");
module.exports = function (TYPE, $create) {
  var IS_MAP = TYPE == 1;
  var IS_FILTER = TYPE == 2;
  var IS_SOME = TYPE == 3;
  var IS_EVERY = TYPE == 4;
  var IS_FIND_INDEX = TYPE == 6;
  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
  var create = $create || asc;
  return function ($this, callbackfn, that) {
    var O = toObject($this);
    var self = IObject(O);
    var f = ctx(callbackfn, that, 3);
    var length = toLength(self.length);
    var index = 0;
    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;
    var val, res;
    for (;length > index; index++) if (NO_HOLES || index in self) {
      val = self[index];
      res = f(val, index, O);
      if (TYPE) {
        if (IS_MAP) result[index] = res;   // map
        else if (res) switch (TYPE) {
          case 3: return true;             // some
          case 5: return val;              // find
          case 6: return index;            // findIndex
          case 2: result.push(val);        // filter
        } else if (IS_EVERY) return false; // every
      }
    }
    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;
  };
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_array-species-constructor.js":
/*!****************************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_array-species-constructor.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/library/modules/_is-object.js");
var isArray = __webpack_require__(/*! ./_is-array */ "./node_modules/core-js/library/modules/_is-array.js");
var SPECIES = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/library/modules/_wks.js")('species');

module.exports = function (original) {
  var C;
  if (isArray(original)) {
    C = original.constructor;
    // cross-realm fallback
    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;
    if (isObject(C)) {
      C = C[SPECIES];
      if (C === null) C = undefined;
    }
  } return C === undefined ? Array : C;
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_array-species-create.js":
/*!***********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_array-species-create.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 9.4.2.3 ArraySpeciesCreate(originalArray, length)
var speciesConstructor = __webpack_require__(/*! ./_array-species-constructor */ "./node_modules/core-js/library/modules/_array-species-constructor.js");

module.exports = function (original, length) {
  return new (speciesConstructor(original))(length);
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_classof.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/library/modules/_classof.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// getting tag from 19.1.3.6 Object.prototype.toString()
var cof = __webpack_require__(/*! ./_cof */ "./node_modules/core-js/library/modules/_cof.js");
var TAG = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/library/modules/_wks.js")('toStringTag');
// ES3 wrong here
var ARG = cof(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function (it, key) {
  try {
    return it[key];
  } catch (e) { /* empty */ }
};

module.exports = function (it) {
  var O, T, B;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
    // builtinTag case
    : ARG ? cof(O)
    // ES3 arguments fallback
    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_cof.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/library/modules/_cof.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = function (it) {
  return toString.call(it).slice(8, -1);
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_collection-strong.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_collection-strong.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var dP = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/library/modules/_object-dp.js").f;
var create = __webpack_require__(/*! ./_object-create */ "./node_modules/core-js/library/modules/_object-create.js");
var redefineAll = __webpack_require__(/*! ./_redefine-all */ "./node_modules/core-js/library/modules/_redefine-all.js");
var ctx = __webpack_require__(/*! ./_ctx */ "./node_modules/core-js/library/modules/_ctx.js");
var anInstance = __webpack_require__(/*! ./_an-instance */ "./node_modules/core-js/library/modules/_an-instance.js");
var forOf = __webpack_require__(/*! ./_for-of */ "./node_modules/core-js/library/modules/_for-of.js");
var $iterDefine = __webpack_require__(/*! ./_iter-define */ "./node_modules/core-js/library/modules/_iter-define.js");
var step = __webpack_require__(/*! ./_iter-step */ "./node_modules/core-js/library/modules/_iter-step.js");
var setSpecies = __webpack_require__(/*! ./_set-species */ "./node_modules/core-js/library/modules/_set-species.js");
var DESCRIPTORS = __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/library/modules/_descriptors.js");
var fastKey = __webpack_require__(/*! ./_meta */ "./node_modules/core-js/library/modules/_meta.js").fastKey;
var validate = __webpack_require__(/*! ./_validate-collection */ "./node_modules/core-js/library/modules/_validate-collection.js");
var SIZE = DESCRIPTORS ? '_s' : 'size';

var getEntry = function (that, key) {
  // fast case
  var index = fastKey(key);
  var entry;
  if (index !== 'F') return that._i[index];
  // frozen object case
  for (entry = that._f; entry; entry = entry.n) {
    if (entry.k == key) return entry;
  }
};

module.exports = {
  getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {
    var C = wrapper(function (that, iterable) {
      anInstance(that, C, NAME, '_i');
      that._t = NAME;         // collection type
      that._i = create(null); // index
      that._f = undefined;    // first entry
      that._l = undefined;    // last entry
      that[SIZE] = 0;         // size
      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
    });
    redefineAll(C.prototype, {
      // 23.1.3.1 Map.prototype.clear()
      // 23.2.3.2 Set.prototype.clear()
      clear: function clear() {
        for (var that = validate(this, NAME), data = that._i, entry = that._f; entry; entry = entry.n) {
          entry.r = true;
          if (entry.p) entry.p = entry.p.n = undefined;
          delete data[entry.i];
        }
        that._f = that._l = undefined;
        that[SIZE] = 0;
      },
      // 23.1.3.3 Map.prototype.delete(key)
      // 23.2.3.4 Set.prototype.delete(value)
      'delete': function (key) {
        var that = validate(this, NAME);
        var entry = getEntry(that, key);
        if (entry) {
          var next = entry.n;
          var prev = entry.p;
          delete that._i[entry.i];
          entry.r = true;
          if (prev) prev.n = next;
          if (next) next.p = prev;
          if (that._f == entry) that._f = next;
          if (that._l == entry) that._l = prev;
          that[SIZE]--;
        } return !!entry;
      },
      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)
      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)
      forEach: function forEach(callbackfn /* , that = undefined */) {
        validate(this, NAME);
        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);
        var entry;
        while (entry = entry ? entry.n : this._f) {
          f(entry.v, entry.k, this);
          // revert to the last existing entry
          while (entry && entry.r) entry = entry.p;
        }
      },
      // 23.1.3.7 Map.prototype.has(key)
      // 23.2.3.7 Set.prototype.has(value)
      has: function has(key) {
        return !!getEntry(validate(this, NAME), key);
      }
    });
    if (DESCRIPTORS) dP(C.prototype, 'size', {
      get: function () {
        return validate(this, NAME)[SIZE];
      }
    });
    return C;
  },
  def: function (that, key, value) {
    var entry = getEntry(that, key);
    var prev, index;
    // change existing entry
    if (entry) {
      entry.v = value;
    // create new entry
    } else {
      that._l = entry = {
        i: index = fastKey(key, true), // <- index
        k: key,                        // <- key
        v: value,                      // <- value
        p: prev = that._l,             // <- previous entry
        n: undefined,                  // <- next entry
        r: false                       // <- removed
      };
      if (!that._f) that._f = entry;
      if (prev) prev.n = entry;
      that[SIZE]++;
      // add to index
      if (index !== 'F') that._i[index] = entry;
    } return that;
  },
  getEntry: getEntry,
  setStrong: function (C, NAME, IS_MAP) {
    // add .keys, .values, .entries, [@@iterator]
    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11
    $iterDefine(C, NAME, function (iterated, kind) {
      this._t = validate(iterated, NAME); // target
      this._k = kind;                     // kind
      this._l = undefined;                // previous
    }, function () {
      var that = this;
      var kind = that._k;
      var entry = that._l;
      // revert to the last existing entry
      while (entry && entry.r) entry = entry.p;
      // get next entry
      if (!that._t || !(that._l = entry = entry ? entry.n : that._t._f)) {
        // or finish the iteration
        that._t = undefined;
        return step(1);
      }
      // return step by kind
      if (kind == 'keys') return step(0, entry.k);
      if (kind == 'values') return step(0, entry.v);
      return step(0, [entry.k, entry.v]);
    }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);

    // add [@@species], 23.1.2.2, 23.2.2.2
    setSpecies(NAME);
  }
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_collection-to-json.js":
/*!*********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_collection-to-json.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// https://github.com/DavidBruant/Map-Set.prototype.toJSON
var classof = __webpack_require__(/*! ./_classof */ "./node_modules/core-js/library/modules/_classof.js");
var from = __webpack_require__(/*! ./_array-from-iterable */ "./node_modules/core-js/library/modules/_array-from-iterable.js");
module.exports = function (NAME) {
  return function toJSON() {
    if (classof(this) != NAME) throw TypeError(NAME + "#toJSON isn't generic");
    return from(this);
  };
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_collection.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_collection.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/library/modules/_global.js");
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/library/modules/_export.js");
var meta = __webpack_require__(/*! ./_meta */ "./node_modules/core-js/library/modules/_meta.js");
var fails = __webpack_require__(/*! ./_fails */ "./node_modules/core-js/library/modules/_fails.js");
var hide = __webpack_require__(/*! ./_hide */ "./node_modules/core-js/library/modules/_hide.js");
var redefineAll = __webpack_require__(/*! ./_redefine-all */ "./node_modules/core-js/library/modules/_redefine-all.js");
var forOf = __webpack_require__(/*! ./_for-of */ "./node_modules/core-js/library/modules/_for-of.js");
var anInstance = __webpack_require__(/*! ./_an-instance */ "./node_modules/core-js/library/modules/_an-instance.js");
var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/library/modules/_is-object.js");
var setToStringTag = __webpack_require__(/*! ./_set-to-string-tag */ "./node_modules/core-js/library/modules/_set-to-string-tag.js");
var dP = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/library/modules/_object-dp.js").f;
var each = __webpack_require__(/*! ./_array-methods */ "./node_modules/core-js/library/modules/_array-methods.js")(0);
var DESCRIPTORS = __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/library/modules/_descriptors.js");

module.exports = function (NAME, wrapper, methods, common, IS_MAP, IS_WEAK) {
  var Base = global[NAME];
  var C = Base;
  var ADDER = IS_MAP ? 'set' : 'add';
  var proto = C && C.prototype;
  var O = {};
  if (!DESCRIPTORS || typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function () {
    new C().entries().next();
  }))) {
    // create collection constructor
    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);
    redefineAll(C.prototype, methods);
    meta.NEED = true;
  } else {
    C = wrapper(function (target, iterable) {
      anInstance(target, C, NAME, '_c');
      target._c = new Base();
      if (iterable != undefined) forOf(iterable, IS_MAP, target[ADDER], target);
    });
    each('add,clear,delete,forEach,get,has,set,keys,values,entries,toJSON'.split(','), function (KEY) {
      var IS_ADDER = KEY == 'add' || KEY == 'set';
      if (KEY in proto && !(IS_WEAK && KEY == 'clear')) hide(C.prototype, KEY, function (a, b) {
        anInstance(this, C, KEY);
        if (!IS_ADDER && IS_WEAK && !isObject(a)) return KEY == 'get' ? undefined : false;
        var result = this._c[KEY](a === 0 ? 0 : a, b);
        return IS_ADDER ? this : result;
      });
    });
    IS_WEAK || dP(C.prototype, 'size', {
      get: function () {
        return this._c.size;
      }
    });
  }

  setToStringTag(C, NAME);

  O[NAME] = C;
  $export($export.G + $export.W + $export.F, O);

  if (!IS_WEAK) common.setStrong(C, NAME, IS_MAP);

  return C;
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_core.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/library/modules/_core.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var core = module.exports = { version: '2.5.7' };
if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef


/***/ }),

/***/ "./node_modules/core-js/library/modules/_ctx.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/library/modules/_ctx.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// optional / simple context binding
var aFunction = __webpack_require__(/*! ./_a-function */ "./node_modules/core-js/library/modules/_a-function.js");
module.exports = function (fn, that, length) {
  aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 1: return function (a) {
      return fn.call(that, a);
    };
    case 2: return function (a, b) {
      return fn.call(that, a, b);
    };
    case 3: return function (a, b, c) {
      return fn.call(that, a, b, c);
    };
  }
  return function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_defined.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/library/modules/_defined.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// 7.2.1 RequireObjectCoercible(argument)
module.exports = function (it) {
  if (it == undefined) throw TypeError("Can't call method on  " + it);
  return it;
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_descriptors.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_descriptors.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Thank's IE8 for his funny defineProperty
module.exports = !__webpack_require__(/*! ./_fails */ "./node_modules/core-js/library/modules/_fails.js")(function () {
  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),

/***/ "./node_modules/core-js/library/modules/_dom-create.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_dom-create.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/library/modules/_is-object.js");
var document = __webpack_require__(/*! ./_global */ "./node_modules/core-js/library/modules/_global.js").document;
// typeof document.createElement is 'object' in old IE
var is = isObject(document) && isObject(document.createElement);
module.exports = function (it) {
  return is ? document.createElement(it) : {};
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_enum-bug-keys.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_enum-bug-keys.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// IE 8- don't enum bug keys
module.exports = (
  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
).split(',');


/***/ }),

/***/ "./node_modules/core-js/library/modules/_export.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/library/modules/_export.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/library/modules/_global.js");
var core = __webpack_require__(/*! ./_core */ "./node_modules/core-js/library/modules/_core.js");
var ctx = __webpack_require__(/*! ./_ctx */ "./node_modules/core-js/library/modules/_ctx.js");
var hide = __webpack_require__(/*! ./_hide */ "./node_modules/core-js/library/modules/_hide.js");
var has = __webpack_require__(/*! ./_has */ "./node_modules/core-js/library/modules/_has.js");
var PROTOTYPE = 'prototype';

var $export = function (type, name, source) {
  var IS_FORCED = type & $export.F;
  var IS_GLOBAL = type & $export.G;
  var IS_STATIC = type & $export.S;
  var IS_PROTO = type & $export.P;
  var IS_BIND = type & $export.B;
  var IS_WRAP = type & $export.W;
  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
  var expProto = exports[PROTOTYPE];
  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];
  var key, own, out;
  if (IS_GLOBAL) source = name;
  for (key in source) {
    // contains in native
    own = !IS_FORCED && target && target[key] !== undefined;
    if (own && has(exports, key)) continue;
    // export native or passed
    out = own ? target[key] : source[key];
    // prevent global pollution for namespaces
    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]
    // bind timers to global for call from export context
    : IS_BIND && own ? ctx(out, global)
    // wrap global constructors for prevent change them in library
    : IS_WRAP && target[key] == out ? (function (C) {
      var F = function (a, b, c) {
        if (this instanceof C) {
          switch (arguments.length) {
            case 0: return new C();
            case 1: return new C(a);
            case 2: return new C(a, b);
          } return new C(a, b, c);
        } return C.apply(this, arguments);
      };
      F[PROTOTYPE] = C[PROTOTYPE];
      return F;
    // make static versions for prototype methods
    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%
    if (IS_PROTO) {
      (exports.virtual || (exports.virtual = {}))[key] = out;
      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%
      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);
    }
  }
};
// type bitmap
$export.F = 1;   // forced
$export.G = 2;   // global
$export.S = 4;   // static
$export.P = 8;   // proto
$export.B = 16;  // bind
$export.W = 32;  // wrap
$export.U = 64;  // safe
$export.R = 128; // real proto method for `library`
module.exports = $export;


/***/ }),

/***/ "./node_modules/core-js/library/modules/_fails.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/library/modules/_fails.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return !!exec();
  } catch (e) {
    return true;
  }
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_for-of.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/library/modules/_for-of.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var ctx = __webpack_require__(/*! ./_ctx */ "./node_modules/core-js/library/modules/_ctx.js");
var call = __webpack_require__(/*! ./_iter-call */ "./node_modules/core-js/library/modules/_iter-call.js");
var isArrayIter = __webpack_require__(/*! ./_is-array-iter */ "./node_modules/core-js/library/modules/_is-array-iter.js");
var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/library/modules/_an-object.js");
var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/core-js/library/modules/_to-length.js");
var getIterFn = __webpack_require__(/*! ./core.get-iterator-method */ "./node_modules/core-js/library/modules/core.get-iterator-method.js");
var BREAK = {};
var RETURN = {};
var exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {
  var iterFn = ITERATOR ? function () { return iterable; } : getIterFn(iterable);
  var f = ctx(fn, that, entries ? 2 : 1);
  var index = 0;
  var length, step, iterator, result;
  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');
  // fast case for arrays with default iterator
  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {
    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
    if (result === BREAK || result === RETURN) return result;
  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {
    result = call(iterator, f, step.value, entries);
    if (result === BREAK || result === RETURN) return result;
  }
};
exports.BREAK = BREAK;
exports.RETURN = RETURN;


/***/ }),

/***/ "./node_modules/core-js/library/modules/_global.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/library/modules/_global.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global = module.exports = typeof window != 'undefined' && window.Math == Math
  ? window : typeof self != 'undefined' && self.Math == Math ? self
  // eslint-disable-next-line no-new-func
  : Function('return this')();
if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef


/***/ }),

/***/ "./node_modules/core-js/library/modules/_has.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/library/modules/_has.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var hasOwnProperty = {}.hasOwnProperty;
module.exports = function (it, key) {
  return hasOwnProperty.call(it, key);
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_hide.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/library/modules/_hide.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/library/modules/_object-dp.js");
var createDesc = __webpack_require__(/*! ./_property-desc */ "./node_modules/core-js/library/modules/_property-desc.js");
module.exports = __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/library/modules/_descriptors.js") ? function (object, key, value) {
  return dP.f(object, key, createDesc(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_html.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/library/modules/_html.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var document = __webpack_require__(/*! ./_global */ "./node_modules/core-js/library/modules/_global.js").document;
module.exports = document && document.documentElement;


/***/ }),

/***/ "./node_modules/core-js/library/modules/_ie8-dom-define.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_ie8-dom-define.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = !__webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/library/modules/_descriptors.js") && !__webpack_require__(/*! ./_fails */ "./node_modules/core-js/library/modules/_fails.js")(function () {
  return Object.defineProperty(__webpack_require__(/*! ./_dom-create */ "./node_modules/core-js/library/modules/_dom-create.js")('div'), 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),

/***/ "./node_modules/core-js/library/modules/_invoke.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/library/modules/_invoke.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// fast apply, http://jsperf.lnkit.com/fast-apply/5
module.exports = function (fn, args, that) {
  var un = that === undefined;
  switch (args.length) {
    case 0: return un ? fn()
                      : fn.call(that);
    case 1: return un ? fn(args[0])
                      : fn.call(that, args[0]);
    case 2: return un ? fn(args[0], args[1])
                      : fn.call(that, args[0], args[1]);
    case 3: return un ? fn(args[0], args[1], args[2])
                      : fn.call(that, args[0], args[1], args[2]);
    case 4: return un ? fn(args[0], args[1], args[2], args[3])
                      : fn.call(that, args[0], args[1], args[2], args[3]);
  } return fn.apply(that, args);
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_iobject.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/library/modules/_iobject.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// fallback for non-array-like ES3 and non-enumerable old V8 strings
var cof = __webpack_require__(/*! ./_cof */ "./node_modules/core-js/library/modules/_cof.js");
// eslint-disable-next-line no-prototype-builtins
module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
  return cof(it) == 'String' ? it.split('') : Object(it);
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_is-array-iter.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_is-array-iter.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// check on default Array iterator
var Iterators = __webpack_require__(/*! ./_iterators */ "./node_modules/core-js/library/modules/_iterators.js");
var ITERATOR = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/library/modules/_wks.js")('iterator');
var ArrayProto = Array.prototype;

module.exports = function (it) {
  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_is-array.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/library/modules/_is-array.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 7.2.2 IsArray(argument)
var cof = __webpack_require__(/*! ./_cof */ "./node_modules/core-js/library/modules/_cof.js");
module.exports = Array.isArray || function isArray(arg) {
  return cof(arg) == 'Array';
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_is-object.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_is-object.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_iter-call.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_iter-call.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// call something on iterator step with safe closing on error
var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/library/modules/_an-object.js");
module.exports = function (iterator, fn, value, entries) {
  try {
    return entries ? fn(anObject(value)[0], value[1]) : fn(value);
  // 7.4.6 IteratorClose(iterator, completion)
  } catch (e) {
    var ret = iterator['return'];
    if (ret !== undefined) anObject(ret.call(iterator));
    throw e;
  }
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_iter-create.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_iter-create.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var create = __webpack_require__(/*! ./_object-create */ "./node_modules/core-js/library/modules/_object-create.js");
var descriptor = __webpack_require__(/*! ./_property-desc */ "./node_modules/core-js/library/modules/_property-desc.js");
var setToStringTag = __webpack_require__(/*! ./_set-to-string-tag */ "./node_modules/core-js/library/modules/_set-to-string-tag.js");
var IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
__webpack_require__(/*! ./_hide */ "./node_modules/core-js/library/modules/_hide.js")(IteratorPrototype, __webpack_require__(/*! ./_wks */ "./node_modules/core-js/library/modules/_wks.js")('iterator'), function () { return this; });

module.exports = function (Constructor, NAME, next) {
  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });
  setToStringTag(Constructor, NAME + ' Iterator');
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_iter-define.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_iter-define.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var LIBRARY = __webpack_require__(/*! ./_library */ "./node_modules/core-js/library/modules/_library.js");
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/library/modules/_export.js");
var redefine = __webpack_require__(/*! ./_redefine */ "./node_modules/core-js/library/modules/_redefine.js");
var hide = __webpack_require__(/*! ./_hide */ "./node_modules/core-js/library/modules/_hide.js");
var Iterators = __webpack_require__(/*! ./_iterators */ "./node_modules/core-js/library/modules/_iterators.js");
var $iterCreate = __webpack_require__(/*! ./_iter-create */ "./node_modules/core-js/library/modules/_iter-create.js");
var setToStringTag = __webpack_require__(/*! ./_set-to-string-tag */ "./node_modules/core-js/library/modules/_set-to-string-tag.js");
var getPrototypeOf = __webpack_require__(/*! ./_object-gpo */ "./node_modules/core-js/library/modules/_object-gpo.js");
var ITERATOR = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/library/modules/_wks.js")('iterator');
var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`
var FF_ITERATOR = '@@iterator';
var KEYS = 'keys';
var VALUES = 'values';

var returnThis = function () { return this; };

module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
  $iterCreate(Constructor, NAME, next);
  var getMethod = function (kind) {
    if (!BUGGY && kind in proto) return proto[kind];
    switch (kind) {
      case KEYS: return function keys() { return new Constructor(this, kind); };
      case VALUES: return function values() { return new Constructor(this, kind); };
    } return function entries() { return new Constructor(this, kind); };
  };
  var TAG = NAME + ' Iterator';
  var DEF_VALUES = DEFAULT == VALUES;
  var VALUES_BUG = false;
  var proto = Base.prototype;
  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
  var $default = $native || getMethod(DEFAULT);
  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
  var methods, key, IteratorPrototype;
  // Fix native
  if ($anyNative) {
    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));
    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
      // Set @@toStringTag to native iterators
      setToStringTag(IteratorPrototype, TAG, true);
      // fix for some old engines
      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);
    }
  }
  // fix Array#{values, @@iterator}.name in V8 / FF
  if (DEF_VALUES && $native && $native.name !== VALUES) {
    VALUES_BUG = true;
    $default = function values() { return $native.call(this); };
  }
  // Define iterator
  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
    hide(proto, ITERATOR, $default);
  }
  // Plug for library
  Iterators[NAME] = $default;
  Iterators[TAG] = returnThis;
  if (DEFAULT) {
    methods = {
      values: DEF_VALUES ? $default : getMethod(VALUES),
      keys: IS_SET ? $default : getMethod(KEYS),
      entries: $entries
    };
    if (FORCED) for (key in methods) {
      if (!(key in proto)) redefine(proto, key, methods[key]);
    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
  }
  return methods;
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_iter-detect.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_iter-detect.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var ITERATOR = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/library/modules/_wks.js")('iterator');
var SAFE_CLOSING = false;

try {
  var riter = [7][ITERATOR]();
  riter['return'] = function () { SAFE_CLOSING = true; };
  // eslint-disable-next-line no-throw-literal
  Array.from(riter, function () { throw 2; });
} catch (e) { /* empty */ }

module.exports = function (exec, skipClosing) {
  if (!skipClosing && !SAFE_CLOSING) return false;
  var safe = false;
  try {
    var arr = [7];
    var iter = arr[ITERATOR]();
    iter.next = function () { return { done: safe = true }; };
    arr[ITERATOR] = function () { return iter; };
    exec(arr);
  } catch (e) { /* empty */ }
  return safe;
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_iter-step.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_iter-step.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (done, value) {
  return { value: value, done: !!done };
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_iterators.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_iterators.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = {};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_library.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/library/modules/_library.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = true;


/***/ }),

/***/ "./node_modules/core-js/library/modules/_meta.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/library/modules/_meta.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var META = __webpack_require__(/*! ./_uid */ "./node_modules/core-js/library/modules/_uid.js")('meta');
var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/library/modules/_is-object.js");
var has = __webpack_require__(/*! ./_has */ "./node_modules/core-js/library/modules/_has.js");
var setDesc = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/library/modules/_object-dp.js").f;
var id = 0;
var isExtensible = Object.isExtensible || function () {
  return true;
};
var FREEZE = !__webpack_require__(/*! ./_fails */ "./node_modules/core-js/library/modules/_fails.js")(function () {
  return isExtensible(Object.preventExtensions({}));
});
var setMeta = function (it) {
  setDesc(it, META, { value: {
    i: 'O' + ++id, // object ID
    w: {}          // weak collections IDs
  } });
};
var fastKey = function (it, create) {
  // return primitive with prefix
  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return 'F';
    // not necessary to add metadata
    if (!create) return 'E';
    // add missing metadata
    setMeta(it);
  // return object ID
  } return it[META].i;
};
var getWeak = function (it, create) {
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return true;
    // not necessary to add metadata
    if (!create) return false;
    // add missing metadata
    setMeta(it);
  // return hash weak collections IDs
  } return it[META].w;
};
// add metadata on freeze-family methods calling
var onFreeze = function (it) {
  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);
  return it;
};
var meta = module.exports = {
  KEY: META,
  NEED: false,
  fastKey: fastKey,
  getWeak: getWeak,
  onFreeze: onFreeze
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_microtask.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_microtask.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/library/modules/_global.js");
var macrotask = __webpack_require__(/*! ./_task */ "./node_modules/core-js/library/modules/_task.js").set;
var Observer = global.MutationObserver || global.WebKitMutationObserver;
var process = global.process;
var Promise = global.Promise;
var isNode = __webpack_require__(/*! ./_cof */ "./node_modules/core-js/library/modules/_cof.js")(process) == 'process';

module.exports = function () {
  var head, last, notify;

  var flush = function () {
    var parent, fn;
    if (isNode && (parent = process.domain)) parent.exit();
    while (head) {
      fn = head.fn;
      head = head.next;
      try {
        fn();
      } catch (e) {
        if (head) notify();
        else last = undefined;
        throw e;
      }
    } last = undefined;
    if (parent) parent.enter();
  };

  // Node.js
  if (isNode) {
    notify = function () {
      process.nextTick(flush);
    };
  // browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339
  } else if (Observer && !(global.navigator && global.navigator.standalone)) {
    var toggle = true;
    var node = document.createTextNode('');
    new Observer(flush).observe(node, { characterData: true }); // eslint-disable-line no-new
    notify = function () {
      node.data = toggle = !toggle;
    };
  // environments with maybe non-completely correct, but existent Promise
  } else if (Promise && Promise.resolve) {
    // Promise.resolve without an argument throws an error in LG WebOS 2
    var promise = Promise.resolve(undefined);
    notify = function () {
      promise.then(flush);
    };
  // for other environments - macrotask based on:
  // - setImmediate
  // - MessageChannel
  // - window.postMessag
  // - onreadystatechange
  // - setTimeout
  } else {
    notify = function () {
      // strange IE + webpack dev server bug - use .call(global)
      macrotask.call(global, flush);
    };
  }

  return function (fn) {
    var task = { fn: fn, next: undefined };
    if (last) last.next = task;
    if (!head) {
      head = task;
      notify();
    } last = task;
  };
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_new-promise-capability.js":
/*!*************************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_new-promise-capability.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 25.4.1.5 NewPromiseCapability(C)
var aFunction = __webpack_require__(/*! ./_a-function */ "./node_modules/core-js/library/modules/_a-function.js");

function PromiseCapability(C) {
  var resolve, reject;
  this.promise = new C(function ($$resolve, $$reject) {
    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');
    resolve = $$resolve;
    reject = $$reject;
  });
  this.resolve = aFunction(resolve);
  this.reject = aFunction(reject);
}

module.exports.f = function (C) {
  return new PromiseCapability(C);
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_object-assign.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_object-assign.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 19.1.2.1 Object.assign(target, source, ...)
var getKeys = __webpack_require__(/*! ./_object-keys */ "./node_modules/core-js/library/modules/_object-keys.js");
var gOPS = __webpack_require__(/*! ./_object-gops */ "./node_modules/core-js/library/modules/_object-gops.js");
var pIE = __webpack_require__(/*! ./_object-pie */ "./node_modules/core-js/library/modules/_object-pie.js");
var toObject = __webpack_require__(/*! ./_to-object */ "./node_modules/core-js/library/modules/_to-object.js");
var IObject = __webpack_require__(/*! ./_iobject */ "./node_modules/core-js/library/modules/_iobject.js");
var $assign = Object.assign;

// should work with symbols and should have deterministic property order (V8 bug)
module.exports = !$assign || __webpack_require__(/*! ./_fails */ "./node_modules/core-js/library/modules/_fails.js")(function () {
  var A = {};
  var B = {};
  // eslint-disable-next-line no-undef
  var S = Symbol();
  var K = 'abcdefghijklmnopqrst';
  A[S] = 7;
  K.split('').forEach(function (k) { B[k] = k; });
  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
}) ? function assign(target, source) { // eslint-disable-line no-unused-vars
  var T = toObject(target);
  var aLen = arguments.length;
  var index = 1;
  var getSymbols = gOPS.f;
  var isEnum = pIE.f;
  while (aLen > index) {
    var S = IObject(arguments[index++]);
    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);
    var length = keys.length;
    var j = 0;
    var key;
    while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];
  } return T;
} : $assign;


/***/ }),

/***/ "./node_modules/core-js/library/modules/_object-create.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_object-create.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/library/modules/_an-object.js");
var dPs = __webpack_require__(/*! ./_object-dps */ "./node_modules/core-js/library/modules/_object-dps.js");
var enumBugKeys = __webpack_require__(/*! ./_enum-bug-keys */ "./node_modules/core-js/library/modules/_enum-bug-keys.js");
var IE_PROTO = __webpack_require__(/*! ./_shared-key */ "./node_modules/core-js/library/modules/_shared-key.js")('IE_PROTO');
var Empty = function () { /* empty */ };
var PROTOTYPE = 'prototype';

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var createDict = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = __webpack_require__(/*! ./_dom-create */ "./node_modules/core-js/library/modules/_dom-create.js")('iframe');
  var i = enumBugKeys.length;
  var lt = '<';
  var gt = '>';
  var iframeDocument;
  iframe.style.display = 'none';
  __webpack_require__(/*! ./_html */ "./node_modules/core-js/library/modules/_html.js").appendChild(iframe);
  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
  // createDict = iframe.contentWindow.Object;
  // html.removeChild(iframe);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
  iframeDocument.close();
  createDict = iframeDocument.F;
  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
  return createDict();
};

module.exports = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    Empty[PROTOTYPE] = anObject(O);
    result = new Empty();
    Empty[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = createDict();
  return Properties === undefined ? result : dPs(result, Properties);
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_object-dp.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_object-dp.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/library/modules/_an-object.js");
var IE8_DOM_DEFINE = __webpack_require__(/*! ./_ie8-dom-define */ "./node_modules/core-js/library/modules/_ie8-dom-define.js");
var toPrimitive = __webpack_require__(/*! ./_to-primitive */ "./node_modules/core-js/library/modules/_to-primitive.js");
var dP = Object.defineProperty;

exports.f = __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/library/modules/_descriptors.js") ? Object.defineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return dP(O, P, Attributes);
  } catch (e) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_object-dps.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_object-dps.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/library/modules/_object-dp.js");
var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/library/modules/_an-object.js");
var getKeys = __webpack_require__(/*! ./_object-keys */ "./node_modules/core-js/library/modules/_object-keys.js");

module.exports = __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/library/modules/_descriptors.js") ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var keys = getKeys(Properties);
  var length = keys.length;
  var i = 0;
  var P;
  while (length > i) dP.f(O, P = keys[i++], Properties[P]);
  return O;
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_object-gopd.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_object-gopd.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var pIE = __webpack_require__(/*! ./_object-pie */ "./node_modules/core-js/library/modules/_object-pie.js");
var createDesc = __webpack_require__(/*! ./_property-desc */ "./node_modules/core-js/library/modules/_property-desc.js");
var toIObject = __webpack_require__(/*! ./_to-iobject */ "./node_modules/core-js/library/modules/_to-iobject.js");
var toPrimitive = __webpack_require__(/*! ./_to-primitive */ "./node_modules/core-js/library/modules/_to-primitive.js");
var has = __webpack_require__(/*! ./_has */ "./node_modules/core-js/library/modules/_has.js");
var IE8_DOM_DEFINE = __webpack_require__(/*! ./_ie8-dom-define */ "./node_modules/core-js/library/modules/_ie8-dom-define.js");
var gOPD = Object.getOwnPropertyDescriptor;

exports.f = __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/library/modules/_descriptors.js") ? gOPD : function getOwnPropertyDescriptor(O, P) {
  O = toIObject(O);
  P = toPrimitive(P, true);
  if (IE8_DOM_DEFINE) try {
    return gOPD(O, P);
  } catch (e) { /* empty */ }
  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_object-gops.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_object-gops.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

exports.f = Object.getOwnPropertySymbols;


/***/ }),

/***/ "./node_modules/core-js/library/modules/_object-gpo.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_object-gpo.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
var has = __webpack_require__(/*! ./_has */ "./node_modules/core-js/library/modules/_has.js");
var toObject = __webpack_require__(/*! ./_to-object */ "./node_modules/core-js/library/modules/_to-object.js");
var IE_PROTO = __webpack_require__(/*! ./_shared-key */ "./node_modules/core-js/library/modules/_shared-key.js")('IE_PROTO');
var ObjectProto = Object.prototype;

module.exports = Object.getPrototypeOf || function (O) {
  O = toObject(O);
  if (has(O, IE_PROTO)) return O[IE_PROTO];
  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
    return O.constructor.prototype;
  } return O instanceof Object ? ObjectProto : null;
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_object-keys-internal.js":
/*!***********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_object-keys-internal.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var has = __webpack_require__(/*! ./_has */ "./node_modules/core-js/library/modules/_has.js");
var toIObject = __webpack_require__(/*! ./_to-iobject */ "./node_modules/core-js/library/modules/_to-iobject.js");
var arrayIndexOf = __webpack_require__(/*! ./_array-includes */ "./node_modules/core-js/library/modules/_array-includes.js")(false);
var IE_PROTO = __webpack_require__(/*! ./_shared-key */ "./node_modules/core-js/library/modules/_shared-key.js")('IE_PROTO');

module.exports = function (object, names) {
  var O = toIObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (has(O, key = names[i++])) {
    ~arrayIndexOf(result, key) || result.push(key);
  }
  return result;
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_object-keys.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_object-keys.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.14 / 15.2.3.14 Object.keys(O)
var $keys = __webpack_require__(/*! ./_object-keys-internal */ "./node_modules/core-js/library/modules/_object-keys-internal.js");
var enumBugKeys = __webpack_require__(/*! ./_enum-bug-keys */ "./node_modules/core-js/library/modules/_enum-bug-keys.js");

module.exports = Object.keys || function keys(O) {
  return $keys(O, enumBugKeys);
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_object-pie.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_object-pie.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

exports.f = {}.propertyIsEnumerable;


/***/ }),

/***/ "./node_modules/core-js/library/modules/_object-sap.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_object-sap.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// most Object methods by ES6 should accept primitives
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/library/modules/_export.js");
var core = __webpack_require__(/*! ./_core */ "./node_modules/core-js/library/modules/_core.js");
var fails = __webpack_require__(/*! ./_fails */ "./node_modules/core-js/library/modules/_fails.js");
module.exports = function (KEY, exec) {
  var fn = (core.Object || {})[KEY] || Object[KEY];
  var exp = {};
  exp[KEY] = exec(fn);
  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_perform.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/library/modules/_perform.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return { e: false, v: exec() };
  } catch (e) {
    return { e: true, v: e };
  }
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_promise-resolve.js":
/*!******************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_promise-resolve.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/library/modules/_an-object.js");
var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/library/modules/_is-object.js");
var newPromiseCapability = __webpack_require__(/*! ./_new-promise-capability */ "./node_modules/core-js/library/modules/_new-promise-capability.js");

module.exports = function (C, x) {
  anObject(C);
  if (isObject(x) && x.constructor === C) return x;
  var promiseCapability = newPromiseCapability.f(C);
  var resolve = promiseCapability.resolve;
  resolve(x);
  return promiseCapability.promise;
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_property-desc.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_property-desc.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_redefine-all.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_redefine-all.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var hide = __webpack_require__(/*! ./_hide */ "./node_modules/core-js/library/modules/_hide.js");
module.exports = function (target, src, safe) {
  for (var key in src) {
    if (safe && target[key]) target[key] = src[key];
    else hide(target, key, src[key]);
  } return target;
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_redefine.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/library/modules/_redefine.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! ./_hide */ "./node_modules/core-js/library/modules/_hide.js");


/***/ }),

/***/ "./node_modules/core-js/library/modules/_set-collection-from.js":
/*!**********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_set-collection-from.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// https://tc39.github.io/proposal-setmap-offrom/
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/library/modules/_export.js");
var aFunction = __webpack_require__(/*! ./_a-function */ "./node_modules/core-js/library/modules/_a-function.js");
var ctx = __webpack_require__(/*! ./_ctx */ "./node_modules/core-js/library/modules/_ctx.js");
var forOf = __webpack_require__(/*! ./_for-of */ "./node_modules/core-js/library/modules/_for-of.js");

module.exports = function (COLLECTION) {
  $export($export.S, COLLECTION, { from: function from(source /* , mapFn, thisArg */) {
    var mapFn = arguments[1];
    var mapping, A, n, cb;
    aFunction(this);
    mapping = mapFn !== undefined;
    if (mapping) aFunction(mapFn);
    if (source == undefined) return new this();
    A = [];
    if (mapping) {
      n = 0;
      cb = ctx(mapFn, arguments[2], 2);
      forOf(source, false, function (nextItem) {
        A.push(cb(nextItem, n++));
      });
    } else {
      forOf(source, false, A.push, A);
    }
    return new this(A);
  } });
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_set-collection-of.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_set-collection-of.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// https://tc39.github.io/proposal-setmap-offrom/
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/library/modules/_export.js");

module.exports = function (COLLECTION) {
  $export($export.S, COLLECTION, { of: function of() {
    var length = arguments.length;
    var A = new Array(length);
    while (length--) A[length] = arguments[length];
    return new this(A);
  } });
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_set-species.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_set-species.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/library/modules/_global.js");
var core = __webpack_require__(/*! ./_core */ "./node_modules/core-js/library/modules/_core.js");
var dP = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/library/modules/_object-dp.js");
var DESCRIPTORS = __webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/library/modules/_descriptors.js");
var SPECIES = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/library/modules/_wks.js")('species');

module.exports = function (KEY) {
  var C = typeof core[KEY] == 'function' ? core[KEY] : global[KEY];
  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {
    configurable: true,
    get: function () { return this; }
  });
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_set-to-string-tag.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_set-to-string-tag.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var def = __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/library/modules/_object-dp.js").f;
var has = __webpack_require__(/*! ./_has */ "./node_modules/core-js/library/modules/_has.js");
var TAG = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/library/modules/_wks.js")('toStringTag');

module.exports = function (it, tag, stat) {
  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_shared-key.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_shared-key.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var shared = __webpack_require__(/*! ./_shared */ "./node_modules/core-js/library/modules/_shared.js")('keys');
var uid = __webpack_require__(/*! ./_uid */ "./node_modules/core-js/library/modules/_uid.js");
module.exports = function (key) {
  return shared[key] || (shared[key] = uid(key));
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_shared.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/library/modules/_shared.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var core = __webpack_require__(/*! ./_core */ "./node_modules/core-js/library/modules/_core.js");
var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/library/modules/_global.js");
var SHARED = '__core-js_shared__';
var store = global[SHARED] || (global[SHARED] = {});

(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: core.version,
  mode: __webpack_require__(/*! ./_library */ "./node_modules/core-js/library/modules/_library.js") ? 'pure' : 'global',
  copyright: '© 2018 Denis Pushkarev (zloirock.ru)'
});


/***/ }),

/***/ "./node_modules/core-js/library/modules/_species-constructor.js":
/*!**********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_species-constructor.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 7.3.20 SpeciesConstructor(O, defaultConstructor)
var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/core-js/library/modules/_an-object.js");
var aFunction = __webpack_require__(/*! ./_a-function */ "./node_modules/core-js/library/modules/_a-function.js");
var SPECIES = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/library/modules/_wks.js")('species');
module.exports = function (O, D) {
  var C = anObject(O).constructor;
  var S;
  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_string-at.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_string-at.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(/*! ./_to-integer */ "./node_modules/core-js/library/modules/_to-integer.js");
var defined = __webpack_require__(/*! ./_defined */ "./node_modules/core-js/library/modules/_defined.js");
// true  -> String#at
// false -> String#codePointAt
module.exports = function (TO_STRING) {
  return function (that, pos) {
    var s = String(defined(that));
    var i = toInteger(pos);
    var l = s.length;
    var a, b;
    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
    a = s.charCodeAt(i);
    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
      ? TO_STRING ? s.charAt(i) : a
      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
  };
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_task.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/library/modules/_task.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var ctx = __webpack_require__(/*! ./_ctx */ "./node_modules/core-js/library/modules/_ctx.js");
var invoke = __webpack_require__(/*! ./_invoke */ "./node_modules/core-js/library/modules/_invoke.js");
var html = __webpack_require__(/*! ./_html */ "./node_modules/core-js/library/modules/_html.js");
var cel = __webpack_require__(/*! ./_dom-create */ "./node_modules/core-js/library/modules/_dom-create.js");
var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/library/modules/_global.js");
var process = global.process;
var setTask = global.setImmediate;
var clearTask = global.clearImmediate;
var MessageChannel = global.MessageChannel;
var Dispatch = global.Dispatch;
var counter = 0;
var queue = {};
var ONREADYSTATECHANGE = 'onreadystatechange';
var defer, channel, port;
var run = function () {
  var id = +this;
  // eslint-disable-next-line no-prototype-builtins
  if (queue.hasOwnProperty(id)) {
    var fn = queue[id];
    delete queue[id];
    fn();
  }
};
var listener = function (event) {
  run.call(event.data);
};
// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
if (!setTask || !clearTask) {
  setTask = function setImmediate(fn) {
    var args = [];
    var i = 1;
    while (arguments.length > i) args.push(arguments[i++]);
    queue[++counter] = function () {
      // eslint-disable-next-line no-new-func
      invoke(typeof fn == 'function' ? fn : Function(fn), args);
    };
    defer(counter);
    return counter;
  };
  clearTask = function clearImmediate(id) {
    delete queue[id];
  };
  // Node.js 0.8-
  if (__webpack_require__(/*! ./_cof */ "./node_modules/core-js/library/modules/_cof.js")(process) == 'process') {
    defer = function (id) {
      process.nextTick(ctx(run, id, 1));
    };
  // Sphere (JS game engine) Dispatch API
  } else if (Dispatch && Dispatch.now) {
    defer = function (id) {
      Dispatch.now(ctx(run, id, 1));
    };
  // Browsers with MessageChannel, includes WebWorkers
  } else if (MessageChannel) {
    channel = new MessageChannel();
    port = channel.port2;
    channel.port1.onmessage = listener;
    defer = ctx(port.postMessage, port, 1);
  // Browsers with postMessage, skip WebWorkers
  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {
    defer = function (id) {
      global.postMessage(id + '', '*');
    };
    global.addEventListener('message', listener, false);
  // IE8-
  } else if (ONREADYSTATECHANGE in cel('script')) {
    defer = function (id) {
      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {
        html.removeChild(this);
        run.call(id);
      };
    };
  // Rest old browsers
  } else {
    defer = function (id) {
      setTimeout(ctx(run, id, 1), 0);
    };
  }
}
module.exports = {
  set: setTask,
  clear: clearTask
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_to-absolute-index.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_to-absolute-index.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(/*! ./_to-integer */ "./node_modules/core-js/library/modules/_to-integer.js");
var max = Math.max;
var min = Math.min;
module.exports = function (index, length) {
  index = toInteger(index);
  return index < 0 ? max(index + length, 0) : min(index, length);
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_to-integer.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_to-integer.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// 7.1.4 ToInteger
var ceil = Math.ceil;
var floor = Math.floor;
module.exports = function (it) {
  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_to-iobject.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_to-iobject.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// to indexed object, toObject with fallback for non-array-like ES3 strings
var IObject = __webpack_require__(/*! ./_iobject */ "./node_modules/core-js/library/modules/_iobject.js");
var defined = __webpack_require__(/*! ./_defined */ "./node_modules/core-js/library/modules/_defined.js");
module.exports = function (it) {
  return IObject(defined(it));
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_to-length.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_to-length.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.15 ToLength
var toInteger = __webpack_require__(/*! ./_to-integer */ "./node_modules/core-js/library/modules/_to-integer.js");
var min = Math.min;
module.exports = function (it) {
  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_to-object.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_to-object.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.13 ToObject(argument)
var defined = __webpack_require__(/*! ./_defined */ "./node_modules/core-js/library/modules/_defined.js");
module.exports = function (it) {
  return Object(defined(it));
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_to-primitive.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_to-primitive.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.1 ToPrimitive(input [, PreferredType])
var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/library/modules/_is-object.js");
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
module.exports = function (it, S) {
  if (!isObject(it)) return it;
  var fn, val;
  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  throw TypeError("Can't convert object to primitive value");
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_uid.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/library/modules/_uid.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var id = 0;
var px = Math.random();
module.exports = function (key) {
  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_user-agent.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_user-agent.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/library/modules/_global.js");
var navigator = global.navigator;

module.exports = navigator && navigator.userAgent || '';


/***/ }),

/***/ "./node_modules/core-js/library/modules/_validate-collection.js":
/*!**********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_validate-collection.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/library/modules/_is-object.js");
module.exports = function (it, TYPE) {
  if (!isObject(it) || it._t !== TYPE) throw TypeError('Incompatible receiver, ' + TYPE + ' required!');
  return it;
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/_wks.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/library/modules/_wks.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var store = __webpack_require__(/*! ./_shared */ "./node_modules/core-js/library/modules/_shared.js")('wks');
var uid = __webpack_require__(/*! ./_uid */ "./node_modules/core-js/library/modules/_uid.js");
var Symbol = __webpack_require__(/*! ./_global */ "./node_modules/core-js/library/modules/_global.js").Symbol;
var USE_SYMBOL = typeof Symbol == 'function';

var $exports = module.exports = function (name) {
  return store[name] || (store[name] =
    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
};

$exports.store = store;


/***/ }),

/***/ "./node_modules/core-js/library/modules/core.get-iterator-method.js":
/*!**************************************************************************!*\
  !*** ./node_modules/core-js/library/modules/core.get-iterator-method.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__(/*! ./_classof */ "./node_modules/core-js/library/modules/_classof.js");
var ITERATOR = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/library/modules/_wks.js")('iterator');
var Iterators = __webpack_require__(/*! ./_iterators */ "./node_modules/core-js/library/modules/_iterators.js");
module.exports = __webpack_require__(/*! ./_core */ "./node_modules/core-js/library/modules/_core.js").getIteratorMethod = function (it) {
  if (it != undefined) return it[ITERATOR]
    || it['@@iterator']
    || Iterators[classof(it)];
};


/***/ }),

/***/ "./node_modules/core-js/library/modules/es6.array.iterator.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es6.array.iterator.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var addToUnscopables = __webpack_require__(/*! ./_add-to-unscopables */ "./node_modules/core-js/library/modules/_add-to-unscopables.js");
var step = __webpack_require__(/*! ./_iter-step */ "./node_modules/core-js/library/modules/_iter-step.js");
var Iterators = __webpack_require__(/*! ./_iterators */ "./node_modules/core-js/library/modules/_iterators.js");
var toIObject = __webpack_require__(/*! ./_to-iobject */ "./node_modules/core-js/library/modules/_to-iobject.js");

// 22.1.3.4 Array.prototype.entries()
// 22.1.3.13 Array.prototype.keys()
// 22.1.3.29 Array.prototype.values()
// 22.1.3.30 Array.prototype[@@iterator]()
module.exports = __webpack_require__(/*! ./_iter-define */ "./node_modules/core-js/library/modules/_iter-define.js")(Array, 'Array', function (iterated, kind) {
  this._t = toIObject(iterated); // target
  this._i = 0;                   // next index
  this._k = kind;                // kind
// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var kind = this._k;
  var index = this._i++;
  if (!O || index >= O.length) {
    this._t = undefined;
    return step(1);
  }
  if (kind == 'keys') return step(0, index);
  if (kind == 'values') return step(0, O[index]);
  return step(0, [index, O[index]]);
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
Iterators.Arguments = Iterators.Array;

addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');


/***/ }),

/***/ "./node_modules/core-js/library/modules/es6.map.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/library/modules/es6.map.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var strong = __webpack_require__(/*! ./_collection-strong */ "./node_modules/core-js/library/modules/_collection-strong.js");
var validate = __webpack_require__(/*! ./_validate-collection */ "./node_modules/core-js/library/modules/_validate-collection.js");
var MAP = 'Map';

// 23.1 Map Objects
module.exports = __webpack_require__(/*! ./_collection */ "./node_modules/core-js/library/modules/_collection.js")(MAP, function (get) {
  return function Map() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };
}, {
  // 23.1.3.6 Map.prototype.get(key)
  get: function get(key) {
    var entry = strong.getEntry(validate(this, MAP), key);
    return entry && entry.v;
  },
  // 23.1.3.9 Map.prototype.set(key, value)
  set: function set(key, value) {
    return strong.def(validate(this, MAP), key === 0 ? 0 : key, value);
  }
}, strong, true);


/***/ }),

/***/ "./node_modules/core-js/library/modules/es6.object.assign.js":
/*!*******************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es6.object.assign.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.3.1 Object.assign(target, source)
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/library/modules/_export.js");

$export($export.S + $export.F, 'Object', { assign: __webpack_require__(/*! ./_object-assign */ "./node_modules/core-js/library/modules/_object-assign.js") });


/***/ }),

/***/ "./node_modules/core-js/library/modules/es6.object.define-property.js":
/*!****************************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es6.object.define-property.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/library/modules/_export.js");
// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
$export($export.S + $export.F * !__webpack_require__(/*! ./_descriptors */ "./node_modules/core-js/library/modules/_descriptors.js"), 'Object', { defineProperty: __webpack_require__(/*! ./_object-dp */ "./node_modules/core-js/library/modules/_object-dp.js").f });


/***/ }),

/***/ "./node_modules/core-js/library/modules/es6.object.get-own-property-descriptor.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es6.object.get-own-property-descriptor.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
var toIObject = __webpack_require__(/*! ./_to-iobject */ "./node_modules/core-js/library/modules/_to-iobject.js");
var $getOwnPropertyDescriptor = __webpack_require__(/*! ./_object-gopd */ "./node_modules/core-js/library/modules/_object-gopd.js").f;

__webpack_require__(/*! ./_object-sap */ "./node_modules/core-js/library/modules/_object-sap.js")('getOwnPropertyDescriptor', function () {
  return function getOwnPropertyDescriptor(it, key) {
    return $getOwnPropertyDescriptor(toIObject(it), key);
  };
});


/***/ }),

/***/ "./node_modules/core-js/library/modules/es6.object.keys.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es6.object.keys.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.14 Object.keys(O)
var toObject = __webpack_require__(/*! ./_to-object */ "./node_modules/core-js/library/modules/_to-object.js");
var $keys = __webpack_require__(/*! ./_object-keys */ "./node_modules/core-js/library/modules/_object-keys.js");

__webpack_require__(/*! ./_object-sap */ "./node_modules/core-js/library/modules/_object-sap.js")('keys', function () {
  return function keys(it) {
    return $keys(toObject(it));
  };
});


/***/ }),

/***/ "./node_modules/core-js/library/modules/es6.object.to-string.js":
/*!**********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es6.object.to-string.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {



/***/ }),

/***/ "./node_modules/core-js/library/modules/es6.promise.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es6.promise.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var LIBRARY = __webpack_require__(/*! ./_library */ "./node_modules/core-js/library/modules/_library.js");
var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/library/modules/_global.js");
var ctx = __webpack_require__(/*! ./_ctx */ "./node_modules/core-js/library/modules/_ctx.js");
var classof = __webpack_require__(/*! ./_classof */ "./node_modules/core-js/library/modules/_classof.js");
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/library/modules/_export.js");
var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/core-js/library/modules/_is-object.js");
var aFunction = __webpack_require__(/*! ./_a-function */ "./node_modules/core-js/library/modules/_a-function.js");
var anInstance = __webpack_require__(/*! ./_an-instance */ "./node_modules/core-js/library/modules/_an-instance.js");
var forOf = __webpack_require__(/*! ./_for-of */ "./node_modules/core-js/library/modules/_for-of.js");
var speciesConstructor = __webpack_require__(/*! ./_species-constructor */ "./node_modules/core-js/library/modules/_species-constructor.js");
var task = __webpack_require__(/*! ./_task */ "./node_modules/core-js/library/modules/_task.js").set;
var microtask = __webpack_require__(/*! ./_microtask */ "./node_modules/core-js/library/modules/_microtask.js")();
var newPromiseCapabilityModule = __webpack_require__(/*! ./_new-promise-capability */ "./node_modules/core-js/library/modules/_new-promise-capability.js");
var perform = __webpack_require__(/*! ./_perform */ "./node_modules/core-js/library/modules/_perform.js");
var userAgent = __webpack_require__(/*! ./_user-agent */ "./node_modules/core-js/library/modules/_user-agent.js");
var promiseResolve = __webpack_require__(/*! ./_promise-resolve */ "./node_modules/core-js/library/modules/_promise-resolve.js");
var PROMISE = 'Promise';
var TypeError = global.TypeError;
var process = global.process;
var versions = process && process.versions;
var v8 = versions && versions.v8 || '';
var $Promise = global[PROMISE];
var isNode = classof(process) == 'process';
var empty = function () { /* empty */ };
var Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;
var newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;

var USE_NATIVE = !!function () {
  try {
    // correct subclassing with @@species support
    var promise = $Promise.resolve(1);
    var FakePromise = (promise.constructor = {})[__webpack_require__(/*! ./_wks */ "./node_modules/core-js/library/modules/_wks.js")('species')] = function (exec) {
      exec(empty, empty);
    };
    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test
    return (isNode || typeof PromiseRejectionEvent == 'function')
      && promise.then(empty) instanceof FakePromise
      // v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables
      // https://bugs.chromium.org/p/chromium/issues/detail?id=830565
      // we can't detect it synchronously, so just check versions
      && v8.indexOf('6.6') !== 0
      && userAgent.indexOf('Chrome/66') === -1;
  } catch (e) { /* empty */ }
}();

// helpers
var isThenable = function (it) {
  var then;
  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;
};
var notify = function (promise, isReject) {
  if (promise._n) return;
  promise._n = true;
  var chain = promise._c;
  microtask(function () {
    var value = promise._v;
    var ok = promise._s == 1;
    var i = 0;
    var run = function (reaction) {
      var handler = ok ? reaction.ok : reaction.fail;
      var resolve = reaction.resolve;
      var reject = reaction.reject;
      var domain = reaction.domain;
      var result, then, exited;
      try {
        if (handler) {
          if (!ok) {
            if (promise._h == 2) onHandleUnhandled(promise);
            promise._h = 1;
          }
          if (handler === true) result = value;
          else {
            if (domain) domain.enter();
            result = handler(value); // may throw
            if (domain) {
              domain.exit();
              exited = true;
            }
          }
          if (result === reaction.promise) {
            reject(TypeError('Promise-chain cycle'));
          } else if (then = isThenable(result)) {
            then.call(result, resolve, reject);
          } else resolve(result);
        } else reject(value);
      } catch (e) {
        if (domain && !exited) domain.exit();
        reject(e);
      }
    };
    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach
    promise._c = [];
    promise._n = false;
    if (isReject && !promise._h) onUnhandled(promise);
  });
};
var onUnhandled = function (promise) {
  task.call(global, function () {
    var value = promise._v;
    var unhandled = isUnhandled(promise);
    var result, handler, console;
    if (unhandled) {
      result = perform(function () {
        if (isNode) {
          process.emit('unhandledRejection', value, promise);
        } else if (handler = global.onunhandledrejection) {
          handler({ promise: promise, reason: value });
        } else if ((console = global.console) && console.error) {
          console.error('Unhandled promise rejection', value);
        }
      });
      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
      promise._h = isNode || isUnhandled(promise) ? 2 : 1;
    } promise._a = undefined;
    if (unhandled && result.e) throw result.v;
  });
};
var isUnhandled = function (promise) {
  return promise._h !== 1 && (promise._a || promise._c).length === 0;
};
var onHandleUnhandled = function (promise) {
  task.call(global, function () {
    var handler;
    if (isNode) {
      process.emit('rejectionHandled', promise);
    } else if (handler = global.onrejectionhandled) {
      handler({ promise: promise, reason: promise._v });
    }
  });
};
var $reject = function (value) {
  var promise = this;
  if (promise._d) return;
  promise._d = true;
  promise = promise._w || promise; // unwrap
  promise._v = value;
  promise._s = 2;
  if (!promise._a) promise._a = promise._c.slice();
  notify(promise, true);
};
var $resolve = function (value) {
  var promise = this;
  var then;
  if (promise._d) return;
  promise._d = true;
  promise = promise._w || promise; // unwrap
  try {
    if (promise === value) throw TypeError("Promise can't be resolved itself");
    if (then = isThenable(value)) {
      microtask(function () {
        var wrapper = { _w: promise, _d: false }; // wrap
        try {
          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));
        } catch (e) {
          $reject.call(wrapper, e);
        }
      });
    } else {
      promise._v = value;
      promise._s = 1;
      notify(promise, false);
    }
  } catch (e) {
    $reject.call({ _w: promise, _d: false }, e); // wrap
  }
};

// constructor polyfill
if (!USE_NATIVE) {
  // 25.4.3.1 Promise(executor)
  $Promise = function Promise(executor) {
    anInstance(this, $Promise, PROMISE, '_h');
    aFunction(executor);
    Internal.call(this);
    try {
      executor(ctx($resolve, this, 1), ctx($reject, this, 1));
    } catch (err) {
      $reject.call(this, err);
    }
  };
  // eslint-disable-next-line no-unused-vars
  Internal = function Promise(executor) {
    this._c = [];             // <- awaiting reactions
    this._a = undefined;      // <- checked in isUnhandled reactions
    this._s = 0;              // <- state
    this._d = false;          // <- done
    this._v = undefined;      // <- value
    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled
    this._n = false;          // <- notify
  };
  Internal.prototype = __webpack_require__(/*! ./_redefine-all */ "./node_modules/core-js/library/modules/_redefine-all.js")($Promise.prototype, {
    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)
    then: function then(onFulfilled, onRejected) {
      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));
      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;
      reaction.fail = typeof onRejected == 'function' && onRejected;
      reaction.domain = isNode ? process.domain : undefined;
      this._c.push(reaction);
      if (this._a) this._a.push(reaction);
      if (this._s) notify(this, false);
      return reaction.promise;
    },
    // 25.4.5.1 Promise.prototype.catch(onRejected)
    'catch': function (onRejected) {
      return this.then(undefined, onRejected);
    }
  });
  OwnPromiseCapability = function () {
    var promise = new Internal();
    this.promise = promise;
    this.resolve = ctx($resolve, promise, 1);
    this.reject = ctx($reject, promise, 1);
  };
  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {
    return C === $Promise || C === Wrapper
      ? new OwnPromiseCapability(C)
      : newGenericPromiseCapability(C);
  };
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });
__webpack_require__(/*! ./_set-to-string-tag */ "./node_modules/core-js/library/modules/_set-to-string-tag.js")($Promise, PROMISE);
__webpack_require__(/*! ./_set-species */ "./node_modules/core-js/library/modules/_set-species.js")(PROMISE);
Wrapper = __webpack_require__(/*! ./_core */ "./node_modules/core-js/library/modules/_core.js")[PROMISE];

// statics
$export($export.S + $export.F * !USE_NATIVE, PROMISE, {
  // 25.4.4.5 Promise.reject(r)
  reject: function reject(r) {
    var capability = newPromiseCapability(this);
    var $$reject = capability.reject;
    $$reject(r);
    return capability.promise;
  }
});
$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {
  // 25.4.4.6 Promise.resolve(x)
  resolve: function resolve(x) {
    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);
  }
});
$export($export.S + $export.F * !(USE_NATIVE && __webpack_require__(/*! ./_iter-detect */ "./node_modules/core-js/library/modules/_iter-detect.js")(function (iter) {
  $Promise.all(iter)['catch'](empty);
})), PROMISE, {
  // 25.4.4.1 Promise.all(iterable)
  all: function all(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var resolve = capability.resolve;
    var reject = capability.reject;
    var result = perform(function () {
      var values = [];
      var index = 0;
      var remaining = 1;
      forOf(iterable, false, function (promise) {
        var $index = index++;
        var alreadyCalled = false;
        values.push(undefined);
        remaining++;
        C.resolve(promise).then(function (value) {
          if (alreadyCalled) return;
          alreadyCalled = true;
          values[$index] = value;
          --remaining || resolve(values);
        }, reject);
      });
      --remaining || resolve(values);
    });
    if (result.e) reject(result.v);
    return capability.promise;
  },
  // 25.4.4.4 Promise.race(iterable)
  race: function race(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var reject = capability.reject;
    var result = perform(function () {
      forOf(iterable, false, function (promise) {
        C.resolve(promise).then(capability.resolve, reject);
      });
    });
    if (result.e) reject(result.v);
    return capability.promise;
  }
});


/***/ }),

/***/ "./node_modules/core-js/library/modules/es6.string.iterator.js":
/*!*********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es6.string.iterator.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $at = __webpack_require__(/*! ./_string-at */ "./node_modules/core-js/library/modules/_string-at.js")(true);

// 21.1.3.27 String.prototype[@@iterator]()
__webpack_require__(/*! ./_iter-define */ "./node_modules/core-js/library/modules/_iter-define.js")(String, 'String', function (iterated) {
  this._t = String(iterated); // target
  this._i = 0;                // next index
// 21.1.5.2.1 %StringIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var index = this._i;
  var point;
  if (index >= O.length) return { value: undefined, done: true };
  point = $at(O, index);
  this._i += point.length;
  return { value: point, done: false };
});


/***/ }),

/***/ "./node_modules/core-js/library/modules/es7.map.from.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es7.map.from.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// https://tc39.github.io/proposal-setmap-offrom/#sec-map.from
__webpack_require__(/*! ./_set-collection-from */ "./node_modules/core-js/library/modules/_set-collection-from.js")('Map');


/***/ }),

/***/ "./node_modules/core-js/library/modules/es7.map.of.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es7.map.of.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// https://tc39.github.io/proposal-setmap-offrom/#sec-map.of
__webpack_require__(/*! ./_set-collection-of */ "./node_modules/core-js/library/modules/_set-collection-of.js")('Map');


/***/ }),

/***/ "./node_modules/core-js/library/modules/es7.map.to-json.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es7.map.to-json.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// https://github.com/DavidBruant/Map-Set.prototype.toJSON
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/library/modules/_export.js");

$export($export.P + $export.R, 'Map', { toJSON: __webpack_require__(/*! ./_collection-to-json */ "./node_modules/core-js/library/modules/_collection-to-json.js")('Map') });


/***/ }),

/***/ "./node_modules/core-js/library/modules/es7.promise.finally.js":
/*!*********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es7.promise.finally.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// https://github.com/tc39/proposal-promise-finally

var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/library/modules/_export.js");
var core = __webpack_require__(/*! ./_core */ "./node_modules/core-js/library/modules/_core.js");
var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/library/modules/_global.js");
var speciesConstructor = __webpack_require__(/*! ./_species-constructor */ "./node_modules/core-js/library/modules/_species-constructor.js");
var promiseResolve = __webpack_require__(/*! ./_promise-resolve */ "./node_modules/core-js/library/modules/_promise-resolve.js");

$export($export.P + $export.R, 'Promise', { 'finally': function (onFinally) {
  var C = speciesConstructor(this, core.Promise || global.Promise);
  var isFunction = typeof onFinally == 'function';
  return this.then(
    isFunction ? function (x) {
      return promiseResolve(C, onFinally()).then(function () { return x; });
    } : onFinally,
    isFunction ? function (e) {
      return promiseResolve(C, onFinally()).then(function () { throw e; });
    } : onFinally
  );
} });


/***/ }),

/***/ "./node_modules/core-js/library/modules/es7.promise.try.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es7.promise.try.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// https://github.com/tc39/proposal-promise-try
var $export = __webpack_require__(/*! ./_export */ "./node_modules/core-js/library/modules/_export.js");
var newPromiseCapability = __webpack_require__(/*! ./_new-promise-capability */ "./node_modules/core-js/library/modules/_new-promise-capability.js");
var perform = __webpack_require__(/*! ./_perform */ "./node_modules/core-js/library/modules/_perform.js");

$export($export.S, 'Promise', { 'try': function (callbackfn) {
  var promiseCapability = newPromiseCapability.f(this);
  var result = perform(callbackfn);
  (result.e ? promiseCapability.reject : promiseCapability.resolve)(result.v);
  return promiseCapability.promise;
} });


/***/ }),

/***/ "./node_modules/core-js/library/modules/web.dom.iterable.js":
/*!******************************************************************!*\
  !*** ./node_modules/core-js/library/modules/web.dom.iterable.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ./es6.array.iterator */ "./node_modules/core-js/library/modules/es6.array.iterator.js");
var global = __webpack_require__(/*! ./_global */ "./node_modules/core-js/library/modules/_global.js");
var hide = __webpack_require__(/*! ./_hide */ "./node_modules/core-js/library/modules/_hide.js");
var Iterators = __webpack_require__(/*! ./_iterators */ "./node_modules/core-js/library/modules/_iterators.js");
var TO_STRING_TAG = __webpack_require__(/*! ./_wks */ "./node_modules/core-js/library/modules/_wks.js")('toStringTag');

var DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +
  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +
  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +
  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +
  'TextTrackList,TouchList').split(',');

for (var i = 0; i < DOMIterables.length; i++) {
  var NAME = DOMIterables[i];
  var Collection = global[NAME];
  var proto = Collection && Collection.prototype;
  if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
  Iterators[NAME] = Iterators.Array;
}


/***/ }),

/***/ "./src/common/WebGLCanvas.js":
/*!***********************************!*\
  !*** ./src/common/WebGLCanvas.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

//
//  Copyright (c) 2014 Sam Leitch. All rights reserved.
//
//  Permission is hereby granted, free of charge, to any person obtaining a copy
//  of this software and associated documentation files (the "Software"), to
//  deal in the Software without restriction, including without limitation the
//  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
//  sell copies of the Software, and to permit persons to whom the Software is
//  furnished to do so, subject to the following conditions:
//
//  The above copyright notice and this permission notice shall be included in
//  all copies or substantial portions of the Software.
//
//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
//  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
//  IN THE SOFTWARE.
//
// modified by Matthias Behrens (github.com/soliton4) for Broadway.js

/**
 * This class can be used to render output pictures from an H264bsdDecoder to a canvas element.
 * If available the content is rendered using WebGL.
 */
function H264bsdCanvas(canvas, forceNoGL, contextOptions) {
  this.canvasElement = canvas;
  this.contextOptions = contextOptions;
  this.glInitSucceed = 0;
  H264bsdCanvas.prototype.ROTATION_CLOCK0 = 0;
  H264bsdCanvas.prototype.ROTATION_CLOCK90 = 1;
  H264bsdCanvas.prototype.ROTATION_CLOCK180 = 2;
  H264bsdCanvas.prototype.ROTATION_CLOCK270 = 3;
  if (!forceNoGL) this.initContextGL();

  if (this.contextGL) {
    this.webGLContextLostProtect();
    this.initProgram();
    this.initBuffers();
    this.initTextures();
    var a = new ArrayBuffer(4);
    this.dummpyCursor = new Uint8Array(a);
    this.dummpyWaterMark = new Uint8Array(a);
    this.glInitSucceed = this.contextGL.getError() ? 0 : 1;
    this.cursorWidth = 0;
    this.cursorHeight = 0;
    this.hasCursor = 0;
    this.hasWaterMark = 0;
    this.hasWholeFrame = 0;
    this.croppingParams = {};
    this.croppingParams.top = 0;
    this.croppingParams.left = 0;
    this.croppingParams.width = 0;
    this.croppingParams.height = 0;
    this.textureWidth = 0;
    this.textureHeight = 0;
    this.canvasWidth = 0;
    this.canvasHeight = 0;
    this.picRotation = -1;
    this.bgColor = [0, 0, 0];
    this.cx = 0;
    this.cy = 0;
    this.cw = 0;
    this.ch = 0;
    this.colorRange = -1; // 0: limited , 1 full
  }

  ;
}

;

H264bsdCanvas.prototype.webGLContextLostProtect = function () {
  var _this = this;

  var canvas = this.canvasElement;
  canvas.addEventListener("webglcontextlost", function (event) {
    event.preventDefault();
    _this.contextOptions && _this.contextOptions.webglcontextlostCallback && _this.contextOptions.webglcontextlostCallback(event, _this.contextOptions.params);
  }, {
    capture: false,
    once: true
  });
  canvas.addEventListener("webglcontextrestored", function (event) {
    _this.contextOptions && _this.contextOptions.webglcontextrestoredCallback && _this.contextOptions.webglcontextrestoredCallback(event, _this.contextOptions.params);
  }, {
    capture: false,
    once: true
  });
};
/**
 * Returns true if the canvas supports WebGL
 */


H264bsdCanvas.prototype.isWebGL = function () {
  return this.contextGL;
};
/**
 * Create the GL context from the canvas element
 */


H264bsdCanvas.prototype.initContextGL = function () {
  var canvas = this.canvasElement;
  var gl = null;
  var validContextNames = ["webgl", "experimental-webgl", "moz-webgl", "webkit-3d"];
  var nameIndex = 0;

  while (!gl && nameIndex < validContextNames.length) {
    var contextName = validContextNames[nameIndex];

    try {
      if (this.contextOptions) {
        gl = canvas.getContext(contextName, this.contextOptions);
      } else {
        gl = canvas.getContext(contextName);
      }

      ;
    } catch (e) {
      gl = null;
    }

    if (!gl || typeof gl.getParameter !== "function") {
      gl = null;
    }

    ++nameIndex;
  }

  ;
  this.contextGL = gl;
};
/**
 * Initialize GL shader program
 */


H264bsdCanvas.prototype.initProgram = function () {
  var gl = this.contextGL;
  var vertexShaderScript = ['attribute vec4 vertexPos;', 'attribute vec4 texturePos;', 'varying vec2 textureCoord;', 'void main()', '{', 'gl_Position = vertexPos;', 'textureCoord = texturePos.xy;', '}'].join('\n');
  var fragmentShaderScript = ['precision highp float;', 'varying highp vec2 textureCoord;', 'uniform sampler2D ySampler;', 'uniform sampler2D uSampler;', 'uniform sampler2D vSampler;', 'uniform sampler2D cursorSampler;', 'uniform sampler2D waterMarkSampler;', 'uniform vec4 cursorInfo;', 'uniform int colorRange;', 'const mat4 YUV2RGB_L = mat4', '(', '1.1643828125, 0, 1.59602734375, -.87078515625,', '1.1643828125, -.39176171875, -.81296875, .52959375,', '1.1643828125, 2.017234375, 0, -1.081390625,', '0, 0, 0, 1', ');', 'const mat4 YUV2RGB_F = mat4', '(', '1.0, 0, 1.402, -.701,', '1.0, -.34413, -.71414, .529135,', '1.0, 1.772, 0, -.886,', '0, 0, 0, 1', ');', 'void main(void) {', 'highp float y = texture2D(ySampler,  textureCoord).r;', 'highp float u = texture2D(uSampler,  textureCoord).r;', 'highp float v = texture2D(vSampler,  textureCoord).r;', 'vec4 c;', 'if (colorRange == 0)', '{', '  c = vec4(y, u, v, 1) * YUV2RGB_L;', '} else {', '  c = vec4(y, u, v, 1) * YUV2RGB_F;', '}', 'if (cursorInfo.z > 0.0 && textureCoord.x >= cursorInfo.x && textureCoord.y >= cursorInfo.y && ', '    textureCoord.x < cursorInfo.x+cursorInfo.z && textureCoord.y < cursorInfo.y+cursorInfo.w ){', ' vec2 cursorCoord = textureCoord - cursorInfo.xy;', ' cursorCoord /= cursorInfo.zw;', ' vec4 cursor = texture2D(cursorSampler, cursorCoord);', ' c = c*(1.0-cursor.a) + cursor*cursor.a;', '}', ' vec4 waterMark = texture2D(waterMarkSampler, textureCoord);', 'if(waterMark.r != 0.0 || waterMark.g != 0.0 || waterMark.b != 0.0){', ' //waterMark.a = 0.5', ' c = waterMark* waterMark.a+ c*(1.0-waterMark.a);', '}', 'c.a = 1.0;', 'gl_FragColor = c;', '}'].join('\n');
  var vertexShader = gl.createShader(gl.VERTEX_SHADER);
  gl.shaderSource(vertexShader, vertexShaderScript);
  gl.compileShader(vertexShader);

  if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {
    console.log('Vertex shader failed to compile: ' + gl.getShaderInfoLog(vertexShader));
  }

  var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);
  gl.shaderSource(fragmentShader, fragmentShaderScript);
  gl.compileShader(fragmentShader);

  if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {
    console.log('Fragment shader failed to compile: ' + gl.getShaderInfoLog(fragmentShader));
  }

  var program = gl.createProgram();
  gl.attachShader(program, vertexShader);
  gl.attachShader(program, fragmentShader);
  gl.linkProgram(program);

  if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {
    console.log('Program failed to compile: ' + gl.getProgramInfoLog(program));
  }

  gl.useProgram(program);
  this.shaderProgram = program;
};
/**
 * Initialize vertex buffers and attach to shader program
 */


H264bsdCanvas.prototype.initBuffers = function () {
  var gl = this.contextGL;
  var program = this.shaderProgram;
  var vertexPosBuffer = gl.createBuffer();
  gl.bindBuffer(gl.ARRAY_BUFFER, vertexPosBuffer);
  gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([1, 1, -1, 1, 1, -1, -1, -1]), gl.STATIC_DRAW);
  var vertexPosRef = gl.getAttribLocation(program, 'vertexPos');
  gl.enableVertexAttribArray(vertexPosRef);
  gl.vertexAttribPointer(vertexPosRef, 2, gl.FLOAT, false, 0, 0);
  this.vertexPosBuffer = vertexPosBuffer;
  var texturePosBuffer = gl.createBuffer();
  gl.bindBuffer(gl.ARRAY_BUFFER, texturePosBuffer);
  gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([1, 0, 0, 0, 1, 1, 0, 1]), gl.STATIC_DRAW);
  var texturePosRef = gl.getAttribLocation(program, 'texturePos');
  gl.enableVertexAttribArray(texturePosRef);
  gl.vertexAttribPointer(texturePosRef, 2, gl.FLOAT, false, 0, 0);
  this.texturePosBuffer = texturePosBuffer;
};
/**
 * Initialize GL textures and attach to shader program
 */


H264bsdCanvas.prototype.initTextures = function () {
  var gl = this.contextGL;
  var program = this.shaderProgram;
  gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);
  var yTextureRef = this.initTexture();
  var ySamplerRef = gl.getUniformLocation(program, 'ySampler');
  gl.uniform1i(ySamplerRef, 0);
  this.yTextureRef = yTextureRef;
  var uTextureRef = this.initTexture();
  var uSamplerRef = gl.getUniformLocation(program, 'uSampler');
  gl.uniform1i(uSamplerRef, 1);
  this.uTextureRef = uTextureRef;
  var vTextureRef = this.initTexture();
  var vSamplerRef = gl.getUniformLocation(program, 'vSampler');
  gl.uniform1i(vSamplerRef, 2);
  this.vTextureRef = vTextureRef;
  var cursorTextureRef = this.initTexture();
  var cursorSamplerRef = gl.getUniformLocation(program, 'cursorSampler');
  gl.uniform1i(cursorSamplerRef, 3);
  this.cursorTextureRef = cursorTextureRef;
  var waterMarkTextureRef = this.initTexture();
  var waterMarkSamplerRef = gl.getUniformLocation(program, 'waterMarkSampler');
  gl.uniform1i(waterMarkSamplerRef, 4);
  this.waterMarkTextureRef = waterMarkTextureRef;
  var cursorInfoRef = gl.getUniformLocation(program, 'cursorInfo');
  this.cursorInfoRef = cursorInfoRef;
  var colorRangeRef = gl.getUniformLocation(program, 'colorRange');
  this.colorRangeRef = colorRangeRef;
};
/**
 * Create and configure a single texture
 */


H264bsdCanvas.prototype.initTexture = function () {
  var gl = this.contextGL;
  var textureRef = gl.createTexture();
  gl.bindTexture(gl.TEXTURE_2D, textureRef);
  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);
  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);
  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);
  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);
  gl.bindTexture(gl.TEXTURE_2D, null);
  return textureRef;
};

H264bsdCanvas.prototype.cleanup = function () {
  if (this.glInitSucceed) {
    var gl = this.contextGL;
    gl.deleteProgram(this.program);
    gl.activeTexture(gl.TEXTURE0);
    gl.bindTexture(gl.TEXTURE_2D, null);
    gl.activeTexture(gl.TEXTURE1);
    gl.bindTexture(gl.TEXTURE_2D, null);
    gl.activeTexture(gl.TEXTURE2);
    gl.bindTexture(gl.TEXTURE_2D, null);
    gl.activeTexture(gl.TEXTURE3);
    gl.bindTexture(gl.TEXTURE_2D, null);
    gl.bindBuffer(gl.ARRAY_BUFFER, null);
    gl.deleteTexture(this.yTextureRef);
    gl.deleteTexture(this.uTextureRef);
    gl.deleteTexture(this.vTextureRef);
    gl.deleteTexture(this.cursorTextureRef);
    gl.deleteTexture(this.waterMarkTextureRef);
    gl.deleteBuffer(this.vertexPosBuffer);
    gl.deleteBuffer(this.texturePosBuffer);
    this.contextGL = null;
    this.glInitSucceed = 0;
  }
};
/**
 * Draw picture data to the canvas.
 * If this object is using WebGL, the data must be an I420 formatted ArrayBuffer,
 * Otherwise, data must be an RGBA formatted ArrayBuffer.
 */


H264bsdCanvas.prototype.drawNextOutputPicture = function (width, height, croppingParams, data) {
  var colorRange = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;
  var gl = this.contextGL;

  if (gl) {
    this.drawNextOuptutPictureGL(width, height, croppingParams, data, colorRange);
  } else {
    this.drawNextOuptutPictureRGBA(width, height, croppingParams, data);
  }
};

function updateVertexInfo(glCanvas, picWidth, picHeight, rotation) {
  var gl = glCanvas.contextGL;
  var w = rotation == glCanvas.ROTATION_CLOCK90 || rotation == glCanvas.ROTATION_CLOCK270 ? picHeight : picWidth;
  var h = rotation == glCanvas.ROTATION_CLOCK90 || rotation == glCanvas.ROTATION_CLOCK270 ? picWidth : picHeight;
  var left, top, right, bottom;
  var dw = w / h * gl.canvas.height;
  var dh = h / w * gl.canvas.width;

  if (dw > gl.canvas.width) {
    left = 0;
    right = 1;
    top = (gl.canvas.height - dh) / 2 / gl.canvas.height;
    bottom = 1 - top;
  } else {
    top = 0;
    bottom = 1;
    left = (gl.canvas.width - dw) / 2 / gl.canvas.width;
    right = 1 - left;
  }

  left = left * 2 - 1;
  right = right * 2 - 1;
  top = 1 - top * 2;
  bottom = 1 - bottom * 2;
  var vertexPosValues = new Float32Array([right, top, left, top, right, bottom, left, bottom]);
  gl.bindBuffer(gl.ARRAY_BUFFER, glCanvas.vertexPosBuffer);
  gl.bufferData(gl.ARRAY_BUFFER, vertexPosValues, gl.DYNAMIC_DRAW);
}

function updateTextureInfo(glCanvas, width, height, croppingParams, rotation) {
  var gl = glCanvas.contextGL;
  var tTop = croppingParams.top / height;
  var tLeft = croppingParams.left / width;
  var tBottom = tTop + croppingParams.height / height;
  var tRight = tLeft + croppingParams.width / width;
  var texInfo = [tLeft, tTop, tRight, tTop, tRight, tBottom, tLeft, tBottom];

  if (rotation == glCanvas.ROTATION_CLOCK90) {
    texInfo.unshift(texInfo[6], texInfo[7]);
    texInfo = texInfo.slice(0, 8);
  }

  if (rotation == glCanvas.ROTATION_CLOCK180) {
    texInfo.unshift(texInfo[4], texInfo[5], texInfo[6], texInfo[7]);
    texInfo = texInfo.slice(0, 8);
  }

  if (rotation == glCanvas.ROTATION_CLOCK270) {
    texInfo.push(texInfo[0], texInfo[1]);
    texInfo = texInfo.slice(2);
  }

  var a = texInfo[0];
  var b = texInfo[1];
  texInfo[0] = texInfo[2];
  texInfo[1] = texInfo[3];
  texInfo[2] = a;
  texInfo[3] = b;
  var texturePosValues = new Float32Array(texInfo);
  gl.bindBuffer(gl.ARRAY_BUFFER, glCanvas.texturePosBuffer);
  gl.bufferData(gl.ARRAY_BUFFER, texturePosValues, gl.DYNAMIC_DRAW);
}
/**
 * Draw the next output picture using WebGL
 */


H264bsdCanvas.prototype.drawNextOuptutPictureGL = function (width, height, croppingParams, data, rotation) {
  var limitedColorRange = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : true;
  var gl = this.contextGL;
  var texturePosBuffer = this.texturePosBuffer;
  var yTextureRef = this.yTextureRef;
  var uTextureRef = this.uTextureRef;
  var vTextureRef = this.vTextureRef;
  gl.enable(gl.BLEND);
  gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);

  if (!gl || !this.glInitSucceed) {
    return;
  }

  if (width <= 0 || height <= 0 || !data || !data.length || data.length != width * height * 3 / 2 || croppingParams && (croppingParams.top < 0 || croppingParams.left < 0 || croppingParams.left + croppingParams.width > width || croppingParams.top + croppingParams.height > height)) {
    return;
  }

  rotation = rotation ? rotation : this.ROTATION_CLOCK0;
  croppingParams = croppingParams ? croppingParams : {
    "top": 0,
    "left": 0,
    "width": width,
    "height": height
  };
  var picSizeChange = croppingParams.width != this.croppingParams.width || croppingParams.height != this.croppingParams.height;
  var picPosChange = croppingParams.top != this.croppingParams.top || croppingParams.left != this.croppingParams.left;
  var canvasSizeChange = gl.canvas.width != this.canvasWidth || gl.canvas.height != this.canvasHeight;
  var texSizeChange = width != this.textureWidth || height != this.textureHeight;
  var rotationChange = rotation != this.picRotation;

  if (picSizeChange || canvasSizeChange || rotationChange) {
    updateVertexInfo(this, croppingParams.width, croppingParams.height, rotation);
  }

  if (picSizeChange || picPosChange || texSizeChange || rotationChange) {
    updateTextureInfo(this, width, height, croppingParams, rotation);
  }

  var colorRange = limitedColorRange ? 0 : 1;

  if (colorRange != this.colorRange) {
    gl.uniform1i(this.colorRangeRef, colorRange);
    this.colorRange = colorRange;
  }

  gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);
  this.croppingParams = croppingParams;
  this.textureWidth = width;
  this.textureHeight = height;
  this.picRotation = rotation;
  this.canvasWidth = gl.canvas.width;
  this.canvasHeight = gl.canvas.height; // if (croppingParams === null) {
  //     gl.viewport(0, 0, width, height);
  // } else {
  //     gl.viewport(0, 0, croppingParams.width, croppingParams.height);
  //     var tTop = croppingParams.top / height;
  //     var tLeft = croppingParams.left / width;
  //     var tBottom = croppingParams.height / height;
  //     var tRight = croppingParams.width / width;
  //     var texturePosValues = new Float32Array([tRight, tTop, tLeft, tTop, tRight, tBottom, tLeft, tBottom]);
  //     gl.bindBuffer(gl.ARRAY_BUFFER, texturePosBuffer);
  //     gl.bufferData(gl.ARRAY_BUFFER, texturePosValues, gl.DYNAMIC_DRAW);
  // }

  gl.clearColor(this.bgColor[0], this.bgColor[1], this.bgColor[2], 255);
  gl.clear(gl.COLOR_BUFFER_BIT);
  var i420Data = data;
  var yDataLength = width * height;
  var yData = i420Data.subarray(0, yDataLength);
  gl.activeTexture(gl.TEXTURE0);
  gl.bindTexture(gl.TEXTURE_2D, yTextureRef);
  gl.texImage2D(gl.TEXTURE_2D, 0, gl.LUMINANCE, width, height, 0, gl.LUMINANCE, gl.UNSIGNED_BYTE, yData);
  var cbDataLength = width / 2 * height / 2;
  var cbData = i420Data.subarray(yDataLength, yDataLength + cbDataLength);
  gl.activeTexture(gl.TEXTURE1);
  gl.bindTexture(gl.TEXTURE_2D, uTextureRef);
  gl.texImage2D(gl.TEXTURE_2D, 0, gl.LUMINANCE, width / 2, height / 2, 0, gl.LUMINANCE, gl.UNSIGNED_BYTE, cbData);
  var crDataLength = cbDataLength;
  var crData = i420Data.subarray(yDataLength + cbDataLength, yDataLength + cbDataLength + crDataLength);
  gl.activeTexture(gl.TEXTURE2);
  gl.bindTexture(gl.TEXTURE_2D, vTextureRef);
  gl.texImage2D(gl.TEXTURE_2D, 0, gl.LUMINANCE, width / 2, height / 2, 0, gl.LUMINANCE, gl.UNSIGNED_BYTE, crData);
  gl.activeTexture(gl.TEXTURE3);
  gl.bindTexture(gl.TEXTURE_2D, this.cursorTextureRef);

  if (!this.hasCursor) {
    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, this.dummpyCursor);
  }

  gl.activeTexture(gl.TEXTURE4);
  gl.bindTexture(gl.TEXTURE_2D, this.waterMarkTextureRef);

  if (!this.hasWaterMark) {
    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, this.dummpyWaterMark);
  }

  gl.uniform4f(this.cursorInfoRef, this.cx, this.cy, this.cw, this.ch);
  gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);
  this.hasWholeFrame = 1;
};

H264bsdCanvas.prototype.updateTextureBlock = function (width, height, x, y, data) {
  var gl = this.contextGL;

  if (gl && this.glInitSucceed) {
    var i420Data = data;

    if (!this.hasWholeFrame || width <= 0 || height <= 0 || x < 0 || y < 0 || x + width > this.textureWidth || y + height > this.textureHeight || !data || data.length != width * height * 3 / 2) {
      return;
    }

    var yTextureRef = this.yTextureRef;
    var uTextureRef = this.uTextureRef;
    var vTextureRef = this.vTextureRef;
    var yDataLength = width * height;
    var yData = i420Data.subarray(0, yDataLength);
    gl.activeTexture(gl.TEXTURE0);
    gl.bindTexture(gl.TEXTURE_2D, yTextureRef);
    gl.texSubImage2D(gl.TEXTURE_2D, 0, x, y, width, height, gl.LUMINANCE, gl.UNSIGNED_BYTE, yData);
    var cbDataLength = width / 2 * height / 2;
    var cbData = i420Data.subarray(yDataLength, yDataLength + cbDataLength);
    gl.activeTexture(gl.TEXTURE1);
    gl.bindTexture(gl.TEXTURE_2D, uTextureRef);
    gl.texSubImage2D(gl.TEXTURE_2D, 0, x / 2, y / 2, width / 2, height / 2, gl.LUMINANCE, gl.UNSIGNED_BYTE, cbData);
    var crDataLength = cbDataLength;
    var crData = i420Data.subarray(yDataLength + cbDataLength, yDataLength + cbDataLength + crDataLength);
    gl.activeTexture(gl.TEXTURE2);
    gl.bindTexture(gl.TEXTURE_2D, vTextureRef);
    gl.texSubImage2D(gl.TEXTURE_2D, 0, x / 2, y / 2, width / 2, height / 2, gl.LUMINANCE, gl.UNSIGNED_BYTE, crData);
  } else {
    return;
  }
};

H264bsdCanvas.prototype.updateCursor = function (width, height, data) {
  var gl = this.contextGL;

  if (gl && this.glInitSucceed) {
    if (width <= 0 || height <= 0 || !data || data.length != width * height * 4) {
      return;
    }

    gl.activeTexture(gl.TEXTURE3);
    gl.bindTexture(gl.TEXTURE_2D, this.cursorTextureRef);
    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, data);
    this.cursorWidth = width;
    this.cursorHeight = height;
    this.hasCursor = 1;
  } else {
    return;
  }
};

H264bsdCanvas.prototype.updateWatherMark = function (width, height, data) {
  var gl = this.contextGL; // debugger

  if (gl && this.glInitSucceed) {
    if (width <= 0 || height <= 0 || !data || data.length != width * height * 4) {
      return;
    }

    gl.activeTexture(gl.TEXTURE4);
    gl.bindTexture(gl.TEXTURE_2D, this.waterMarkTextureRef);
    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, data); // gl.generateMipmap(gl.TEXTURE_2D)
    // this.cursorWidth = width;
    // this.cursorHeight = height;

    this.hasWaterMark = 1;
  } else {
    return;
  }
};

H264bsdCanvas.prototype.draw = function (withCursor, cursorX, cursorY, cursorLogicWidth, cursorLogicHeight) {
  var gl = this.contextGL;

  if (gl && this.glInitSucceed) {
    if (!this.hasWholeFrame || withCursor && (cursorLogicWidth < 0 || cursorLogicHeight < 0)) {
      return;
    }

    gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);
    var texturePosBuffer = this.texturePosBuffer;
    var yTextureRef = this.yTextureRef;
    var uTextureRef = this.uTextureRef;
    var vTextureRef = this.vTextureRef;
    var cursorTextureRef = this.cursorTextureRef;
    gl.activeTexture(gl.TEXTURE0);
    gl.bindTexture(gl.TEXTURE_2D, yTextureRef);
    gl.activeTexture(gl.TEXTURE1);
    gl.bindTexture(gl.TEXTURE_2D, uTextureRef);
    gl.activeTexture(gl.TEXTURE2);
    gl.bindTexture(gl.TEXTURE_2D, vTextureRef);
    gl.activeTexture(gl.TEXTURE3);
    gl.bindTexture(gl.TEXTURE_2D, cursorTextureRef);
    gl.activeTexture(gl.TEXTURE4);
    gl.bindTexture(gl.TEXTURE_2D, this.waterMarkTextureRef);

    if (!this.hasWaterMark) {
      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, this.dummpyWaterMark);
    }

    if (withCursor && this.hasCursor) {
      var cx = cursorX / this.croppingParams.width;
      var cy = cursorY / this.croppingParams.height;
      var cw = cursorLogicWidth / this.croppingParams.width;
      var ch = cursorLogicHeight / this.croppingParams.height;
      this.cx = cx;
      this.cy = cy;
      this.cw = cw;
      this.ch = ch;
      gl.uniform4f(this.cursorInfoRef, cx, cy, cw, ch);
    } else {
      gl.uniform4f(this.cursorInfoRef, 0, 0, 0, 0);
    }

    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);
  } else {
    return;
  }
};

H264bsdCanvas.prototype.clear = function () {
  var gl = this.contextGL;

  if (gl && this.glInitSucceed) {
    gl.clearColor(this.bgColor[0], this.bgColor[1], this.bgColor[2], 255);
    gl.clear(gl.COLOR_BUFFER_BIT);
    this.hasWholeFrame = 0;
    this.hasCursor = 0;
  }
};

H264bsdCanvas.prototype.test_changeColorRange = function (limitedColorRange) {
  var gl = this.contextGL;

  if (gl && this.glInitSucceed) {
    colorRange = limitedColorRange ? 0 : 1;

    if (colorRange != this.colorRange) {
      gl.uniform1i(this.colorRangeRef, colorRange);
      this.colorRange = colorRange;
      this.draw(0);
    }
  }
};
/**
 * Draw next output picture using ARGB data on a 2d canvas.
 */


H264bsdCanvas.prototype.drawNextOuptutPictureRGBA = function (width, height, croppingParams, data) {
  var canvas = this.canvasElement;
  var croppingParams = null;
  var argbData = data;
  var ctx = canvas.getContext('2d');
  var imageData = ctx.getImageData(0, 0, width, height);
  imageData.data.set(argbData);

  if (croppingParams === null) {
    ctx.putImageData(imageData, 0, 0);
  } else {
    ctx.putImageData(imageData, -croppingParams.left, -croppingParams.top, 0, 0, croppingParams.width, croppingParams.height);
  }
};

var _default = H264bsdCanvas;
exports.default = _default;

/***/ }),

/***/ "./src/common/enums/CommonEnums.js":
/*!*****************************************!*\
  !*** ./src/common/enums/CommonEnums.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MAIN_WORKER_COMMAND = exports.WORKER_TYPE = exports.workerStartTypeToDevToolWorkerNameEnum = exports.OS_ENUM = exports.ConnectionType = exports.EncodeDecodeEnum = exports.ZOOM_CONNECTION_TYPE = void 0;
// this file would be used in web worker
// Notice : safe api in web worker, some js api are not supported in web worker
// Not supported Api Example : localStorage, DomNode, ...
var ZOOM_CONNECTION_TYPE = {
  ZOOM_CONNECTION_COMMAND: 0,
  ZOOM_CONNECTION_AUDIO: 1,
  ZOOM_CONNECTION_VIDEO: 2,
  ZOOM_CONNECTION_SHARING_JPEG: 3,
  ZOOM_CONNECTION_SHARING_VIDEO: 4,
  ZOOM_CONNECTION_MEDIA_LOG: 5,
  //FOR DEBUG ONLY
  ZOOM_CONNECTION_SHARING_REMOTE_CONTROL: 6,
  ZOOM_CONNECTION_UNKNOW: 7
};
/**
 * encode could be videoEncode, audioEncode, sharingEncode ...
 */

exports.ZOOM_CONNECTION_TYPE = ZOOM_CONNECTION_TYPE;
var EncodeDecodeEnum = {
  encode: 1,
  decode: 2
};
/**
 * integrate with monitor log server
 * in monitor log server 1 means audio, and ...
 * @type {{AUDIO: number, SHARING: number, VIDEO: number}}
 */

exports.EncodeDecodeEnum = EncodeDecodeEnum;
var ConnectionType = {
  AUDIO: 1,
  SHARING: 2,
  VIDEO: 3
};
/**
 * operation system enums
 * rwg command websocket will return this information, evt is 7937
 */

exports.ConnectionType = ConnectionType;
var OS_ENUM = {
  UNKNOWN: 0,
  WIN: 1,
  MAC: 2,
  PAD: 3,
  MOBILE: 4,
  CALL_IN: 5,
  LINUX: 6,
  WEB: 7,
  CHROME: 8
};
/**
 * Example:
 *  md5("videoEnc-zoom") = 27D10C2BC0312F11BE79BF9AA0668220
 *  md5("videoDec-zoom") = D5AC365D95ACF72EE1E8D0FED594C0CD
 */

exports.OS_ENUM = OS_ENUM;
var workerStartTypeToDevToolWorkerNameEnum = {
  "0": "27D10C2BC0312F11BE79BF9AA0668220",
  "1": "D5AC365D95ACF72EE1E8D0FED594C0CD",
  "2": "AEF36FC5C22CE7AAF5DC05913633EDF7",
  "3": "BD3DF97B715748F6B6A5F59271A2D1A0",
  "4": "D0AEDC804599C31391A946904C74595F",
  "5": "65DEAF0AA73F220ED401B90CFFCDFF23"
};
exports.workerStartTypeToDevToolWorkerNameEnum = workerStartTypeToDevToolWorkerNameEnum;
var WORKER_TYPE = {
  VIDEO_ENCODE: "0",
  VIDEO_DECODE: "1",
  AUDIO_ENCODE: "2",
  AUDIO_DECODE: "3",
  SHARING_ENCODE: "4",
  SHARING_DECODE: "5"
};
/**
 * Previously, the main thread sent to the thread's command is all hard-coded,
 * from 2020-4-15, unified management
 */

exports.WORKER_TYPE = WORKER_TYPE;
var MAIN_WORKER_COMMAND = {
  SET_USER_NODE_LIST: "SET_USER_NODE_LIST"
};
exports.MAIN_WORKER_COMMAND = MAIN_WORKER_COMMAND;

/***/ }),

/***/ "./src/common/jsEvent.js":
/*!*******************************!*\
  !*** ./src/common/jsEvent.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.INIT_SUCCESS_AUDIO = exports.INIT_SUCCESS_VIDEO = exports.INIT_SUCCESS = exports.Video_Enc_WebSocket_FAILED = exports.Sharing_Dec_WebSocket_FAILED = exports.Sharing_Handle_FAILED = exports.Audio_Mute = exports.Sharing_Dec_WASM_FAILED = exports.Video_Enc_Handle_FAILED = exports.Video_Enc_WASM_FAILED = exports.Video_Dec_WebSocket_FAILED = exports.Video_Dec_Handle_FAILED = exports.Video_Dec_WASM_FAILED = exports.Audio_Enc_Handle_FAILED = exports.Audio_Enc_WASM_FAILED = exports.Audio_Dec_WebSocket_FAILED = exports.Audio_Dec_Handle_FAILED = exports.Audio_Dec_WASM_FAILED = exports.CURRENT_SSRC_TIME = exports.AES_GCM_IV_CALLBACK_FROM_WASM = exports.AES_GCM_IV_TO_WASM = exports.SHARING_GET_IMAGE_DATA_WRONG = exports.SHARING_RENDER_MONITOR_LOG = exports.Sharing_Width_And_Height_Info = exports.VIDEO_RENDER_MONITOR_LOG = exports.VIDEO_RESOLUTION_UPDATE = exports.AUDIO_ENCODED_DATA = exports.VIDEO_DATA_DROP_RATIO = exports.VIDEO_DROP_RATIO_FROM_WCL = exports.VIDEO_ENCODED_DATA = exports.SHARING_DECODE_MESSAGE = exports.MOUSE_DATA_VIDEO_MODE = exports.SHARING_DATA_VIDEO_MODE = exports.WCL_TROUBLESHOOTING_INFO = exports.DELTA_S = exports.DELTA_C = exports.DELTA_D = exports.APP_TROUBLESHOOTING_INFO = exports.DOWNLOAD_WASM_FROM_MAIN_THREAD = exports.MONITOR_MESSAGE = exports.Video_Capture_Tick = exports.Video_Enc_WebSocket_OK = exports.DECODE_MESSAGE = exports.Sharing_Data = exports.Sharing_Handle_OK = exports.Sharing_Dec_WebSocket_OK = exports.AUDIO_DELAY = exports.Sharing_Dec_PICTURE = exports.Sharing_Dec_WASM_OK = exports.Video_Enc_Handle_OK = exports.Video_Enc_WASM_OK = exports.Video_Dec_WebSocket_OK = exports.Video_Dec_Handle_OK = exports.Video_Dec_WASM_OK = exports.Audio_Enc_Handle_OK = exports.Audio_Enc_WASM_OK = exports.Audio_Dec_WebSocket_OK = exports.Audio_Dec_Handle_OK = exports.Audio_Dec_WASM_OK = exports.USER_NODE_LIST = exports.AES_GCM_IV_VALUE = exports.RESEND_REMOTE_CONTROL_POSITION_PDU = exports.COMMAND_SOCKET_MESSAGE_NOTIFY = exports.CHANGE_CURRENT_SHARING_ACTIVE_SSRC = exports.SWITCH_CANVAS_FOR_SHARING_CAPTURE = exports.CHECK_CHROME_SHARING_EXTENSION = exports.RESUME_DESKTOP_SHARING = exports.PAUSE_DESKTOP_SHARING = exports.STOP_DESKTOP_SHARING = exports.START_DESKTOP_SHARING = exports.UPDATE_SUBSCRIBE_VIDEO = exports.CANCEL_REMOTE_CONTROL = exports.UPDATE_REMOTE_CONTROL_PROPERTIES = exports.START_REMOTE_CONTROL = exports.SWITCH_CANVAS_FOR_VIDEO_CAPTURE = exports.STOP_SHARING = exports.START_SHARING = exports.JOIN_COMPUTER_AUDIO = exports.LEAVE_COMPUTER_AUDIO = exports.REMOVE_RENDER_AUDIO = exports.WEBRTC_RESTART = exports.CHANGE_AUDIO_MIC = exports.END_MEDIA = exports.MEETING_FAIL_OVER = exports.LEAVE_MEETING = exports.REMOVE_AUDIO_CAPTURE = exports.CHANGE_CURRENT_ACTIVE_SSRC = exports.CHANGE_VIDEO_CAPTURE_DEVICE = exports.CHANGE_AUDIO_SPEAKER = exports.CHANGE_VIDEO_RESOLUTION = exports.CHANGE_FRAME_RATE = exports.MUTE_AUDIO = exports.UNMUTE_AUDIO = exports.STOP_RENDER_AUDIO = exports.ADD_RENDER_AUDIO = exports.STOP_CAPTURE_VIDEO = exports.START_CAPTURE_VIDEO = exports.STOP_RENDER_VIDEO = exports.ADD_RENDER_VIDEO = exports.START_MEDIA = void 0;
exports.MEDIA_VIDEO_REPORT_RTT = exports.MEDIA_VIDEO_REPORT_DROP_RATIO = exports.PUBSUB_EVT = exports.EVT_TYPE_WS_VIDEO_DATACHANNEL_ANSWER = exports.ZOOM_CONNECTION_AUDIO_OFFER_RESPONSE_EVT = exports.ZOOM_CONNECTION_VIDEO_OFFER_RESPONSE_EVT = exports.ZOOM_CONNECTION_VIDEO_OFFER_EVT = exports.VIDEO_ENCODE_DATA_FROM_WORKER = exports.AUDIO_DATA_FROM_WORKER = exports.VIDEO_DATA_FROM_WORKER = exports.SHARING_PARAM_INFO_FROM_SOCKET = exports.AUDIO_ILLEGAL = exports.AUDIO_REMOVE = exports.AUDIO_START = exports.AUDIO_STOP = exports.AUDIO_CLIPPING = exports.DESKTOP_SHARING_SYSTEM_ERROR = exports.AUDIO_SPEAKER_SET_ERROR = exports.DESKTOP_SHARING_ERROR = exports.DESKTOP_SHARING_TIME_OUT = exports.DESKTOP_SHARING_PERMISSION_DENIED = exports.DESKTOP_SHARING_CHROME_EXTENSION_UNINSTALLED = exports.USER_CANCEL_PERMISSION_REQUEST = exports.USER_STOP_DESKTOP_SHARING = exports.REMOTE_CONTROL_PASTE_TEXT_LENGTH_OVERFLOW = exports.CANCEL_REMOTE_CONTROL_FAILED = exports.START_REMOTE_CONTROL_FAILED = exports.STOP_VIDEO_CAPTURE_FAILED = exports.USER_CAMERA_IS_TAKEN_BY_OTHER_PROGRAMS = exports.USER_FORBIDDED_CAPTURE_VIDEO = exports.AUDIO_CTX_SAMPLERATE = exports.AUDIO_ZERO_DATA = exports.SHARING_DEC_THREAD_FAILED = exports.VIDEO_WEBSOCKET_BROKEN = exports.AUDIO_WEBSOCKET_BROKEN = exports.USER_FORBIDDED_CAPTURE_AUDIO = exports.INIT_FAILED_SHARING = exports.INIT_FAILED_AUDIO = exports.INIT_FAILED_VIDEO = exports.INIT_FAILED = exports.AES_GCM_IV_RESPONSE = exports.SEND_MESSAGE_TO_RWG = exports.SHARING_DECODE_MAX_SIZE = exports.CHECK_CHROME_SHARING_EXTENSION_RESPONSE = exports.DESKTOP_SHARING_CAPTURE_SUCCESS = exports.CURRENT_DESKTOP_SHARING_WIDTH_HEIGHT = exports.MONITOR_LOG = exports.REMOTE_CONTROL_COPIED_TEXT_NOTIFY = exports.CANCEL_REMOTE_CONTROL_SUCCESS = exports.START_REMOTE_CONTROL_SUCCESS = exports.STOP_VIDEO_CAPTURE_SUCCESS = exports.START_VIDEO_CAPTURE_SUCCESS = exports.CURRENT_CAPTURE_VIDEO_WIDTH_HEIGHT = exports.VIDEO_DECODE_MAX_SIZE = exports.SHARING_PARA = exports.SHARING_DATA = exports.SHARING_DEC_THREAD_OK = exports.CURRENT_VIDEO_RESOLUTION = exports.USER_GRANT_CAPTURE_AUDIO = exports.INIT_SUCCESS_SHARING = void 0;
//Notify_SDK
var START_MEDIA = 0;
exports.START_MEDIA = START_MEDIA;
var ADD_RENDER_VIDEO = 1;
exports.ADD_RENDER_VIDEO = ADD_RENDER_VIDEO;
var STOP_RENDER_VIDEO = 2;
exports.STOP_RENDER_VIDEO = STOP_RENDER_VIDEO;
var START_CAPTURE_VIDEO = 3;
exports.START_CAPTURE_VIDEO = START_CAPTURE_VIDEO;
var STOP_CAPTURE_VIDEO = 4;
exports.STOP_CAPTURE_VIDEO = STOP_CAPTURE_VIDEO;
var ADD_RENDER_AUDIO = 5;
exports.ADD_RENDER_AUDIO = ADD_RENDER_AUDIO;
var STOP_RENDER_AUDIO = 6;
exports.STOP_RENDER_AUDIO = STOP_RENDER_AUDIO;
var UNMUTE_AUDIO = 7;
exports.UNMUTE_AUDIO = UNMUTE_AUDIO;
var MUTE_AUDIO = 8;
exports.MUTE_AUDIO = MUTE_AUDIO;
var CHANGE_FRAME_RATE = 9;
exports.CHANGE_FRAME_RATE = CHANGE_FRAME_RATE;
var CHANGE_VIDEO_RESOLUTION = 10;
exports.CHANGE_VIDEO_RESOLUTION = CHANGE_VIDEO_RESOLUTION;
var CHANGE_AUDIO_SPEAKER = 11;
exports.CHANGE_AUDIO_SPEAKER = CHANGE_AUDIO_SPEAKER;
var CHANGE_VIDEO_CAPTURE_DEVICE = 12;
exports.CHANGE_VIDEO_CAPTURE_DEVICE = CHANGE_VIDEO_CAPTURE_DEVICE;
var CHANGE_CURRENT_ACTIVE_SSRC = 13;
exports.CHANGE_CURRENT_ACTIVE_SSRC = CHANGE_CURRENT_ACTIVE_SSRC;
var REMOVE_AUDIO_CAPTURE = 14;
exports.REMOVE_AUDIO_CAPTURE = REMOVE_AUDIO_CAPTURE;
var LEAVE_MEETING = 15;
exports.LEAVE_MEETING = LEAVE_MEETING;
var MEETING_FAIL_OVER = 16;
exports.MEETING_FAIL_OVER = MEETING_FAIL_OVER;
var END_MEDIA = 17;
exports.END_MEDIA = END_MEDIA;
var CHANGE_AUDIO_MIC = 18;
exports.CHANGE_AUDIO_MIC = CHANGE_AUDIO_MIC;
var WEBRTC_RESTART = 19;
exports.WEBRTC_RESTART = WEBRTC_RESTART;
var REMOVE_RENDER_AUDIO = 20;
exports.REMOVE_RENDER_AUDIO = REMOVE_RENDER_AUDIO;
var LEAVE_COMPUTER_AUDIO = 21;
exports.LEAVE_COMPUTER_AUDIO = LEAVE_COMPUTER_AUDIO;
var JOIN_COMPUTER_AUDIO = 22;
exports.JOIN_COMPUTER_AUDIO = JOIN_COMPUTER_AUDIO;
var START_SHARING = 23;
exports.START_SHARING = START_SHARING;
var STOP_SHARING = 24; // Video capture can be passed into multiple canvas, and the developer may need to output video source to any of them
// Therefore, it is necessary to support developers to switch video source output to the specified canvas

exports.STOP_SHARING = STOP_SHARING;
var SWITCH_CANVAS_FOR_VIDEO_CAPTURE = 25; // remote control when other people is sharing

exports.SWITCH_CANVAS_FOR_VIDEO_CAPTURE = SWITCH_CANVAS_FOR_VIDEO_CAPTURE;
var START_REMOTE_CONTROL = 26;
exports.START_REMOTE_CONTROL = START_REMOTE_CONTROL;
var UPDATE_REMOTE_CONTROL_PROPERTIES = 27;
exports.UPDATE_REMOTE_CONTROL_PROPERTIES = UPDATE_REMOTE_CONTROL_PROPERTIES;
var CANCEL_REMOTE_CONTROL = 28;
exports.CANCEL_REMOTE_CONTROL = CANCEL_REMOTE_CONTROL;
var UPDATE_SUBSCRIBE_VIDEO = 29;
exports.UPDATE_SUBSCRIBE_VIDEO = UPDATE_SUBSCRIBE_VIDEO;
var START_DESKTOP_SHARING = 30;
exports.START_DESKTOP_SHARING = START_DESKTOP_SHARING;
var STOP_DESKTOP_SHARING = 31;
exports.STOP_DESKTOP_SHARING = STOP_DESKTOP_SHARING;
var PAUSE_DESKTOP_SHARING = 32;
exports.PAUSE_DESKTOP_SHARING = PAUSE_DESKTOP_SHARING;
var RESUME_DESKTOP_SHARING = 33;
exports.RESUME_DESKTOP_SHARING = RESUME_DESKTOP_SHARING;
var CHECK_CHROME_SHARING_EXTENSION = 34;
exports.CHECK_CHROME_SHARING_EXTENSION = CHECK_CHROME_SHARING_EXTENSION;
var SWITCH_CANVAS_FOR_SHARING_CAPTURE = 35;
exports.SWITCH_CANVAS_FOR_SHARING_CAPTURE = SWITCH_CANVAS_FOR_SHARING_CAPTURE;
var CHANGE_CURRENT_SHARING_ACTIVE_SSRC = 36;
exports.CHANGE_CURRENT_SHARING_ACTIVE_SSRC = CHANGE_CURRENT_SHARING_ACTIVE_SSRC;
var COMMAND_SOCKET_MESSAGE_NOTIFY = 40;
exports.COMMAND_SOCKET_MESSAGE_NOTIFY = COMMAND_SOCKET_MESSAGE_NOTIFY;
var RESEND_REMOTE_CONTROL_POSITION_PDU = 41;
exports.RESEND_REMOTE_CONTROL_POSITION_PDU = RESEND_REMOTE_CONTROL_POSITION_PDU;
var AES_GCM_IV_VALUE = 42;
exports.AES_GCM_IV_VALUE = AES_GCM_IV_VALUE;
var USER_NODE_LIST = 43; //export const E2E_ENCRYPT = 30;
//web work
//success

exports.USER_NODE_LIST = USER_NODE_LIST;
var Audio_Dec_WASM_OK = 1;
exports.Audio_Dec_WASM_OK = Audio_Dec_WASM_OK;
var Audio_Dec_Handle_OK = 2;
exports.Audio_Dec_Handle_OK = Audio_Dec_Handle_OK;
var Audio_Dec_WebSocket_OK = 3;
exports.Audio_Dec_WebSocket_OK = Audio_Dec_WebSocket_OK;
var Audio_Enc_WASM_OK = 4;
exports.Audio_Enc_WASM_OK = Audio_Enc_WASM_OK;
var Audio_Enc_Handle_OK = 5;
exports.Audio_Enc_Handle_OK = Audio_Enc_Handle_OK;
var Video_Dec_WASM_OK = 7;
exports.Video_Dec_WASM_OK = Video_Dec_WASM_OK;
var Video_Dec_Handle_OK = 8;
exports.Video_Dec_Handle_OK = Video_Dec_Handle_OK;
var Video_Dec_WebSocket_OK = 9;
exports.Video_Dec_WebSocket_OK = Video_Dec_WebSocket_OK;
var Video_Enc_WASM_OK = 10;
exports.Video_Enc_WASM_OK = Video_Enc_WASM_OK;
var Video_Enc_Handle_OK = 11;
exports.Video_Enc_Handle_OK = Video_Enc_Handle_OK;
var Sharing_Dec_WASM_OK = 12;
exports.Sharing_Dec_WASM_OK = Sharing_Dec_WASM_OK;
var Sharing_Dec_PICTURE = 13;
exports.Sharing_Dec_PICTURE = Sharing_Dec_PICTURE;
var AUDIO_DELAY = 14;
exports.AUDIO_DELAY = AUDIO_DELAY;
var Sharing_Dec_WebSocket_OK = 15;
exports.Sharing_Dec_WebSocket_OK = Sharing_Dec_WebSocket_OK;
var Sharing_Handle_OK = 16;
exports.Sharing_Handle_OK = Sharing_Handle_OK;
var Sharing_Data = 17;
exports.Sharing_Data = Sharing_Data;
var DECODE_MESSAGE = 18;
exports.DECODE_MESSAGE = DECODE_MESSAGE;
var Video_Enc_WebSocket_OK = 19;
exports.Video_Enc_WebSocket_OK = Video_Enc_WebSocket_OK;
var Video_Capture_Tick = 20;
exports.Video_Capture_Tick = Video_Capture_Tick;
var MONITOR_MESSAGE = 21;
exports.MONITOR_MESSAGE = MONITOR_MESSAGE;
var DOWNLOAD_WASM_FROM_MAIN_THREAD = 30;
exports.DOWNLOAD_WASM_FROM_MAIN_THREAD = DOWNLOAD_WASM_FROM_MAIN_THREAD;
var APP_TROUBLESHOOTING_INFO = 31; //delta for download wasm;

exports.APP_TROUBLESHOOTING_INFO = APP_TROUBLESHOOTING_INFO;
var DELTA_D = 32; //delta for complile wasm;

exports.DELTA_D = DELTA_D;
var DELTA_C = 33;
exports.DELTA_C = DELTA_C;
var DELTA_S = 34;
exports.DELTA_S = DELTA_S;
var WCL_TROUBLESHOOTING_INFO = 35;
exports.WCL_TROUBLESHOOTING_INFO = WCL_TROUBLESHOOTING_INFO;
var SHARING_DATA_VIDEO_MODE = 36;
exports.SHARING_DATA_VIDEO_MODE = SHARING_DATA_VIDEO_MODE;
var MOUSE_DATA_VIDEO_MODE = 37;
exports.MOUSE_DATA_VIDEO_MODE = MOUSE_DATA_VIDEO_MODE;
var SHARING_DECODE_MESSAGE = 38;
exports.SHARING_DECODE_MESSAGE = SHARING_DECODE_MESSAGE;
var VIDEO_ENCODED_DATA = 39;
exports.VIDEO_ENCODED_DATA = VIDEO_ENCODED_DATA;
var VIDEO_DROP_RATIO_FROM_WCL = 40;
exports.VIDEO_DROP_RATIO_FROM_WCL = VIDEO_DROP_RATIO_FROM_WCL;
var VIDEO_DATA_DROP_RATIO = 41;
exports.VIDEO_DATA_DROP_RATIO = VIDEO_DATA_DROP_RATIO;
var AUDIO_ENCODED_DATA = 42;
exports.AUDIO_ENCODED_DATA = AUDIO_ENCODED_DATA;
var VIDEO_RESOLUTION_UPDATE = 50;
exports.VIDEO_RESOLUTION_UPDATE = VIDEO_RESOLUTION_UPDATE;
var VIDEO_RENDER_MONITOR_LOG = 51;
exports.VIDEO_RENDER_MONITOR_LOG = VIDEO_RENDER_MONITOR_LOG;
var Sharing_Width_And_Height_Info = 52;
exports.Sharing_Width_And_Height_Info = Sharing_Width_And_Height_Info;
var SHARING_RENDER_MONITOR_LOG = 53;
exports.SHARING_RENDER_MONITOR_LOG = SHARING_RENDER_MONITOR_LOG;
var SHARING_GET_IMAGE_DATA_WRONG = 54;
exports.SHARING_GET_IMAGE_DATA_WRONG = SHARING_GET_IMAGE_DATA_WRONG;
var AES_GCM_IV_TO_WASM = 55;
exports.AES_GCM_IV_TO_WASM = AES_GCM_IV_TO_WASM;
var AES_GCM_IV_CALLBACK_FROM_WASM = 56;
exports.AES_GCM_IV_CALLBACK_FROM_WASM = AES_GCM_IV_CALLBACK_FROM_WASM;
var CURRENT_SSRC_TIME = 57; //failed

exports.CURRENT_SSRC_TIME = CURRENT_SSRC_TIME;
var Audio_Dec_WASM_FAILED = -1;
exports.Audio_Dec_WASM_FAILED = Audio_Dec_WASM_FAILED;
var Audio_Dec_Handle_FAILED = -2;
exports.Audio_Dec_Handle_FAILED = Audio_Dec_Handle_FAILED;
var Audio_Dec_WebSocket_FAILED = -3;
exports.Audio_Dec_WebSocket_FAILED = Audio_Dec_WebSocket_FAILED;
var Audio_Enc_WASM_FAILED = -4;
exports.Audio_Enc_WASM_FAILED = Audio_Enc_WASM_FAILED;
var Audio_Enc_Handle_FAILED = -5;
exports.Audio_Enc_Handle_FAILED = Audio_Enc_Handle_FAILED;
var Video_Dec_WASM_FAILED = -7;
exports.Video_Dec_WASM_FAILED = Video_Dec_WASM_FAILED;
var Video_Dec_Handle_FAILED = -8;
exports.Video_Dec_Handle_FAILED = Video_Dec_Handle_FAILED;
var Video_Dec_WebSocket_FAILED = -9;
exports.Video_Dec_WebSocket_FAILED = Video_Dec_WebSocket_FAILED;
var Video_Enc_WASM_FAILED = -10;
exports.Video_Enc_WASM_FAILED = Video_Enc_WASM_FAILED;
var Video_Enc_Handle_FAILED = -11;
exports.Video_Enc_Handle_FAILED = Video_Enc_Handle_FAILED;
var Sharing_Dec_WASM_FAILED = -12;
exports.Sharing_Dec_WASM_FAILED = Sharing_Dec_WASM_FAILED;
var Audio_Mute = -13;
exports.Audio_Mute = Audio_Mute;
var Sharing_Handle_FAILED = -14;
exports.Sharing_Handle_FAILED = Sharing_Handle_FAILED;
var Sharing_Dec_WebSocket_FAILED = -15;
exports.Sharing_Dec_WebSocket_FAILED = Sharing_Dec_WebSocket_FAILED;
var Video_Enc_WebSocket_FAILED = -16; // export const AUDIO_CLIPPING = -16;
//NOTIFY_APP
//success

exports.Video_Enc_WebSocket_FAILED = Video_Enc_WebSocket_FAILED;
var INIT_SUCCESS = 1;
exports.INIT_SUCCESS = INIT_SUCCESS;
var INIT_SUCCESS_VIDEO = 1.1;
exports.INIT_SUCCESS_VIDEO = INIT_SUCCESS_VIDEO;
var INIT_SUCCESS_AUDIO = 1.2;
exports.INIT_SUCCESS_AUDIO = INIT_SUCCESS_AUDIO;
var INIT_SUCCESS_SHARING = 1.3;
exports.INIT_SUCCESS_SHARING = INIT_SUCCESS_SHARING;
var USER_GRANT_CAPTURE_AUDIO = 2;
exports.USER_GRANT_CAPTURE_AUDIO = USER_GRANT_CAPTURE_AUDIO;
var CURRENT_VIDEO_RESOLUTION = 3;
exports.CURRENT_VIDEO_RESOLUTION = CURRENT_VIDEO_RESOLUTION;
var SHARING_DEC_THREAD_OK = 4;
exports.SHARING_DEC_THREAD_OK = SHARING_DEC_THREAD_OK;
var SHARING_DATA = 5;
exports.SHARING_DATA = SHARING_DATA;
var SHARING_PARA = 6;
exports.SHARING_PARA = SHARING_PARA;
var VIDEO_DECODE_MAX_SIZE = 7;
/**
 * Returns the width and height of the video stream that's from camera (videoWidth, videoHeight)
 * @type {number}
 */

exports.VIDEO_DECODE_MAX_SIZE = VIDEO_DECODE_MAX_SIZE;
var CURRENT_CAPTURE_VIDEO_WIDTH_HEIGHT = 8;
exports.CURRENT_CAPTURE_VIDEO_WIDTH_HEIGHT = CURRENT_CAPTURE_VIDEO_WIDTH_HEIGHT;
var START_VIDEO_CAPTURE_SUCCESS = 9;
exports.START_VIDEO_CAPTURE_SUCCESS = START_VIDEO_CAPTURE_SUCCESS;
var STOP_VIDEO_CAPTURE_SUCCESS = 10;
exports.STOP_VIDEO_CAPTURE_SUCCESS = STOP_VIDEO_CAPTURE_SUCCESS;
var START_REMOTE_CONTROL_SUCCESS = 11;
exports.START_REMOTE_CONTROL_SUCCESS = START_REMOTE_CONTROL_SUCCESS;
var CANCEL_REMOTE_CONTROL_SUCCESS = 12;
/**
 * return copied text from websocket/internet/the other side computer
 * @type {number}
 */

exports.CANCEL_REMOTE_CONTROL_SUCCESS = CANCEL_REMOTE_CONTROL_SUCCESS;
var REMOTE_CONTROL_COPIED_TEXT_NOTIFY = 13;
exports.REMOTE_CONTROL_COPIED_TEXT_NOTIFY = REMOTE_CONTROL_COPIED_TEXT_NOTIFY;
var MONITOR_LOG = 14;
exports.MONITOR_LOG = MONITOR_LOG;
var CURRENT_DESKTOP_SHARING_WIDTH_HEIGHT = 15;
exports.CURRENT_DESKTOP_SHARING_WIDTH_HEIGHT = CURRENT_DESKTOP_SHARING_WIDTH_HEIGHT;
var DESKTOP_SHARING_CAPTURE_SUCCESS = 16;
exports.DESKTOP_SHARING_CAPTURE_SUCCESS = DESKTOP_SHARING_CAPTURE_SUCCESS;
var CHECK_CHROME_SHARING_EXTENSION_RESPONSE = 17;
exports.CHECK_CHROME_SHARING_EXTENSION_RESPONSE = CHECK_CHROME_SHARING_EXTENSION_RESPONSE;
var SHARING_DECODE_MAX_SIZE = 18;
exports.SHARING_DECODE_MAX_SIZE = SHARING_DECODE_MAX_SIZE;
var SEND_MESSAGE_TO_RWG = 20;
exports.SEND_MESSAGE_TO_RWG = SEND_MESSAGE_TO_RWG;
var AES_GCM_IV_RESPONSE = 21; //failed

exports.AES_GCM_IV_RESPONSE = AES_GCM_IV_RESPONSE;
var INIT_FAILED = -1;
exports.INIT_FAILED = INIT_FAILED;
var INIT_FAILED_VIDEO = -1.1;
exports.INIT_FAILED_VIDEO = INIT_FAILED_VIDEO;
var INIT_FAILED_AUDIO = -1.2;
exports.INIT_FAILED_AUDIO = INIT_FAILED_AUDIO;
var INIT_FAILED_SHARING = -1.3;
exports.INIT_FAILED_SHARING = INIT_FAILED_SHARING;
var USER_FORBIDDED_CAPTURE_AUDIO = -2;
exports.USER_FORBIDDED_CAPTURE_AUDIO = USER_FORBIDDED_CAPTURE_AUDIO;
var AUDIO_WEBSOCKET_BROKEN = -3;
exports.AUDIO_WEBSOCKET_BROKEN = AUDIO_WEBSOCKET_BROKEN;
var VIDEO_WEBSOCKET_BROKEN = -4;
exports.VIDEO_WEBSOCKET_BROKEN = VIDEO_WEBSOCKET_BROKEN;
var SHARING_DEC_THREAD_FAILED = -5;
exports.SHARING_DEC_THREAD_FAILED = SHARING_DEC_THREAD_FAILED;
var AUDIO_ZERO_DATA = -6;
exports.AUDIO_ZERO_DATA = AUDIO_ZERO_DATA;
var AUDIO_CTX_SAMPLERATE = -7;
exports.AUDIO_CTX_SAMPLERATE = AUDIO_CTX_SAMPLERATE;
var USER_FORBIDDED_CAPTURE_VIDEO = -8;
exports.USER_FORBIDDED_CAPTURE_VIDEO = USER_FORBIDDED_CAPTURE_VIDEO;
var USER_CAMERA_IS_TAKEN_BY_OTHER_PROGRAMS = -9;
exports.USER_CAMERA_IS_TAKEN_BY_OTHER_PROGRAMS = USER_CAMERA_IS_TAKEN_BY_OTHER_PROGRAMS;
var STOP_VIDEO_CAPTURE_FAILED = -10;
exports.STOP_VIDEO_CAPTURE_FAILED = STOP_VIDEO_CAPTURE_FAILED;
var START_REMOTE_CONTROL_FAILED = -11;
exports.START_REMOTE_CONTROL_FAILED = START_REMOTE_CONTROL_FAILED;
var CANCEL_REMOTE_CONTROL_FAILED = -12;
exports.CANCEL_REMOTE_CONTROL_FAILED = CANCEL_REMOTE_CONTROL_FAILED;
var REMOTE_CONTROL_PASTE_TEXT_LENGTH_OVERFLOW = -14;
exports.REMOTE_CONTROL_PASTE_TEXT_LENGTH_OVERFLOW = REMOTE_CONTROL_PASTE_TEXT_LENGTH_OVERFLOW;
var USER_STOP_DESKTOP_SHARING = -15;
exports.USER_STOP_DESKTOP_SHARING = USER_STOP_DESKTOP_SHARING;
var USER_CANCEL_PERMISSION_REQUEST = -16;
exports.USER_CANCEL_PERMISSION_REQUEST = USER_CANCEL_PERMISSION_REQUEST;
var DESKTOP_SHARING_CHROME_EXTENSION_UNINSTALLED = -17;
exports.DESKTOP_SHARING_CHROME_EXTENSION_UNINSTALLED = DESKTOP_SHARING_CHROME_EXTENSION_UNINSTALLED;
var DESKTOP_SHARING_PERMISSION_DENIED = -18;
exports.DESKTOP_SHARING_PERMISSION_DENIED = DESKTOP_SHARING_PERMISSION_DENIED;
var DESKTOP_SHARING_TIME_OUT = -19;
exports.DESKTOP_SHARING_TIME_OUT = DESKTOP_SHARING_TIME_OUT;
var DESKTOP_SHARING_ERROR = -20;
exports.DESKTOP_SHARING_ERROR = DESKTOP_SHARING_ERROR;
var AUDIO_SPEAKER_SET_ERROR = -21;
exports.AUDIO_SPEAKER_SET_ERROR = AUDIO_SPEAKER_SET_ERROR;
var DESKTOP_SHARING_SYSTEM_ERROR = -22;
exports.DESKTOP_SHARING_SYSTEM_ERROR = DESKTOP_SHARING_SYSTEM_ERROR;
var AUDIO_CLIPPING = -23; //Audio Status

exports.AUDIO_CLIPPING = AUDIO_CLIPPING;
var AUDIO_STOP = 0;
exports.AUDIO_STOP = AUDIO_STOP;
var AUDIO_START = 1;
exports.AUDIO_START = AUDIO_START;
var AUDIO_REMOVE = 2;
exports.AUDIO_REMOVE = AUDIO_REMOVE;
var AUDIO_ILLEGAL = -1; // sdk inside emitted event  subscribe/publish

exports.AUDIO_ILLEGAL = AUDIO_ILLEGAL;
var SHARING_PARAM_INFO_FROM_SOCKET = "SHARING_PARAM_INFO_FROM_SOCKET";
exports.SHARING_PARAM_INFO_FROM_SOCKET = SHARING_PARAM_INFO_FROM_SOCKET;
var VIDEO_DATA_FROM_WORKER = "VIDEO_DATA_FROM_WORKER";
exports.VIDEO_DATA_FROM_WORKER = VIDEO_DATA_FROM_WORKER;
var AUDIO_DATA_FROM_WORKER = "AUDIO_DATA_FROM_WORKER";
exports.AUDIO_DATA_FROM_WORKER = AUDIO_DATA_FROM_WORKER;
var VIDEO_ENCODE_DATA_FROM_WORKER = "VIDEO_ENCODE_DATA_FROM_WORKER"; // RWG/Command Socket  message evt enums

exports.VIDEO_ENCODE_DATA_FROM_WORKER = VIDEO_ENCODE_DATA_FROM_WORKER;
var ZOOM_CONNECTION_VIDEO_OFFER_EVT = 1 | 0x5000 | 0x0F00; // 24321

exports.ZOOM_CONNECTION_VIDEO_OFFER_EVT = ZOOM_CONNECTION_VIDEO_OFFER_EVT;
var ZOOM_CONNECTION_VIDEO_OFFER_RESPONSE_EVT = 2 | 0x5000 | 0x0F00; // 24322

exports.ZOOM_CONNECTION_VIDEO_OFFER_RESPONSE_EVT = ZOOM_CONNECTION_VIDEO_OFFER_RESPONSE_EVT;
var ZOOM_CONNECTION_AUDIO_OFFER_RESPONSE_EVT = 2 | 0x5000 | 0x0F00; // 24322

exports.ZOOM_CONNECTION_AUDIO_OFFER_RESPONSE_EVT = ZOOM_CONNECTION_AUDIO_OFFER_RESPONSE_EVT;
var EVT_TYPE_WS_VIDEO_DATACHANNEL_ANSWER = 24322; // publish/subscribe event name

exports.EVT_TYPE_WS_VIDEO_DATACHANNEL_ANSWER = EVT_TYPE_WS_VIDEO_DATACHANNEL_ANSWER;
var PUBSUB_EVT = {
  ZOOM_CONNECTION_VIDEO_OFFER_RESPONSE_EVT: "ZOOM_CONNECTION_VIDEO_OFFER_RESPONSE_EVT",
  ZOOM_CONNECTION_AUDIO_OFFER_RESPONSE_EVT: "ZOOM_CONNECTION_AUDIO_OFFER_RESPONSE_EVT",
  END_MEDIA: "END_MEDIA",
  DESTROY: "DESTROY",
  "VIDEO_DATACHANNEL_SPEED": "VIDEO_DATACHANNEL_SPEED",
  DC_COMING_MESSAGE: "DC_COMING_MESSAGE"
};
exports.PUBSUB_EVT = PUBSUB_EVT;
var MEDIA_VIDEO_REPORT_DROP_RATIO = 100;
exports.MEDIA_VIDEO_REPORT_DROP_RATIO = MEDIA_VIDEO_REPORT_DROP_RATIO;
var MEDIA_VIDEO_REPORT_RTT = 101;
exports.MEDIA_VIDEO_REPORT_RTT = MEDIA_VIDEO_REPORT_RTT;

/***/ }),

/***/ "./src/common/queue.js":
/*!*****************************!*\
  !*** ./src/common/queue.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

function Queue() {
  this.a = [];
  this.b = 0;
  this.residue = null; //  this.key = key;
}

;

Queue.prototype.getLength = function () {
  return this.a.length - this.b;
};

Queue.prototype.isEmpty = function () {
  return 0 == this.a.length;
};

Queue.prototype.enqueue = function (data) {
  this.a.push(data);
};

Queue.prototype.dequeue = function () {
  if (0 != this.a.length) {
    var c = this.a[this.b];
    2 * ++this.b >= this.a.length && (this.a = this.a.slice(this.b), this.b = 0);
    return c;
  }

  return null;
};

Queue.prototype.peek = function () {
  return 0 < this.a.length ? this.a[this.b] : void 0;
};

var _default = Queue;
exports.default = _default;

/***/ }),

/***/ "./src/inside/JsMediaBuffer.js":
/*!*************************************!*\
  !*** ./src/inside/JsMediaBuffer.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AudioQueueMGR = AudioQueueMGR;
exports.VideoQueueMGR = VideoQueueMGR;
exports.SharingQueueMGR = SharingQueueMGR;
exports.VideoMGR = VideoMGR;
exports.SharingMGR = SharingMGR;
exports.AudioMGR = exports.SharingInfoMGR = exports.SharingInfo = exports.VideoInfoMGR = exports.VideoInfo = exports.VideoData = exports.AudioData = void 0;

var _map = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/core-js/map */ "./node_modules/@babel/runtime/core-js/map.js"));

var _queue = _interopRequireDefault(__webpack_require__(/*! ../common/queue */ "./src/common/queue.js"));

/* 
author: Hf.Platform.Seth.Wang
Date: July,2017

*/
var AudioData = function () {
  function AudioData(buffer, timeStamp) {
    this.timeStamp = timeStamp;
    this.buf = buffer; //this.key = key;
  }

  return AudioData;
}();

exports.AudioData = AudioData;

var VideoData = function () {
  function VideoData(buffer, timeStamp) {
    this.timeStamp = timeStamp;
    this.buf = buffer; //this.key = key;
  }

  ;
  return VideoData;
}();

exports.VideoData = VideoData;

function AudioQueueMGR() {
  this.ssrcQueueMap = new _map.default();

  AudioQueueMGR.prototype.AddQueue = function (key) {
    var queue = new _queue.default();
    this.ssrcQueueMap.set(key, queue);
    return queue;
  };

  AudioQueueMGR.prototype.DeleteQueue = function (key) {
    this.ssrcQueueMap.delete(key);
  };

  AudioQueueMGR.prototype.GetQueue = function (key) {
    var queue_ = this.ssrcQueueMap.get(key);
    return queue_;
  };

  AudioQueueMGR.prototype.GetQueueData = function (key) {
    var queue_ = this.ssrcQueueMap.get(key);
    return queue_.dequeue();
  };

  AudioQueueMGR.prototype.PutQueueData = function (key, data) {
    var queue_ = this.ssrcQueueMap.get(key);
    queue_.enqueue(data);
  };

  AudioQueueMGR.prototype.GetQueueLength = function (key) {
    var queue_ = this.ssrcQueueMap.get(key);

    if (queue_ !== null) {
      return queue_.getLength();
    }

    return 0;
  };
}

;

var VideoInfo = function VideoInfo() {
  this.frames = 0;
  this.ntp = new _queue.default();
};

exports.VideoInfo = VideoInfo;
VideoInfo.prototype = {
  UpdateVideoInfo: function UpdateVideoInfo(ntptime) {
    this.frames++;

    if (this.ntp.getLength() > 30) {
      this.ntp.dequeue();
    }

    this.ntp.enqueue(ntptime);
  },
  GetVideoFpsInfo: function GetVideoFpsInfo() {
    var length = this.ntp.getLength();

    if (length < 5) {
      return;
    }

    var fps = 0;
    var NotZeroTime = 0;
    var ZeroNTPNumb = 0;
    var StartNTPNotZero = 0;
    var lastNotZero = 0;

    for (var i = 0; i < length; i++) {
      var ntpTime = this.ntp.dequeue();

      if (ntpTime == 0 && StartNTPNotZero == 0) {
        ZeroNTPNumb++;
      } else if (ntpTime != 0) {
        lastNotZero = 0;

        if (StartNTPNotZero == 0) {
          StartNTPNotZero = ntpTime;
        }

        NotZeroTime = ntpTime;
      } else if (StartNTPNotZero != 0 && NotZeroTime != StartNTPNotZero && ntpTime == 0) {
        lastNotZero++;
      }
    }

    if (NotZeroTime == 0 || NotZeroTime == StartNTPNotZero) {
      fps = 0;
    } else {
      if (length - ZeroNTPNumb - lastNotZero - 1 != 0) {
        fps = (NotZeroTime - StartNTPNotZero) / (length - ZeroNTPNumb - lastNotZero - 1);
      } else {
        fps = 0;
      }
    }

    return fps;
  }
};

var VideoInfoMGR = function VideoInfoMGR() {
  this.ssrcInfoMap = new _map.default();
};

exports.VideoInfoMGR = VideoInfoMGR;
VideoInfoMGR.prototype = {
  UpdateSSRCInfo: function UpdateSSRCInfo(ssrc, ntp) {
    var info = this.ssrcInfoMap.get(ssrc);

    if (info) {
      info.UpdateVideoInfo(ntp);
    } else {
      info = new VideoInfo();
      this.ssrcInfoMap.set(ssrc, info);
      info.UpdateVideoInfo(ntp);
    }
  },
  GetSSRCFpsInfo: function GetSSRCFpsInfo(ssrc) {
    var info = this.ssrcInfoMap.get(ssrc);

    if (info) {
      return info.GetVideoFpsInfo();
    } else {
      return 0;
    }
  }
};

function VideoQueueMGR() {
  this.ssrcQueueMap = new _map.default();
  this.ssrcInfo = new VideoInfoMGR();

  VideoQueueMGR.prototype.AddQueue = function (key) {
    var queue = new _queue.default();
    this.ssrcQueueMap.set(key, queue);
    return queue;
  };

  VideoQueueMGR.prototype.DeleteQueue = function (key) {
    this.ssrcQueueMap.delete(key);
  };

  VideoQueueMGR.prototype.GetQueue = function (key) {
    var queue_ = this.ssrcQueueMap.get(key);
    return queue_;
  };

  VideoQueueMGR.prototype.ClearQueue = function () {
    this.ssrcQueueMap.clear();
    return;
  };

  VideoQueueMGR.prototype.GetQueueData = function (key) {
    var queue_ = this.ssrcQueueMap.get(key);
    return queue_.dequeue();
  };

  VideoQueueMGR.prototype.PutQueueData = function (key, data) {
    var queue_ = this.ssrcQueueMap.get(key);
    queue_.enqueue(data);
  };

  VideoQueueMGR.prototype.GetQueueLength = function (key) {
    var queue_ = this.ssrcQueueMap.get(key);

    if (queue_) {
      return queue_.getLength();
    }

    return 0;
  };

  VideoQueueMGR.prototype.UpdateInfo = function (ssrc, ntp) {
    this.ssrcInfo.UpdateSSRCInfo(ssrc, ntp);
  };

  VideoQueueMGR.prototype.GetFpsInfo = function (ssrc) {
    return this.ssrcInfo.GetSSRCFpsInfo(ssrc);
  };
}

var AudioMGR = function () {
  function AudioMGR() {
    this.map = new _map.default();
    this.AudioQueueMGR = new AudioQueueMGR();
    this.timemap = new _map.default();
  }

  ;

  AudioMGR.prototype.Add = function (ssrc, audio_webwork) {
    this.map.set(ssrc, audio_webwork);
    this.AudioQueueMGR.AddQueue(ssrc);
  };

  AudioMGR.prototype.Clear = function () {
    this.map.clear();
  };

  AudioMGR.prototype.Keys = function () {
    return this.map.keys();
  };

  AudioMGR.prototype.UpdateSSRCTimeMap = function (timestamp) {
    // ssrc = ssrc >> 10;
    // if(this.timemap.containsKey(ssrc) === true){
    //     this.timemap.remove(ssrc);
    //     this.timemap.put(ssrc, timestamp);
    // }else{
    //     this.timemap.put(ssrc, timestamp);
    // }
    this.timemap = timestamp;
  };

  AudioMGR.prototype.GetSSRCTimeMap = function (ssrc) {
    if (this.timemap) {
      return this.timemap.get(ssrc);
    }

    return null;
  };

  return AudioMGR;
}();

exports.AudioMGR = AudioMGR;

function VideoMGR() {
  this.map = new _map.default();
  this.VideoQueueMGR = new VideoQueueMGR(); // this.ssrcNTPInfo = new AV_Map();
  // this.ssrcFramesInfo = new AV_Map();
  // this.ssrcFPSInfo= new AV_Map();
}

;

VideoMGR.prototype.Add = function (ssrc, video_webwork) {
  this.map.set(ssrc, video_webwork); // this.VideoQueueMGR.AddQueue(ssrc);
};

VideoMGR.prototype.Clear = function () {
  this.map.clear();
};

VideoMGR.prototype.Keys = function () {
  return this.map.keys();
}; //----------------------------------sharing


var SharingInfo = function SharingInfo() {
  this.frames = 0;
  this.ntp = new _queue.default();
};

exports.SharingInfo = SharingInfo;
SharingInfo.prototype = {
  UpdateSharingInfo: function UpdateSharingInfo(ntptime) {
    this.frames++;

    if (this.ntp.getLength() > 30) {
      this.ntp.dequeue();
    }

    this.ntp.enqueue(ntptime);
  },
  GetSharingFpsInfo: function GetSharingFpsInfo() {
    var length = this.ntp.getLength();

    if (length < 5) {
      return;
    }

    var fps = 0;
    var NotZeroTime = 0;
    var ZeroNTPNumb = 0;
    var StartNTPNotZero = 0;
    var lastNotZero = 0;

    for (var i = 0; i < length; i++) {
      var ntpTime = this.ntp.dequeue();

      if (ntpTime == 0 && StartNTPNotZero == 0) {
        ZeroNTPNumb++;
      } else if (ntpTime != 0) {
        lastNotZero = 0;

        if (StartNTPNotZero == 0) {
          StartNTPNotZero = ntpTime;
        }

        NotZeroTime = ntpTime;
      } else if (StartNTPNotZero != 0 && NotZeroTime != StartNTPNotZero && ntpTime == 0) {
        lastNotZero++;
      }
    }

    if (NotZeroTime == 0 || NotZeroTime == StartNTPNotZero) {
      fps = 0;
    } else {
      if (length - ZeroNTPNumb - lastNotZero - 1 != 0) {
        fps = (NotZeroTime - StartNTPNotZero) / (length - ZeroNTPNumb - lastNotZero - 1);
      } else {
        fps = 0;
      }
    }

    return fps;
  }
};

var SharingInfoMGR = function SharingInfoMGR() {
  this.ssrcInfoMap = new _map.default();
};

exports.SharingInfoMGR = SharingInfoMGR;
SharingInfoMGR.prototype = {
  UpdateSSRCInfo: function UpdateSSRCInfo(ssrc, ntp) {
    var info = this.ssrcInfoMap.get(ssrc);

    if (info) {
      info.UpdateSharingInfo(ntp);
    } else {
      info = new SharingInfo();
      this.ssrcInfoMap.set(ssrc, info);
      info.UpdateSharingInfo(ntp);
    }
  },
  GetSSRCFpsInfo: function GetSSRCFpsInfo(ssrc) {
    var info = this.ssrcInfoMap.get(ssrc);

    if (info) {
      return info.GetSharingFpsInfo();
    } else {
      return 0;
    }
  }
};

function SharingQueueMGR() {
  this.ssrcQueueMap = new _map.default();
  this.ssrcInfo = new SharingInfoMGR();

  SharingQueueMGR.prototype.AddQueue = function (key) {
    var queue = new _queue.default();
    this.ssrcQueueMap.set(key, queue);
    return queue;
  };

  SharingQueueMGR.prototype.DeleteQueue = function (key) {
    this.ssrcQueueMap.delete(key);
  };

  SharingQueueMGR.prototype.GetQueue = function (key) {
    var queue_ = this.ssrcQueueMap.get(key);
    return queue_;
  };

  SharingQueueMGR.prototype.ClearQueue = function () {
    this.ssrcQueueMap.clear();
    return;
  };

  SharingQueueMGR.prototype.GetQueueData = function (key) {
    var queue_ = this.ssrcQueueMap.get(key);
    return queue_.dequeue();
  };

  SharingQueueMGR.prototype.PutQueueData = function (key, data) {
    var queue_ = this.ssrcQueueMap.get(key);
    queue_.enqueue(data);
  };

  SharingQueueMGR.prototype.GetQueueLength = function (key) {
    var queue_ = this.ssrcQueueMap.get(key);

    if (queue_) {
      return queue_.getLength();
    }

    return 0;
  };

  SharingQueueMGR.prototype.UpdateInfo = function (ssrc, ntp) {
    this.ssrcInfo.UpdateSSRCInfo(ssrc, ntp);
  };

  SharingQueueMGR.prototype.GetFpsInfo = function (ssrc) {
    return this.ssrcInfo.GetSSRCFpsInfo(ssrc);
  };
}

function SharingMGR() {
  this.map = new _map.default();
  this.sQueue = new _queue.default();
  this.SharingQueueMGR = new SharingQueueMGR();
}

SharingMGR.prototype.Clear = function () {
  this.map.clear();
};

SharingMGR.prototype.Keys = function () {
  return this.map.keys();
};

SharingMGR.prototype.Add = function (ssrc, sharing_webwork) {
  this.map.set(ssrc, sharing_webwork);
};

SharingMGR.prototype.Get = function (ssrc) {
  // var handler=this.map.get(ssrc);
  return this.map.get(ssrc);
};

SharingMGR.prototype.PutData = function (data) {
  if (data && this.sQueue) this.sQueue.enqueue(data);
};

SharingMGR.prototype.GetData = function () {
  if (this.sQueue) {
    return this.sQueue.dequeue();
  }
};

SharingMGR.prototype.ClearBuffer = function () {
  if (this.sQueue) {
    this.sQueue = new _queue.default();
  }
};

/***/ }),

/***/ "./src/inside/JsMediaSDK_VideoRender.js":
/*!**********************************************!*\
  !*** ./src/inside/JsMediaSDK_VideoRender.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

var _interopRequireWildcard = __webpack_require__(/*! @babel/runtime/helpers/interopRequireWildcard */ "./node_modules/@babel/runtime/helpers/interopRequireWildcard.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var jsEvent = _interopRequireWildcard(__webpack_require__(/*! ../common/jsEvent */ "./src/common/jsEvent.js"));

var consts = _interopRequireWildcard(__webpack_require__(/*! ../worker/common/consts */ "./src/worker/common/consts.js"));

var _JsMediaSDK_WaterMark = _interopRequireDefault(__webpack_require__(/*! ./JsMediaSDK_WaterMark */ "./src/inside/JsMediaSDK_WaterMark.js"));

var _WebGLCanvas = _interopRequireDefault(__webpack_require__(/*! ../common/WebGLCanvas */ "./src/common/WebGLCanvas.js"));

var _JsMediaBuffer = __webpack_require__(/*! ../inside/JsMediaBuffer */ "./src/inside/JsMediaBuffer.js");

function VideoRender(params) {
  this.Notify_APPUI = params.Notify_APPUI;
  this.isSupportOffscreenCanvas = params.isSupportOffscreenCanvas;
  this.jsMediaEngine = params.jsMediaEngine;
  this.waterMarkCanvas = null;
  this.videoRenderLevel = 10;
  this.videoRenderLevelCount = 1;
  this.renderPeriodTotal = 100;
  this.renderPeriodCount = 0;
  this.renderPeriodTotalFps = 0;
  this.renderPeriodFpsCount = 0;
  this.lastRenderAudioTimeStamp = 0;
  this.videoBufEmptyCount = 0;
  this.videoBufCount = 0;
  this.videoRenderMaxLevel = 15;
  this.timestamp = 0;
  this.videoWaterMarkName = '';
  this.isCreateVideoWaterMark = false;
  this.currentactive = 0;
  this.currentVideoHeight = 0;
  this.currentVideoWidth = 0;
  this.videoRenderArray = [];
  this.WaterMarkRGBA = new _JsMediaSDK_WaterMark.default();
  this.vMonitorCount = 0;
  this.videoQueue = new _JsMediaBuffer.VideoQueueMGR();
}

VideoRender.prototype.JsMediaSDK_VideoRender = function () {
  var i = 0;

  if (this.videoRenderLevelCount == this.videoRenderLevel) {
    this.videoRenderLevelCount = 1;
  } else {
    this.videoRenderLevelCount++;
    return;
  }

  if (this.videoRenderArray.length != 0) {
    for (i = 0; i < this.videoRenderArray.length; i++) {
      // this.timestamp=jsMediaEngine.Get_Video_SSRC_Latest_Time(this.currentactive)
      if (this.jsMediaEngine) {
        this.timestamp = this.jsMediaEngine.Get_Video_SSRC_Latest_Time(this.currentactive);
      } else {//get timestamp from audio worklet
      }

      var video_buf = this.Get_Decoded_Video_Frame(this.currentactive);

      if (video_buf) {
        //count level
        this.videoBufEmptyCount = 0;
        this.videoBufCount = this.Get_Decoded_Video_Buffer_Length(this.currentactive);

        if (this.renderPeriodCount == this.renderPeriodTotal) {
          var frameInter = this.renderPeriodTotalFps / this.renderPeriodFpsCount;

          if (!frameInter || frameInter == 0) {
            if (!frameInter) {
              console.log("fps error");
            }

            frameInter = 100;
          }

          var level = Math.round(frameInter / this.videorenderinterval);

          if (this.videoRenderLevel < level) {
            this.videoRenderLevel++;
          }

          this.renderPeriodCount = 0;
          this.renderPeriodTotalFps = 0;
          this.renderPeriodFpsCount = 0;
        }

        this.renderPeriodCount++;
        var fps = this.Get_SSRC_VIDEO_FPS(this.currentactive);

        if (fps != 0) {
          this.renderPeriodFpsCount++;
          this.renderPeriodTotalFps += fps;
        } // console.log("fps is: " + fps + "Queue Length is : " + this.videoBufCount);


        var diffTime = this.timestamp - video_buf.ntptime;

        if (video_buf.ntptime != 0) {
          if (this.timestamp != 0) {
            // we need to syc a/v
            if (diffTime > 0 && diffTime <= 1000) {} else if (diffTime < 0 && diffTime >= -1000) {} else if (diffTime < -1000) {
              if (this.lastRenderAudioTimeStamp != this.timestamp) {
                this.videoRenderLevel -= 1;
              }
            } else {
              if (this.lastRenderAudioTimeStamp != this.timestamp) {
                this.videoRenderLevel += 1;
              }
            }

            this.lastRenderAudioTimeStamp = this.timestamp;
          }
        }

        var croppingParams = {
          top: video_buf.r_x,
          left: video_buf.r_y,
          height: video_buf.r_h,
          width: video_buf.r_w
        };

        if (this.isCreateVideoWaterMark || (this.currentVideoHeight != croppingParams.width || this.currentVideoWidth != croppingParams.height) && this.videoWaterMarkName && this.waterMarkCanvas) {
          this.isCreateVideoWaterMark = false;
          var watermark = this.WaterMarkRGBA.Get_WaterMarkRGBA(this.waterMarkCanvas, this.videoWaterMarkName, video_buf.width, video_buf.height);
          this.videoRenderArray[i].display.updateWatherMark(video_buf.width * 1, video_buf.height * 1, watermark);
        }

        if (this.currentVideoHeight != croppingParams.height || this.currentVideoWidth != croppingParams.width) {
          if (this.Notify_APPUI) {
            this.Notify_APPUI(jsEvent.CURRENT_VIDEO_RESOLUTION, {
              width: croppingParams.width,
              height: croppingParams.height
            });
          } else {
            postMessage({
              status: consts.CURRENT_VIDEO_RESOLUTION,
              width: croppingParams.width,
              height: croppingParams.height
            });
          }

          this.videoRenderArray[i].canvas.width = croppingParams.width;
          this.videoRenderArray[i].canvas.height = croppingParams.height;
          this.currentVideoHeight = croppingParams.height;
          this.currentVideoWidth = croppingParams.width;
        }

        if (video_buf.yuvdata.length == video_buf.width * video_buf.height * 3 / 2 && video_buf.r_x >= 0 && video_buf.r_y >= 0 && video_buf.r_x + video_buf.r_w <= video_buf.width && video_buf.r_y + video_buf.r_h <= video_buf.height) {
          if (this.vMonitorCount == 14 * 600) {
            if (this.jsMediaEngine) {
              this.jsMediaEngine.Send_Render_Monitor_Log("VDGLM");
            } else {
              postMessage({
                status: consts.VIDEO_RENDER_MONITOR_LOG,
                data: "VDGLW"
              });
            }

            this.vMonitorCount = 0;
          }

          this.vMonitorCount++;
          this.videoRenderArray[i].display.drawNextOuptutPictureGL(video_buf.width, video_buf.height, croppingParams, video_buf.yuvdata, video_buf.rotation, video_buf.yuv_limited);
        } else {
          console.error("invalid yuv data" + video_buf.r_x + " " + video_buf.r_y + " " + video_buf.r_w + " " + video_buf.r_h + " " + video_buf.width + " " + video_buf.height);
        }

        ;
      } else {
        this.videoBufEmptyCount++;

        if (true) {
          this.videoRenderLevel += 1; // console.log("Decelerator is " + this.videoRenderLevel);

          this.videoBufEmptyCount = 0;
        } // console.log("video buffer is empty");

      }

      if (this.videoBufCount * this.videoRenderLevel * 10 > 150) {
        this.videoRenderLevel -= 1; // console.log("Accelerator is " + this.videoRenderLevel);
      }

      if (this.videoRenderLevel < 1) {
        this.videoRenderLevel = 1;
      } else if (this.videoRenderLevel > this.videoRenderMaxLevel) {
        this.videoRenderLevel = this.videoRenderMaxLevel;
      }
    }
  }
};

VideoRender.prototype.Get_Decoded_Video_Frame = function (ssrc) {
  if (!this.videoQueue) {
    return;
  }

  var ssrc_queue_ = this.videoQueue.GetQueue(ssrc);

  if (ssrc_queue_) {
    var data_node = ssrc_queue_.dequeue();
    return data_node;
  }

  return null;
};

VideoRender.prototype.Set_SSRC_Latest_Time_Stamp = function (timestamp) {
  this.timestamp = timestamp;
};

VideoRender.prototype.Get_Decoded_Video_Buffer_Length = function (ssrc) {
  if (this.videoQueue) {
    return this.videoQueue.GetQueueLength(ssrc);
  }

  return 0;
};

VideoRender.prototype.Get_SSRC_VIDEO_FPS = function (ssrc) {
  ssrc = ssrc >> 10;

  if (this.videoQueue && this.videoQueue.ssrcInfo) {
    var fps = this.videoQueue.ssrcInfo.GetSSRCFpsInfo(ssrc);

    if (fps) {
      return Math.round(fps);
    }
  }

  return 0;
};

VideoRender.prototype.Change_Current_SSRC = function (ssrc) {
  this.currentactive = ssrc;
  this.ClearQueue();
};

VideoRender.prototype.Set_Render_Array = function (videoRenderArray) {
  this.videoRenderArray = videoRenderArray;

  if (this.videoRenderArray.length > 0) {
    for (var i = 0; i < this.videoRenderArray.length; i++) {
      this.videoRenderArray[i].display = new _WebGLCanvas.default(this.videoRenderArray[i].canvas, undefined, {
        webglcontextlostCallback: this.webglcontextlostCallback.bind(this),
        webglcontextrestoredCallback: this.webglcontextrestoredCallback.bind(this),
        params: {
          videoRenderArrayIndex: i
        }
      });
    }
  }
};

VideoRender.prototype.webglcontextlostCallback = function (ev, _ref) {// Not necessary to handle this event

  var videoRenderArrayIndex = _ref.videoRenderArrayIndex;
};

VideoRender.prototype.webglcontextrestoredCallback = function (ev, _ref2) {
  var videoRenderArrayIndex = _ref2.videoRenderArrayIndex;
  this.videoRenderArray[videoRenderArrayIndex].display = new _WebGLCanvas.default(this.videoRenderArray[videoRenderArrayIndex].canvas, undefined, {
    webglcontextlostCallback: this.webglcontextlostCallback.bind(this),
    webglcontextrestoredCallback: this.webglcontextrestoredCallback.bind(this),
    params: {
      videoRenderArrayIndex: videoRenderArrayIndex
    }
  });
};

VideoRender.prototype.ClearQueue = function () {
  if (this.videoQueue) {
    this.videoQueue.ClearQueue();
  }

  this.currentVideoHeight = 0;
  this.currentVideoWidth = 0;
};

VideoRender.prototype.Set_WaterMark_Info = function (waterMarkCanvas, isCreateVideoWaterMark, videoWaterMarkName) {
  this.waterMarkCanvas = waterMarkCanvas;
  this.isCreateVideoWaterMark = isCreateVideoWaterMark;
  this.videoWaterMarkName = videoWaterMarkName;
};

VideoRender.prototype.Get_Video_Data_From_Queue = function (message) {
  if (this.videoQueue) {
    var ssrcqueue_ = this.videoQueue.GetQueue(message.ssrc);

    if (!ssrcqueue_) {
      ssrcqueue_ = this.videoQueue.AddQueue(message.ssrc);
    }

    ssrcqueue_.enqueue(message);

    if (this.videoQueue && this.videoQueue.ssrcInfo) {
      var ssrc_node_part = message.ssrc >> 10;
      this.videoQueue.ssrcInfo.UpdateSSRCInfo(ssrc_node_part, message.ntptime);
    }

    var videoqueuelength = this.videoQueue.GetQueueLength(message.ssrc);
    var diff = videoqueuelength - 30;

    while (diff >= 0) {
      this.Get_Decoded_Video_Frame(message.ssrc);
      diff--;
    }
  }
};

var _default = VideoRender;
exports.default = _default;

/***/ }),

/***/ "./src/inside/JsMediaSDK_WaterMark.js":
/*!********************************************!*\
  !*** ./src/inside/JsMediaSDK_WaterMark.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

function JsMediaSDK_WaterMarkRGBA() {}

JsMediaSDK_WaterMarkRGBA.prototype.Get_WaterMarkRGBA = function (canvas, name, width, height, cwidth, cheight) {
  if (!name || !width || !height) {
    return;
  }

  var ratio = 1;
  width = width * ratio;
  height = height * ratio;
  cwidth = height;
  canvas.width = width;
  canvas.height = height;
  var ctx = canvas.getContext("2d");
  ctx.clearRect(0, 0, canvas.width, canvas.height);
  ctx.translate(canvas.width / 2, canvas.height / 2);
  ctx.rotate(-45 * Math.PI / 180);
  ctx.lineWidth = 1.0;
  ctx.fillStyle = "rgba(90,90,90,0.25)";
  var index = 0;
  var fontSize = Math.SQRT2 * cwidth / name.length;
  ctx.imageSmoothingEnabled = true;
  ctx.font = fontSize + "px  'Segoe UI'";
  var text_width = ctx.measureText(name);

  if (name.length == 1) {
    ctx.fillText(name, -text_width.width / 2, text_width.width / 2);
  } else {
    fontSize = 2;
    ctx.font = fontSize + "px  'Segoe UI'";
    text_width = ctx.measureText(name);

    while (text_width.width < Math.SQRT2 * cwidth - 2 * ctx.measureText(name[0]).width) {
      // console.error(ctx.measureText(name[0]).width)
      fontSize = fontSize + 1;
      ctx.font = fontSize + "px  'Segoe UI'";
      text_width = ctx.measureText(name);
    }

    ctx.fillText(name, -Math.SQRT2 * cwidth / 2 + Math.abs(Math.SQRT2 * cwidth / 2 - text_width.width / 2), ctx.measureText(name[0]).width / 2);
  }

  var image_data = ctx.getImageData(0, 0, ctx.canvas.width, ctx.canvas.height);
  var water_mark = new Uint8Array(image_data.data.buffer);
  return water_mark;
};

var _default = JsMediaSDK_WaterMarkRGBA;
exports.default = _default;

/***/ }),

/***/ "./src/worker/common/common.js":
/*!*************************************!*\
  !*** ./src/worker/common/common.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.add_monitor = add_monitor;
exports.instantiateCachedURL = instantiateCachedURL;
exports.str2uint8s = str2uint8s;

var _promise = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/core-js/promise */ "./node_modules/@babel/runtime/core-js/promise.js"));

var _consts = __webpack_require__(/*! ./consts */ "./src/worker/common/consts.js");

function add_monitor(log) {
  postMessage({
    status: _consts.WCL_TROUBLESHOOTING_INFO,
    data: log
  });
}

function instantiateCachedURL(dbVersion, url, importObject) {
  var wasmSuccessEvent = self.wasmSuccessEvent;
  var wasmFailEvent = self.wasmFailEvent;
  var databaseName = self.databaseName;
  var databaseDataType = self.databaseDataType;

  function fetch_wasm(url, importObject) {
    return sdkFetch(url);
  }

  function sdkFetch(url) {
    var that = self;
    return new _promise.default(function (resolve, reject) {
      that.addEventListener("message", function (e) {
        var data = e.data;

        if (data.command === "DOWNLOAD_WASM_FROM_MAIN_THREAD_OK") {
          add_monitor("DE");
          resolve(data.data);
        }

        if (data.command === "DOWNLOAD_WASM_FROM_MAIN_THREAD_FAILED") {
          reject();
        }
      });
      add_monitor("DS");
      postMessage({
        status: _consts.DOWNLOAD_WASM_FROM_MAIN_THREAD,
        url: url
      });
    });
  }

  function fetchAndInstantiate(url) {
    return new _promise.default(function (resolve, reject) {
      try {
        if (indexedDB) {
          var readWriteMode = typeof IDBTransaction.READ_WRITE == "undefined" ? "readwrite" : IDBTransaction.READ_WRITE;

          var request = indexedDB.open(databaseName, dbVersion),
              db,
              createObjectStore = function createObjectStore(dataBase) {
            var storeName = "file";

            if (dataBase.objectStoreNames.contains(storeName)) {
              dataBase.deleteObjectStore(storeName);
            }

            dataBase.createObjectStore(storeName);
          };

          request.onerror = function (event) {
            var rt = indexedDB.deleteDatabase(databaseName);

            rt.onerror = function (event) {
              console.log("Error deleting database");
            };

            rt.onsuccess = function (event) {
              console.log("Database deleted successfully");
            };

            resolve(fetch_wasm(url, importObject).then(function (buffer) {
              // let start_c =new Date().getTime();
              add_monitor("CS");
              var rt = WebAssembly.instantiate(buffer, importObject);
              add_monitor("CE"); // let delta_c = new Date().getTime()-start_c;
              // postMessage({
              //     status:DELTA_C,
              //     data:delta_c
              // })

              return rt;
            }));
          };

          request.onsuccess = function (event) {
            db = event.target.result; // console.error(db);

            var store = db.transaction(["file"], readWriteMode).objectStore("file");
            var getRet = store.get(databaseDataType);

            getRet.onsuccess = function (event) {
              if (getRet.result) {
                var imgFile = event.target.result; // let start_c =new Date().getTime();

                add_monitor("CS");
                var rt = WebAssembly.instantiate(imgFile, importObject);
                add_monitor("CE"); // let delta_c = new Date().getTime()-start_c;
                // postMessage({
                //     status:DELTA_C,
                //     data:delta_c
                // })

                return resolve(rt);
              } else {
                resolve(fetch_wasm(url, importObject).then(function (buffer) {
                  db.transaction(["file"], readWriteMode).objectStore("file").put(buffer, databaseDataType); // let start_c =new Date().getTime();

                  add_monitor("CS");
                  var rt = WebAssembly.instantiate(buffer, importObject);
                  add_monitor("CE"); // let delta_c = new Date().getTime()-start_c;
                  // postMessage({
                  //     status:DELTA_C,
                  //     data:delta_c
                  // })

                  return rt;
                }));
              }
            };

            getRet.onerror = function (event) {
              // console.error("fetch");
              resolve(fetch_wasm(url, importObject).then(function (buffer) {
                // let start_c =new Date().getTime();
                add_monitor("CS");
                var rt = WebAssembly.instantiate(buffer, importObject);
                add_monitor("CE"); // let delta_c = new Date().getTime()-start_c;
                // postMessage({
                //     status:DELTA_C,
                //     data:delta_c
                // })

                return rt;
              }));
            };
          };

          request.onupgradeneeded = function (event) {
            createObjectStore(event.target.result);
          };
        } else {
          resolve(fetch_wasm(url, importObject).then(function (buffer) {
            // let start_c =new Date().getTime();
            add_monitor("CS");
            var rt = WebAssembly.instantiate(buffer, importObject);
            add_monitor("CE"); // let delta_c = new Date().getTime()-start_c;
            // postMessage({
            //     status:DELTA_C,
            //     data:delta_c
            // })

            return rt;
          }));
        }
      } catch (error) {
        resolve(fetch_wasm(url, importObject).then(function (buffer) {
          // let start_c =new Date().getTime();
          add_monitor("CS");
          var rt = WebAssembly.instantiate(buffer, importObject);
          add_monitor("CE"); // let delta_c = new Date().getTime()-start_c;
          // postMessage({
          //     status:DELTA_C,
          //     data:delta_c
          // })

          return rt;
        }));
      }
    });
  }

  ;

  function receiveInstance2(instance, module) {
    //	debugger
    var exports = instance.exports;
    Module["asm"] = exports;
    wasmModule = module;
    if (!ENVIRONMENT_IS_PTHREAD) self.removeRunDependency("wasm-instantiate");
  }

  function receiveInstantiatedSource(output) {
    receiveInstance2(output["instance"], output["module"]);
  }

  function receiveInstance(instance) {
    var exports = instance.exports;
    if (exports.memory) mergeMemory(exports.memory); // do not use self.Module
    // because from 2019.09.19 latest Mac safari, using self.Module will get 'wasm init' failed
    // Root cause : safari change self.Module to a native pointer, while all the needed properties are in the Module. (local variable)

    Module["asm"] = exports;
    Module["usingWasm"] = true;
    self.removeRunDependency("wasm-instantiate");
  }

  return fetchAndInstantiate(url).then(function (results) {
    if (url.includes("video.mt")) receiveInstantiatedSource(results);
    receiveInstance(results.instance);
    self.Fetch_WASM_OK = true;
    postMessage({
      status: wasmSuccessEvent
    });
    return;
  }).catch(function (reason) {
    console.log(reason);
    postMessage({
      status: wasmFailEvent
    });
    return;
  });
}

function str2uint8s(str) {
  if (!str) {
    return null;
  }

  var uint8s = new Uint8Array(str.length);

  for (var i = 0; i < str.length; i++) {
    uint8s[i] = str.charCodeAt(i);
  }

  return uint8s;
}

/***/ }),

/***/ "./src/worker/common/consts.js":
/*!*************************************!*\
  !*** ./src/worker/common/consts.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.serverHeartbeatMaxTimeoutSeconds = exports.CURRENT_SSRC_TIME = exports.AES_GCM_IV_CALLBACK_FROM_WASM = exports.AES_GCM_IV_TO_WASM = exports.SHARING_GET_IMAGE_DATA_WRONG = exports.SHARING_RENDER_MONITOR_LOG = exports.Sharing_Width_And_Height_Info = exports.VIDEO_RENDER_MONITOR_LOG = exports.CURRENT_VIDEO_RESOLUTION = exports.MEDIA_VIDEO_RTCP = exports.MEDIA_VIDEO_DATA = exports.MEDIA_AUDIO_RTCP = exports.MEDIA_AUDIO_DATA = exports.MEDIA_VIDEO_REPORT_DROP_RATIO = exports.AUDIO_CLIPPING = exports.Sharing_Dec_WebSocket_FAILED = exports.Sharing_Handle_FAILED = exports.Audio_Mute = exports.Sharing_Dec_WASM_FAILED = exports.Video_Enc_Handle_FAILED = exports.Video_Enc_WASM_FAILED = exports.Video_Dec_WebSocket_FAILED = exports.Video_Dec_Handle_FAILED = exports.Video_Dec_WASM_FAILED = exports.Audio_Enc_Handle_FAILED = exports.Audio_Enc_WASM_FAILED = exports.Audio_Dec_WebSocket_FAILED = exports.Audio_Dec_Handle_FAILED = exports.Audio_Dec_WASM_FAILED = exports.THREAD_STATE_CREATED = exports.THREAD_STATE_CREATING = exports.THREAD_STATE_IDLE = exports.AUDIO_ENCODED_DATA = exports.VIDEO_DATA_DROP_RATIO = exports.VIDEO_DROP_RATIO_FROM_WCL = exports.VIDEO_ENCODED_DATA = exports.SHARING_DECODE_MESSAGE = exports.MOUSE_DATA_VIDEO_MODE = exports.SHARING_DATA_VIDEO_MODE = exports.WCL_TROUBLESHOOTING_INFO = exports.DELTA_S = exports.DELTA_C = exports.DELTA_D = exports.APP_TROUBLESHOOTING_INFO = exports.DOWNLOAD_WASM_FROM_MAIN_THREAD = exports.MONITOR_MESSAGE = exports.Video_Capture_Tick = exports.DECODE_MESSAGE = exports.Sharing_Data = exports.Sharing_Handle_OK = exports.Sharing_Dec_WebSocket_OK = exports.AUDIO_DELAY = exports.Sharing_Dec_PICTURE = exports.Sharing_Dec_WASM_OK = exports.Video_Enc_Handle_OK = exports.Video_Enc_WASM_OK = exports.Video_Dec_WebSocket_OK = exports.Video_Dec_Handle_OK = exports.Video_Dec_WASM_OK = exports.Audio_Enc_Handle_OK = exports.Audio_Enc_WASM_OK = exports.Audio_Dec_WebSocket_OK = exports.Audio_Dec_Handle_OK = exports.Audio_Dec_WASM_OK = void 0;
//web work
//success
var Audio_Dec_WASM_OK = 1;
exports.Audio_Dec_WASM_OK = Audio_Dec_WASM_OK;
var Audio_Dec_Handle_OK = 2;
exports.Audio_Dec_Handle_OK = Audio_Dec_Handle_OK;
var Audio_Dec_WebSocket_OK = 3;
exports.Audio_Dec_WebSocket_OK = Audio_Dec_WebSocket_OK;
var Audio_Enc_WASM_OK = 4;
exports.Audio_Enc_WASM_OK = Audio_Enc_WASM_OK;
var Audio_Enc_Handle_OK = 5;
exports.Audio_Enc_Handle_OK = Audio_Enc_Handle_OK;
var Video_Dec_WASM_OK = 7;
exports.Video_Dec_WASM_OK = Video_Dec_WASM_OK;
var Video_Dec_Handle_OK = 8;
exports.Video_Dec_Handle_OK = Video_Dec_Handle_OK;
var Video_Dec_WebSocket_OK = 9;
exports.Video_Dec_WebSocket_OK = Video_Dec_WebSocket_OK;
var Video_Enc_WASM_OK = 10;
exports.Video_Enc_WASM_OK = Video_Enc_WASM_OK;
var Video_Enc_Handle_OK = 11;
exports.Video_Enc_Handle_OK = Video_Enc_Handle_OK;
var Sharing_Dec_WASM_OK = 12;
exports.Sharing_Dec_WASM_OK = Sharing_Dec_WASM_OK;
var Sharing_Dec_PICTURE = 13;
exports.Sharing_Dec_PICTURE = Sharing_Dec_PICTURE;
var AUDIO_DELAY = 14;
exports.AUDIO_DELAY = AUDIO_DELAY;
var Sharing_Dec_WebSocket_OK = 15;
exports.Sharing_Dec_WebSocket_OK = Sharing_Dec_WebSocket_OK;
var Sharing_Handle_OK = 16;
exports.Sharing_Handle_OK = Sharing_Handle_OK;
var Sharing_Data = 17;
exports.Sharing_Data = Sharing_Data;
var DECODE_MESSAGE = 18;
exports.DECODE_MESSAGE = DECODE_MESSAGE;
var Video_Capture_Tick = 20;
exports.Video_Capture_Tick = Video_Capture_Tick;
var MONITOR_MESSAGE = 21;
exports.MONITOR_MESSAGE = MONITOR_MESSAGE;
var DOWNLOAD_WASM_FROM_MAIN_THREAD = 30;
exports.DOWNLOAD_WASM_FROM_MAIN_THREAD = DOWNLOAD_WASM_FROM_MAIN_THREAD;
var APP_TROUBLESHOOTING_INFO = 31;
exports.APP_TROUBLESHOOTING_INFO = APP_TROUBLESHOOTING_INFO;
var DELTA_D = 32;
exports.DELTA_D = DELTA_D;
var DELTA_C = 33;
exports.DELTA_C = DELTA_C;
var DELTA_S = 34;
exports.DELTA_S = DELTA_S;
var WCL_TROUBLESHOOTING_INFO = 35;
exports.WCL_TROUBLESHOOTING_INFO = WCL_TROUBLESHOOTING_INFO;
var SHARING_DATA_VIDEO_MODE = 36;
exports.SHARING_DATA_VIDEO_MODE = SHARING_DATA_VIDEO_MODE;
var MOUSE_DATA_VIDEO_MODE = 37;
exports.MOUSE_DATA_VIDEO_MODE = MOUSE_DATA_VIDEO_MODE;
var SHARING_DECODE_MESSAGE = 38;
exports.SHARING_DECODE_MESSAGE = SHARING_DECODE_MESSAGE;
var VIDEO_ENCODED_DATA = 39;
exports.VIDEO_ENCODED_DATA = VIDEO_ENCODED_DATA;
var VIDEO_DROP_RATIO_FROM_WCL = 40;
exports.VIDEO_DROP_RATIO_FROM_WCL = VIDEO_DROP_RATIO_FROM_WCL;
var VIDEO_DATA_DROP_RATIO = 41;
exports.VIDEO_DATA_DROP_RATIO = VIDEO_DATA_DROP_RATIO;
var AUDIO_ENCODED_DATA = 42; // push encoded audio data from worker to main thread

exports.AUDIO_ENCODED_DATA = AUDIO_ENCODED_DATA;
var THREAD_STATE_IDLE = 43;
exports.THREAD_STATE_IDLE = THREAD_STATE_IDLE;
var THREAD_STATE_CREATING = 44;
exports.THREAD_STATE_CREATING = THREAD_STATE_CREATING;
var THREAD_STATE_CREATED = 45; //failed

exports.THREAD_STATE_CREATED = THREAD_STATE_CREATED;
var Audio_Dec_WASM_FAILED = -1;
exports.Audio_Dec_WASM_FAILED = Audio_Dec_WASM_FAILED;
var Audio_Dec_Handle_FAILED = -2;
exports.Audio_Dec_Handle_FAILED = Audio_Dec_Handle_FAILED;
var Audio_Dec_WebSocket_FAILED = -3;
exports.Audio_Dec_WebSocket_FAILED = Audio_Dec_WebSocket_FAILED;
var Audio_Enc_WASM_FAILED = -4;
exports.Audio_Enc_WASM_FAILED = Audio_Enc_WASM_FAILED;
var Audio_Enc_Handle_FAILED = -5;
exports.Audio_Enc_Handle_FAILED = Audio_Enc_Handle_FAILED;
var Video_Dec_WASM_FAILED = -7;
exports.Video_Dec_WASM_FAILED = Video_Dec_WASM_FAILED;
var Video_Dec_Handle_FAILED = -8;
exports.Video_Dec_Handle_FAILED = Video_Dec_Handle_FAILED;
var Video_Dec_WebSocket_FAILED = -9;
exports.Video_Dec_WebSocket_FAILED = Video_Dec_WebSocket_FAILED;
var Video_Enc_WASM_FAILED = -10;
exports.Video_Enc_WASM_FAILED = Video_Enc_WASM_FAILED;
var Video_Enc_Handle_FAILED = -11;
exports.Video_Enc_Handle_FAILED = Video_Enc_Handle_FAILED;
var Sharing_Dec_WASM_FAILED = -12;
exports.Sharing_Dec_WASM_FAILED = Sharing_Dec_WASM_FAILED;
var Audio_Mute = -13;
exports.Audio_Mute = Audio_Mute;
var Sharing_Handle_FAILED = -14;
exports.Sharing_Handle_FAILED = Sharing_Handle_FAILED;
var Sharing_Dec_WebSocket_FAILED = -15;
exports.Sharing_Dec_WebSocket_FAILED = Sharing_Dec_WebSocket_FAILED;
var AUDIO_CLIPPING = -23;
exports.AUDIO_CLIPPING = AUDIO_CLIPPING;
var MEDIA_VIDEO_REPORT_DROP_RATIO = 100;
exports.MEDIA_VIDEO_REPORT_DROP_RATIO = MEDIA_VIDEO_REPORT_DROP_RATIO;
var MEDIA_AUDIO_DATA = 1;
exports.MEDIA_AUDIO_DATA = MEDIA_AUDIO_DATA;
var MEDIA_AUDIO_RTCP = 6;
exports.MEDIA_AUDIO_RTCP = MEDIA_AUDIO_RTCP;
var MEDIA_VIDEO_DATA = 2;
exports.MEDIA_VIDEO_DATA = MEDIA_VIDEO_DATA;
var MEDIA_VIDEO_RTCP = 7;
exports.MEDIA_VIDEO_RTCP = MEDIA_VIDEO_RTCP;
var CURRENT_VIDEO_RESOLUTION = 50;
exports.CURRENT_VIDEO_RESOLUTION = CURRENT_VIDEO_RESOLUTION;
var VIDEO_RENDER_MONITOR_LOG = 51;
exports.VIDEO_RENDER_MONITOR_LOG = VIDEO_RENDER_MONITOR_LOG;
var Sharing_Width_And_Height_Info = 52;
exports.Sharing_Width_And_Height_Info = Sharing_Width_And_Height_Info;
var SHARING_RENDER_MONITOR_LOG = 53;
exports.SHARING_RENDER_MONITOR_LOG = SHARING_RENDER_MONITOR_LOG;
var SHARING_GET_IMAGE_DATA_WRONG = 54;
exports.SHARING_GET_IMAGE_DATA_WRONG = SHARING_GET_IMAGE_DATA_WRONG;
var AES_GCM_IV_TO_WASM = 55;
exports.AES_GCM_IV_TO_WASM = AES_GCM_IV_TO_WASM;
var AES_GCM_IV_CALLBACK_FROM_WASM = 56;
exports.AES_GCM_IV_CALLBACK_FROM_WASM = AES_GCM_IV_CALLBACK_FROM_WASM;
var CURRENT_SSRC_TIME = 57;
/**
 * webclient set 60 seconds, SDK set 65 seconds
 */

exports.CURRENT_SSRC_TIME = CURRENT_SSRC_TIME;
var serverHeartbeatMaxTimeoutSeconds = 65;
exports.serverHeartbeatMaxTimeoutSeconds = serverHeartbeatMaxTimeoutSeconds;

/***/ }),

/***/ "./src/worker/video.js":
/*!*****************************!*\
  !*** ./src/worker/video.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireWildcard = __webpack_require__(/*! @babel/runtime/helpers/interopRequireWildcard */ "./node_modules/@babel/runtime/helpers/interopRequireWildcard.js");

var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.JsMediaSDK_Log = JsMediaSDK_Log;
exports.JsSocket_Log = JsSocket_Log;
exports.Channel_Agent = Channel_Agent;
exports.Channel_Agent_Debug = Channel_Agent_Debug;
exports.Open_Video_WebSocket_Connect_Debug = Open_Video_WebSocket_Connect_Debug;
exports.video_websocket_on_open_Debug = video_websocket_on_open_Debug;
exports.Open_Video_WebSocket_Connect = Open_Video_WebSocket_Connect;
exports.video_websocket_on_open = video_websocket_on_open;
exports.video_websocket_on_message = video_websocket_on_message;
exports.IsSupportMultiThread = IsSupportMultiThread;
exports.GetCscThreadNum = GetCscThreadNum;
exports.GetEncThreadNum = GetEncThreadNum;
exports.video_websocket2_on_message = video_websocket2_on_message;
exports.removeSocketFromSocketList = removeSocketFromSocketList;
exports.video_websocket_on_close = video_websocket_on_close;
exports.video_websocket_on_error = video_websocket_on_error;
exports.js_info_from_wcl = js_info_from_wcl;
exports.frame_callback = frame_callback;
exports.monitor_drop_ratio = monitor_drop_ratio;
exports.decode_callback = decode_callback;
exports.send_data = send_data;
exports.APP_Troubleshoting_Info = APP_Troubleshoting_Info;
exports.Monitor_Callback = Monitor_Callback;
exports.Monitor_CallbackE = Monitor_CallbackE;
exports.Monitor_CallbackD = Monitor_CallbackD;
exports.LOG_OUT = LOG_OUT;
exports.Utf8ArrayToStr = Utf8ArrayToStr;
exports.addDebugLogWebSocket = addDebugLogWebSocket;
exports.SAVE_IV = SAVE_IV;
exports.getWasmMemory = getWasmMemory;
exports.freeWasmMemory = freeWasmMemory;

var _assign = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/core-js/object/assign */ "./node_modules/@babel/runtime/core-js/object/assign.js"));

var _map = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/core-js/map */ "./node_modules/@babel/runtime/core-js/map.js"));

var _keys = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/core-js/object/keys */ "./node_modules/@babel/runtime/core-js/object/keys.js"));

var _common = __webpack_require__(/*! ./common/common */ "./src/worker/common/common.js");

var consts = _interopRequireWildcard(__webpack_require__(/*! ./common/consts */ "./src/worker/common/consts.js"));

var _JsMediaSDK_VideoRender = _interopRequireDefault(__webpack_require__(/*! ../inside/JsMediaSDK_VideoRender */ "./src/inside/JsMediaSDK_VideoRender.js"));

var _CommonEnums = __webpack_require__(/*! ../common/enums/CommonEnums */ "./src/common/enums/CommonEnums.js");

(0, _keys.default)(consts).forEach(function (k) {
  return self[k] = consts[k];
});
WebAssembly.instantiateStreaming = false;
self.wasmSuccessEvent = consts.Video_Dec_WASM_OK;
self.wasmFailEvent = consts.Video_Dec_WASM_FAILED;
self.databaseName = "VIDEO_FILE";
self.instantiateCachedURL = _common.instantiateCachedURL;

function JsMediaSDK_Log(e) {
  console.log(e);
}

function JsSocket_Log(e) {
  console.log(e);
}

function Queue() {
  this.a = [];
  this.b = 0;
  this.residue = null; //  this.key = key;
}

;

Queue.prototype.getLength = function () {
  return this.a.length - this.b;
};

Queue.prototype.isEmpty = function () {
  return 0 == this.a.length;
};

Queue.prototype.enqueue = function (data) {
  this.a.push(data);
};

Queue.prototype.dequeue = function () {
  if (0 != this.a.length) {
    var c = this.a[this.b];
    2 * ++this.b >= this.a.length && (this.a = this.a.slice(this.b), this.b = 0);
    return c;
  }

  return null;
};

Queue.prototype.peek = function () {
  return 0 < this.a.length ? this.a[this.b] : void 0;
};

var video_buffer = new Queue();
var video_init;
var video_uninit;
var video_decode;
var video_encode;
var video_analysis;
var video_set_websocket_speed;
var video_start_encode;
var video_stop_encode;
var video_update_format;
var video_get_sending_status;
var video_get_encode_codec_info;
var video_get_decode_codec_info;
var video_set_data_encryption;
var video_add_cooker_info;
var video_remove_cooker_info;
var get_video_meat_weight;

self.onWasmModuleReady = function () {
  // do not use self.Module
  // because from 2019.09.19 latest Mac safari, using self.Module will get 'wasm init' failed
  // Root cause : safari change self.Module to a native pointer, while all the needed properties are in the Module. (local variable)
  video_init = Module.cwrap('_Video_Init', 'number', ['number', 'number', 'string', 'string', 'number', 'number']);
  video_uninit = Module.cwrap("_Video_UnInit", "number", ["number"]);
  video_decode = Module.cwrap("_Video_Decode", "number", ["number", "array", "number"]);
  video_encode = Module.cwrap("_Video_Encode", "number", ["number", "number", "number"]);
  video_analysis = Module.cwrap("_Video_Try_Analysis", "number", ["number", "array", "number"]);
  video_set_websocket_speed = Module.cwrap("_Video_Websocket_Speed", "number", ["number", "number", "number"]);
  video_start_encode = Module.cwrap("_Video_Start_Encode", "number", ["number", "number", "number", "number"]);
  video_stop_encode = Module.cwrap("_Video_Stop_Encode", "number", ["number"]);
  video_update_format = Module.cwrap("_Video_Update_Format", "number", ["number", "number", "number", "number"]);
  video_get_sending_status = Module.cwrap("_Video_Get_Sending_Status", "number", ["number"]);
  video_get_encode_codec_info = Module.cwrap("_Video_Get_Encode_Codec_Info", "number", ["number"]);
  video_get_decode_codec_info = Module.cwrap("_Video_Get_Decode_Codec_Info", "number", ["number"]);
  video_set_data_encryption = Module.cwrap("_Video_Set_Data_Encryption", "number", ["number", "number"]);
  video_add_cooker_info = Module.cwrap('_Add_Video_Cooker_info', 'number', ['number', 'number', 'number', 'number']);
  video_remove_cooker_info = Module.cwrap('_Remove_Video_Cooker_Info', 'number', ['number', 'number']);
  get_video_meat_weight = Module.cwrap('_Get_Video_Meat_Weight', 'number', ['number', 'number']);
};

var video_handle = null;
var videoWebsocketList = [];
var video_websocket = null;
var video_websocket2 = null;
var video_websocket_index = 1;
var ip_address = null;
var video_websocket_Debug = null;
var logon = false;
var peroid_start_time = null;
var peroid_total_amount = 0;
var peroid_speed = 0;
var last_peroid_speed = 0;
var video_capture_interval = 0;
var video_encrypt = false;
var isChromeOrEdge = false;
var pdu = null; //Monitor

var monitor_video_last_time = 0;
var monitor_video_first = true;
var monitor_video_elapsed_compute_time = 0;
var monitor_video_elapsed_write_time = 0;
var monitor_video_count = 0;
var monitor_video_fps = 0;
var monitor_video_avg_fps = 0;
var monitor_video_min_fps = 0;
var monitor_video_max_fps = 0;
var monitor_video_width = 0;
var monitor_video_height = 0;
var monitor_video_encoded_width = 0;
var monitor_video_encoded_height = 0;
var monitor_video_max_sub_for_me = 0;
var monitor_video_encoded_total_frames = 0;
var monitor_video_encoded_delta_frames = 0;
var monitor_video_encoded_min_fps = 0;
var monitor_video_encoded_max_fps = 0;
var monitor_video_encoded_avg_fps = 0;
var monitor_video_encoded_fps = 0;
var monitor_video_send_buffer = 0;
var monitor_video_max_size = 2; //

var monitor_video_max_decoding_time = 0;
var monitor_video_min_decoding_time = 0;
var monitor_video_avg_decoding_time = 0;
var monitor_video_sdev_decoding_time = 0; //

var monitor_video_max_encode_time = 0;
var monitor_video_min_encode_time = 0;
var monitor_video_avg_encode_time = 0;
var monitor_video_sdev_encode_time = 0; //dataChannel dropRatio

var isSendVideo = null;
var isDataChannelOpen = false;
var start_handle_init = false;
var confIdBak;
var lastVideoEncodeSSID = null;
var meetingnumb;
var meetingid;
var isStartCaptureVideo = false;
var video_memory_ptr = null;
var video_momory_subarray = null;
var video_memory_len = 0;
var canvas = new _map.default();
var canvasWidth;
var canvasHeight;
var canvasTop;
var canvasLeft;
var videoRenderInterval = null;
var suppensionAndMainCanvas = new _map.default();
var waterMarkCanvasInWorker = null;
var VideoRenderObj = null;
var videoRenderArray = [];
var isVideoPlayWork = false;
var isSupportOffscreenCanvas = false;
var videoWaterMarkName = '';
var isCreateVideoWaterMark = false; //new GCM

var videoenczoomid;
var videoencid;
var videoGetIvInteval;
var lastIv;

function Channel_Agent() {
  this.socket = null;
  this.onopen = null;
  this.onmessage = null;
  this.onerror = null;
  this.onclose = null;
  this.websocketaddress = null;
  this.startwebsocketreconnecttime = null;
  this.reconnect = null;
  this.connectIndex = 0;
  this.activeclosewebsocket = false;

  function monitorConnectionStatus(ins) {
    var lastMessageComingTimestamp = null;
    var serverHeartbeatMaxTimeoutSeconds = consts.serverHeartbeatMaxTimeoutSeconds;
    var monitorIntervalSeconds = 1;
    var monitorInterval = null;
    var messageHandler = ins.onmessage;
    var openHandler = ins.onopen;
    var closeHandler = ins.onclose;

    ins.onmessage = function (ev) {
      lastMessageComingTimestamp = new Date().getTime();
      messageHandler.call(ins, ev);
    };

    ins.onopen = function (ev) {
      lastMessageComingTimestamp = new Date().getTime();
      startMonitorInterval();
      openHandler.call(ins, ev, ins);
    };

    ins.onclose = function (ev) {
      try {
        removeMonitorInterval();
      } catch (e) {
        console.error("ins.onclose", e);
      } // do not execute closeHandler, because
      // 1. it is never used before
      // 2. there is only log in this closeHandler right now


      closeHandler.call(ins, ev, ins);
    };

    function removeMonitorInterval() {
      clearInterval(monitorInterval);
    }

    function startMonitorInterval() {
      if (monitorInterval) return;
      monitorInterval = setInterval(function () {
        if (new Date().getTime() - lastMessageComingTimestamp >= serverHeartbeatMaxTimeoutSeconds * 1000) {
          clearInterval(monitorInterval);
          monitorInterval = null;
          console.error("sdk network is not available!");
          ins.socket.close();
        }
      }, monitorIntervalSeconds * 1000);
    }
  }

  this.init = function (e, i, t, n, r) {
    this.websocketaddress = e;
    this.onopen = i;
    this.onmessage = t;
    this.onerror = n;
    this.onclose = r;
    monitorConnectionStatus(this);
  };

  this.connect = function (e, i, t, n, r) {
    var o = this;
    (0, _common.add_monitor)("SB");
    o.init(e, i, t, n, r);

    o.reconnect = function () {
      var _this = this;

      if (o.isReconnectNow || o.isTimerExist) return;
      o.isReconnectNow = true;
      o.isTimerExist = true;
      var seconds = Math.pow(2, o.connectIndex) - 1;
      o.connectIndex += 1;
      setTimeout(function () {
        if (o.activeclosewebsocket) return;
        o.isTimerExist = false;
        o.startwebsocketreconnecttime = null;
        o.socket = new WebSocket(_this.websocketaddress);
        o.socket.binaryType = "arraybuffer";

        o.socket.onopen = function (e) {
          o.isReconnectNow = false;
          (0, _common.add_monitor)("SE");
          o.startwebsocketreconnecttime = new Date().getTime() / 1e3;
          o.onopen(e);
        };

        o.socket.onmessage = function (e) {
          o.onmessage(e);
        };

        o.socket.onerror = function (e) {
          (0, _common.add_monitor)("SERR");
          o.socket.close();
        };

        o.socket.onclose = function (e) {
          (0, _common.add_monitor)("SCLOSE");
          o.isReconnectNow = false;
          o.onclose(e);

          if (o.activeclosewebsocket) {
            return;
          }

          if (o.connectIndex < 10) {
            o.reconnect();
          } else {
            postMessage({
              status: Video_Dec_WebSocket_FAILED
            });
            console.log("NetWork is Bad, Don't to reconnect the serer!");
          }
        };
      }, seconds * 1000);
    };

    o.reconnect();
  };

  this.send = function (e) {
    var i;

    if (!peroid_start_time) {
      peroid_total_amount = 0;
      peroid_start_time = new Date().getTime() / 1e3;
      !isDataChannelOpen && video_set_websocket_speed(video_handle, 8e5, 0);
    } else {
      var t = new Date().getTime() / 1e3;
      i = t - peroid_start_time;

      if (i > 10) {
        var n = peroid_total_amount - this.socket.bufferedAmount;

        if (this.socket.bufferedAmount == 0) {
          if (last_peroid_speed) {
            last_peroid_speed = .8 * last_peroid_speed + .2 * 8e5;
          } else {
            last_peroid_speed = 8e5;
          }

          !isDataChannelOpen && video_set_websocket_speed(video_handle, last_peroid_speed, 0);
        } else {
          monitor_video_send_buffer = n;
          peroid_speed = n * 8 / (i * 1);

          if (!last_peroid_speed) {
            last_peroid_speed = 8e5;
          } else {
            last_peroid_speed = .8 * last_peroid_speed + .2 * peroid_speed;
          }

          !isDataChannelOpen && video_set_websocket_speed(video_handle, last_peroid_speed, 0);
        }

        peroid_total_amount = peroid_total_amount - n;
        peroid_start_time = t;
      }
    }

    peroid_total_amount += e.length;

    try {
      this.socket.send(e);
    } catch (e) {
      console.error(e);
    }
  };

  this.close = function () {
    try {
      this.removeFromSocketList(); // activeclosewebsocket make socket never reconnect on close/error event

      this.activeclosewebsocket = true;
      this.socket.close();
    } catch (e) {
      console.error("force close", e);
    }
  };

  this.removeFromSocketList = function () {
    try {
      var index = videoWebsocketList.indexOf(this);

      if (index !== -1) {
        videoWebsocketList.splice(index, 1);
      }
    } catch (e) {
      console.error("removeFromSocketList", e);
    }
  };
}

function Channel_Agent_Debug() {
  this.socket = null;
  this.onopen = null;
  this.onmessage = null;
  this.onerror = null;
  this.onclose = null;
  this.websocketaddress = null;
  this.startwebsocketreconnecttime = null;
  this.reconnect = null;
  this.activeclosewebsocket = false;
  this.times = 1;

  this.init = function (e, o, t, n, s) {
    this.websocketaddress = e;
    this.onopen = o;
    this.onmessage = t;
    this.onerror = n;
    this.onclose = s;
  };

  this.connect = function (e, o, t, n, s) {
    var c = this;
    c.init(e, o, t, n, s);
    c.socket = new WebSocket(c.websocketaddress);
    c.socket.binaryType = "arraybuffer";

    c.reconnect = function () {
      if (self && self.IS_DISABLE_SOCKET_RECONNECT === true) {
        return;
      }

      c.startwebsocketreconnecttime = null;
      c.socket = new WebSocket(this.websocketaddress);
      c.socket.binaryType = "arraybuffer";

      c.socket.onopen = function (e) {
        c.startwebsocketreconnecttime = new Date().getTime() / 1e3;
        c.onopen(e);
      };

      c.socket.onmessage = function (e) {
        c.onmessage(e);
      };

      c.socket.onerror = function (e) {
        JsSocket_Log("in function onerror");

        if (c.startwebsocketreconnecttime === null) {
          JsSocket_Log("In Reconnect Context, Reconnect is unnecessary");
        } else if (new Date().getTime() / 1e3 - c.startwebsocketreconnecttime > 30) {
          JsSocket_Log(">>>30s");
          setTimeout(function () {
            c.reconnect();
          }, 1e4);
        } else {
          // postMessage({status: Sharing_Dec_WebSocket_FAILED});
          JsSocket_Log("NetWork is Bad, Don't to reconnect the serer!");
        }
      };

      c.socket.onclose = function (e) {
        JsSocket_Log("in function onclose:" + c.startwebsocketreconnecttime);

        if (c.startwebsocketreconnecttime === null) {
          JsSocket_Log("In Reconnect Context, Reconnect is unnecessary");
        } else if (new Date().getTime() / 1e3 - c.startwebsocketreconnecttime > 30) {
          JsSocket_Log(">>>30s");
          c.times = 2 * c.times;
          setTimeout(function () {
            c.reconnect();
          }, c.times * 1000);
        } else {
          // postMessage({status: Sharing_Dec_WebSocket_FAILED});
          JsSocket_Log("NetWork is Bad, Don't to reconnect the serer!");
        }
      };
    };

    c.socket.onopen = function (e) {
      c.startwebsocketreconnecttime = new Date().getTime() / 1e3;
      c.onopen(e);
    };

    c.socket.onmessage = function (e) {
      c.onmessage(e);
    };

    c.socket.onerror = function (e) {
      JsSocket_Log("in function onerror");
      if (c.activeclosewebsocket) return;

      if (c.startwebsocketreconnecttime === null) {
        JsSocket_Log("Not in Reconnect Context, Reconnect is unnecessary"); // postMessage({status: Sharing_Dec_WebSocket_FAILED})
      } else if (new Date().getTime() / 1e3 - c.startwebsocketreconnecttime > 30) {
        JsSocket_Log(">>>30s");
        setTimeout(function () {
          c.reconnect();
        }, 1e4);
      } else {
        // postMessage({status: Sharing_Dec_WebSocket_FAILED});
        JsSocket_Log("NetWork is Bad, Don't to reconnect the serer!");
      }
    };

    this.socket.onclose = function (e) {
      JsSocket_Log("in function onclose:" + c.startwebsocketreconnecttime);
      if (c.activeclosewebsocket) return;

      if (c.startwebsocketreconnecttime === null) {
        JsSocket_Log("Not in Reconnect Context, Reconnect is unnecessary"); // postMessage({status: Sharing_Dec_WebSocket_FAILED})
      } else if (new Date().getTime() / 1e3 - c.startwebsocketreconnecttime > 30) {
        JsSocket_Log(">>>30s");
        c.times = 2 * c.times;
        setTimeout(function () {
          c.reconnect();
        }, c.times * 1000);
      } else {
        // postMessage({status: Sharing_Dec_WebSocket_FAILED});
        JsSocket_Log("NetWork is Bad, Don't to reconnect the serer!");
      }
    };
  };

  this.send = function (e) {
    if (this.socket.readyState === 1) this.socket.send(e);
  };

  this.close = function () {
    this.activeclosewebsocket = true;
    this.socket.close();
  };
}

function Open_Video_WebSocket_Connect_Debug(e, o, t, n, s) {
  JsSocket_Log("Open_Video_WebSocket_Connect");
  var c = new Channel_Agent_Debug();
  c.connect(e, o, t, n, s);
  return c;
}

function video_websocket_on_open_Debug() {
  JsMediaSDK_Log("video_websocket_on_open"); // postMessage({status: Video_Dec_WebSocket_OK})
}

function Open_Video_WebSocket_Connect(e, o, t, n, s) {
  JsSocket_Log("Open_Video_WebSocket_Connect");
  var c = new Channel_Agent();
  c.connect(e, o, t, n, s);
  return c;
}

function video_websocket_on_open(ev, channelAgent) {
  if (channelAgent && channelAgent.socket.readyState === 1) {
    videoWebsocketList.push(channelAgent);
  }

  postMessage({
    status: Video_Dec_WebSocket_OK
  });
}

function video_websocket_on_message(e) {
  if (video_handle) {
    var o = new Uint8Array(e.data);
    video_analysis(video_handle, o, o.length);
  }
}

var pduBuffer = new Queue();
var threadState = THREAD_STATE_IDLE;
var isCreateWorkers = false;
var multiThreadFlag = false;
var multiThreadNum = 1;

function MaybeCreateDecodeMultiThreadAndAnalysis(predata, handle, analysis) {
  if (!handle || !analysis) {
    return;
  }

  if (multiThreadFlag && (predata[0] == 2 || predata[0] == 7)) {
    if (!isCreateWorkers) {
      threadState = THREAD_STATE_CREATING;
      PThread.allocateUnusedWorkers(multiThreadNum, function () {
        threadState = THREAD_STATE_CREATED;
      });
      isCreateWorkers = true;
    }
  }

  if (threadState === THREAD_STATE_IDLE) {
    analysis(handle, predata, predata.length);
  } else if (threadState === THREAD_STATE_CREATING) {
    pduBuffer.enqueue(predata);
  } else if (threadState === THREAD_STATE_CREATED) {
    var data = pduBuffer.dequeue();

    while (data) {
      analysis(handle, data, data.length);
      data = pduBuffer.dequeue();
    }

    analysis(handle, predata, predata.length);
  }
}

function MaybeCreateEncodeMultiThread() {
  if (multiThreadFlag && !isCreateWorkers) {
    threadState = 1;
    PThread.allocateUnusedWorkers(multiThreadNum, function () {
      threadState = 2;
    });
    isCreateWorkers = true;
  }
}

function IsSupportMultiThread() {
  if (multiThreadFlag) {
    return 1;
  } else {
    return 0;
  }
}

function GetCscThreadNum() {
  return 1;
}

function GetEncThreadNum() {
  return 3;
}

function onMessageFromDataChannel(data) {
  var i = new Uint8Array(data);

  if (i.length >= 1 && i[0] == 0) {// does not need to do anything
  } else {
    if (!isDataChannelOpen && i.length >= 5 && i[0] == 100) {
      for (var j = 4; j < i.length; j++) {
        i[j] = 0;
      }
    }

    if (!isStartCaptureVideo && i[0] == 101) {
      return;
    }

    if (video_handle) {
      MaybeCreateDecodeMultiThreadAndAnalysis(i, video_handle, video_analysis); // video_analysis(video_handle, i, i.length)
    } else {
      console.log("video handle is not ready!");
    }
  }
}

function video_websocket1_on_message(e) {
  if (video_handle) {
    var o = new Uint8Array(e.data);

    if (o.length >= 1 && o[0] == 0) {
      video_websocket.send(o);
    } else if (o.length >= 1) {
      if (o[0] == 16) {
        pdu = o;
      }

      MaybeCreateDecodeMultiThreadAndAnalysis(o, video_handle, video_analysis); // video_analysis(video_handle, o, o.length)
    }
  }
}

function video_websocket2_on_message(e) {
  if (video_handle) {
    var o = new Uint8Array(e.data);

    if (o.length >= 1 && o[0] == 0) {
      video_websocket2.send(o);
    } else {
      MaybeCreateDecodeMultiThreadAndAnalysis(o, video_handle, video_analysis); // video_analysis(video_handle, o, o.length)
    }
  }
}

function removeSocketFromSocketList(socket) {
  videoWebsocketList.splice(videoWebsocketList.indexOf(socket), 1);
}

function video_websocket_on_close(e, channelAgent) {
  JsMediaSDK_Log("video_websocket_on_close");
  removeSocketFromSocketList(channelAgent);
}

function video_websocket_on_error(e) {}

function js_info_from_wcl(e, o, t) {
  var n = new Uint8Array(t);
  var s = Module.HEAP8.subarray(o + 0, o + t);
  n.set(s, 0, t);

  if (isDataChannelOpen) {
    var firstByteGoDataChannel = [consts.MEDIA_VIDEO_DATA, consts.MEDIA_VIDEO_RTCP];

    if (isSendVideo && firstByteGoDataChannel.indexOf(n[0]) !== -1) {
      postMessage({
        status: VIDEO_ENCODED_DATA,
        data: n
      }, [n.buffer]);
      return;
    } else if (n[0] == consts.MEDIA_VIDEO_REPORT_DROP_RATIO) {
      postMessage({
        status: VIDEO_DROP_RATIO_FROM_WCL,
        data: n
      }, [n.buffer]);
      return;
    }
  }

  if (videoWebsocketList.length > 0) {
    var ws = videoWebsocketList[video_websocket_index++ % videoWebsocketList.length];

    if (ws && ws.socket.readyState === 1) {
      ws.send(n);
    }
  }
}

function frame_callback(e, o, t, n, s, c, i, r, a, _, rotation, yuv_limited) {
  var d = new Uint8Array(o);
  var k = Module.HEAP8.subarray(e + 0, e + o);
  d.set(k, 0, o);
  var l = Module.HEAP8.subarray(t, t + 8);
  var u = new Uint8Array(8);
  u.set(l, 0, 8);
  var b = 0;

  for (var _e = 0; _e < 8; _e++) {
    b += u[_e] * Math.pow(256, _e);
  }

  var v = n;
  var w = s;
  var f = c;
  monitor_video_width = w;
  monitor_video_height = f;
  monitor_video();

  if (!isSupportOffscreenCanvas) {
    postMessage({
      status: 0,
      data: d,
      video_timestamp: b,
      video_ssrc: v,
      video_width: w,
      video_height: f,
      rendering_x: i,
      rendering_y: r,
      rendering_w: a,
      rendering_h: _,
      rotation: rotation,
      yuv_limited: yuv_limited
    }, [d.buffer]);
  } else {
    if (!isVideoPlayWork) {
      return;
    }

    var message = {
      yuvdata: d,
      ntptime: b,
      ssrc: v,
      width: w,
      height: f,
      r_x: i,
      r_y: r,
      r_w: a,
      r_h: _,
      rotation: rotation,
      yuv_limited: yuv_limited
    };

    if (VideoRenderObj) {
      VideoRenderObj.Get_Video_Data_From_Queue(message);
    }
  }
}

function monitor_drop_ratio(c, a, m, n) {
  postMessage({
    status: VIDEO_DATA_DROP_RATIO,
    current_lostrate: c,
    average_lostrate: a,
    max_lostrate: m,
    min_lostrate: n
  });
}

function monitor_video() {
  if (monitor_video_first) {
    monitor_video_first = false;
    monitor_video_count++;
    monitor_video_last_time = new Date().getTime();
  } else {
    monitor_video_count++;
    var nowtime = new Date().getTime();
    monitor_video_elapsed_compute_time += nowtime - monitor_video_last_time;
    monitor_video_elapsed_write_time += nowtime - monitor_video_last_time;
    monitor_video_last_time = nowtime;

    if (monitor_video_elapsed_compute_time > 1 * 1000) {
      if (video_handle) {
        video_get_sending_status(video_handle);
      }

      monitor_video_fps = monitor_video_count / (monitor_video_elapsed_compute_time / 1000);
      monitor_video_count = 0;
      monitor_video_encoded_fps = monitor_video_encoded_delta_frames / (monitor_video_elapsed_compute_time / 1000);
      monitor_video_encoded_delta_frames = 0;

      if (monitor_video_max_fps < monitor_video_fps) {
        monitor_video_max_fps = monitor_video_fps;
      }

      if (monitor_video_encoded_max_fps < monitor_video_encoded_fps) {
        monitor_video_encoded_max_fps = monitor_video_encoded_fps;
      }

      if (monitor_video_min_fps > monitor_video_fps || monitor_video_min_fps == 0) {
        monitor_video_min_fps = monitor_video_fps;
      }

      if (monitor_video_encoded_min_fps > monitor_video_encoded_fps || monitor_video_encoded_min_fps == 0) {
        monitor_video_encoded_min_fps = monitor_video_encoded_fps;
      }

      if (monitor_video_avg_fps == 0) {
        monitor_video_avg_fps = monitor_video_fps;
      } else {
        monitor_video_avg_fps = (monitor_video_avg_fps + monitor_video_fps) / 2;
      }

      if (monitor_video_encoded_avg_fps == 0) {
        monitor_video_encoded_avg_fps = monitor_video_encoded_fps;
      } else {
        monitor_video_encoded_avg_fps = (monitor_video_encoded_avg_fps + monitor_video_encoded_fps) / 2;
      }

      if (monitor_video_elapsed_write_time > 9 * 1000) {
        if (video_handle) {
          video_get_encode_codec_info(video_handle);
          video_get_decode_codec_info(video_handle);
        }

        postMessage({
          status: MONITOR_MESSAGE,
          max_fps: Math.ceil(monitor_video_max_fps),
          min_fps: Math.ceil(monitor_video_min_fps),
          avg_fps: Math.ceil(monitor_video_avg_fps),
          video_width: Math.ceil(monitor_video_width),
          video_height: Math.ceil(monitor_video_height),
          video_send_buffer: Math.ceil(monitor_video_send_buffer),
          video_encoded_width: Math.ceil(monitor_video_encoded_width),
          video_encoded_heigth: Math.ceil(monitor_video_encoded_height),
          video_encoded_avg_fps: Math.ceil(monitor_video_encoded_avg_fps),
          video_encoded_max_fps: Math.ceil(monitor_video_encoded_max_fps),
          video_encoded_min_fps: Math.ceil(monitor_video_encoded_min_fps),
          video_total_encoded_frames: Math.ceil(monitor_video_encoded_total_frames),
          monitor_video_max_size: Math.ceil(monitor_video_max_size),
          monitor_video_max_sub_for_me: monitor_video_max_sub_for_me,
          monitor_video_max_decoding_time: monitor_video_max_decoding_time,
          monitor_video_min_decoding_time: monitor_video_min_decoding_time,
          monitor_video_avg_decoding_time: monitor_video_avg_decoding_time,
          monitor_video_max_encode_time: monitor_video_max_encode_time,
          monitor_video_min_encode_time: monitor_video_min_encode_time,
          monitor_video_avg_encode_time: monitor_video_avg_encode_time,
          monitor_video_sdev_encode_time: monitor_video_sdev_encode_time,
          monitor_video_sdev_decoding_time: monitor_video_sdev_decoding_time
        });
        monitor_video_elapsed_write_time = 0;
        monitor_video_max_fps = 0;
        monitor_video_min_fps = 0;
        monitor_video_avg_fps = 0;
        monitor_video_encoded_avg_fps = 0;
        monitor_video_encoded_min_fps = 0;
        monitor_video_encoded_max_fps = 0;
      }

      monitor_video_send_buffer = 0;
      monitor_video_elapsed_compute_time = 0;
    }
  }
}

function decode_callback(ssrc, max_size) {
  monitor_video_max_size = max_size;
  postMessage({
    status: DECODE_MESSAGE,
    ssrc: ssrc,
    size: max_size
  });
}

function send_data(e, o) {
  var t = new Uint8Array(o);
  var n = Module.HEAP8.subarray(e + 0, e + o);
  t.set(n, 0, o);

  if (videoWebsocketList.length > 0) {
    var ws = videoWebsocketList[video_websocket_index++ % videoWebsocketList.length];
    if (ws && ws.socket.readyState === 1) videoWebsocketList[video_websocket_index++ % videoWebsocketList.length].send(n);
    video_websocket_index++;
  }
}

function APP_Troubleshoting_Info(ptr, len) {
  var data = new Uint8Array(len);
  var n = Module.HEAP8.subarray(ptr + 0, ptr + len);
  data.set(n, 0, len);
  postMessage({
    status: APP_TROUBLESHOOTING_INFO,
    data: Utf8ArrayToStr(data)
  });
}

function Monitor_Callback(width, height, total_frames, max_sub_for_me) {
  // var monitor_video_encoded_width = 0;
  // var monitor_video_encoded_height = 0;
  // var monitor_video_encoded_total_frames = 0;
  // var monitor_video_encoded_delta_frames = 0;
  monitor_video_encoded_width = width;
  monitor_video_encoded_height = height;
  monitor_video_max_sub_for_me = max_sub_for_me;

  if (monitor_video_encoded_total_frames == 0) {
    monitor_video_encoded_total_frames = total_frames;
    monitor_video_encoded_delta_frames = 0;
  } else {
    monitor_video_encoded_delta_frames += total_frames - monitor_video_encoded_total_frames;
    monitor_video_encoded_total_frames = total_frames;
  }
}

function Monitor_CallbackE(max_encoding_time, min_encoding_time, avg_encoding_time, sdev_encoding_time) {
  monitor_video_max_encode_time = max_encoding_time;
  monitor_video_min_encode_time = min_encoding_time;
  monitor_video_avg_encode_time = avg_encoding_time;
  monitor_video_sdev_encode_time = sdev_encoding_time;
}

function Monitor_CallbackD(max, min, avg, sdev) {
  monitor_video_max_decoding_time = max;
  monitor_video_min_decoding_time = min;
  monitor_video_avg_decoding_time = avg;
  monitor_video_sdev_decoding_time = sdev;
}

function LOG_OUT(a, b) {
  var t = new Uint8Array(b);
  var n = Module.HEAP8.subarray(a + 0, a + b);
  t.set(n, 0, b);

  if (video_websocket_Debug) {
    video_websocket_Debug.send(t);
  } // console.log(Utf8ArrayToStr(t));

}

function Utf8ArrayToStr(array) {
  var out, i, len, c;
  var char2, char3;
  out = "";
  len = array.length;
  i = 0;

  while (i < len) {
    c = array[i++];

    switch (c >> 4) {
      case 0:
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
        // 0xxxxxxx
        out += String.fromCharCode(c);
        break;

      case 12:
      case 13:
        // 110x xxxx   10xx xxxx
        char2 = array[i++];
        out += String.fromCharCode((c & 0x1F) << 6 | char2 & 0x3F);
        break;

      case 14:
        // 1110 xxxx  10xx xxxx  10xx xxxx
        char2 = array[i++];
        char3 = array[i++];
        out += String.fromCharCode((c & 0x0F) << 12 | (char2 & 0x3F) << 6 | (char3 & 0x3F) << 0);
        break;
    }
  }

  return out;
}
/**
 * add debug log websocket , it is with param "type=d"
 * @param mediaWebsocketUrl media websocket url, eg: type=v
 */


function addDebugLogWebSocket(mediaWebsocketUrl) {
  try {
    var r = new Date().getTime();
    var url = new URL(mediaWebsocketUrl);
    url.searchParams.set("filename", "_" + r + "_video_log");
    url.searchParams.set("type", "d");

    if (isSendVideo) {
      //mode=2
      video_websocket_Debug = Open_Video_WebSocket_Connect_Debug(url.toString(), video_websocket_on_open_Debug, video_websocket_on_message, video_websocket_on_error, video_websocket_on_close);
    } else {
      //mode=5
      video_websocket_Debug = Open_Video_WebSocket_Connect_Debug(url.toString(), video_websocket_on_open_Debug, video_websocket_on_message, video_websocket_on_error, video_websocket_on_close);
    }
  } catch (e) {
    console.error(e);
  }
}

function SAVE_IV(ptr, len) {
  if (!videoGetIvInteval) {
    videoGetIvInteval = setInterval(function () {
      if (video_handle) {
        get_video_meat_weight(video_handle);
      }
    }, 60 * 1000);
  }

  var localdata = new Uint8Array(len);
  var moduledata = Module.HEAP8.subarray(ptr + 0, ptr + len);
  localdata.set(moduledata, 0, len);
  lastIv = localdata;
  postMessage({
    status: consts.AES_GCM_IV_CALLBACK_FROM_WASM,
    data: localdata
  });
}

function getWasmMemory(data) {
  // data must be uint8array type.
  if (!data) {
    return 0;
  }

  var ptr = Module._malloc(data.length);

  var subarray = Module.HEAPU8.subarray(ptr, ptr + data.length);
  subarray.set(data, 0, data.length);
  return ptr;
}

function freeWasmMemory(ptr) {
  if (ptr) {
    Module._free(ptr);
  }
}

(function (e) {
  console.log("ready to dec video!");
  e.addEventListener("message", function (e) {
    var o = e.data;
    var message = e.data;

    switch (o.command) {
      case "startMedia":
        try {
          // message.iv is buffer
          // should be transformed to Uint8Array
          // if message.iv === null, then iv should be null, else iv should be TypedArray(Uint8Array)
          var iv = message.iv;

          if (iv) {
            iv = new Uint8Array(iv);
          }

          var ptr = 0;
          var ivLength;

          if (!iv) {
            ivLength = 0;
          } else {
            lastIv = iv;
            ivLength = iv.length;
          }

          ptr = getWasmMemory(iv);
          isSendVideo = o.sendvideo;

          if (video_handle === null) {
            confIdBak = o.confId;
            meetingnumb = o.meetingnumb + "";
            meetingid = o.meetingid;
            multiThreadNum = o.multiThreadNum;

            if (multiThreadNum > 1) {
              multiThreadFlag = true;
            } //debugger


            videoencid = o.confId;
            video_handle = video_init(o.confId, o.mtu_size, meetingnumb, meetingid, ptr, ivLength);
            freeWasmMemory(ptr);
            start_handle_init = true; // video_start_encode(video_handle, o.width, o.height, o.fps);

            if (video_handle) {
              postMessage({
                status: Video_Dec_Handle_OK
              });
              logon = o.logon;
              video_websocket = Open_Video_WebSocket_Connect(o.websocket_ip_address, video_websocket_on_open, video_websocket1_on_message, video_websocket_on_error, video_websocket_on_close);

              if (o.isChromeOrEdge) {
                isChromeOrEdge = o.isChromeOrEdge;
              } // video_websocket2 = Open_Video_WebSocket_Connect(o.websocket_ip_address, video_websocket_on_open, video_websocket2_on_message, video_websocket_on_error, video_websocket_on_close);


              ip_address = o.websocket_ip_address;

              if (logon) {
                addDebugLogWebSocket(ip_address);
              }
            } else {
              postMessage({
                status: Video_Dec_Handle_FAILED
              });
            }
          }
        } catch (e) {
          console.log(e);
        }

        break;

      case "EncodedVideoFrame":
        audio_websocket.send(o.data);
        break;

      case "failover":
        if (video_websocket && video_websocket.socket.readyState === 1) {
          video_websocket.close();
        }

        if (video_websocket2 && video_websocket2.socket.readyState === 1) {
          video_websocket2.close();
        }

        video_websocket = Open_Video_WebSocket_Connect(o.websocket_ip_address, video_websocket_on_open, video_websocket_on_message, video_websocket_on_error, video_websocket_on_close);
        video_websocket2 = Open_Video_WebSocket_Connect(o.websocket_ip_address, video_websocket_on_open, video_websocket_on_message, video_websocket_on_error, video_websocket_on_close);
        break;

      case "closeMedia":
        if (video_websocket && video_websocket.socket.readyState === 1) {
          video_websocket.close();
        }

        if (video_websocket2 && video_websocket2.socket.readyState === 1) {
          video_websocket2.close();
        }

        if (video_handle) {
          video_stop_encode(video_handle);
          video_uninit(video_handle);
        }

        close();
        break;

      case "encodeVideoFrame":
        {
          video_buffer.enqueue(o.data);
        }
        break;

      case "startVideoEncode":
        {
          if (video_handle) {
            if (!start_handle_init) {
              get_video_meat_weight(video_handle);
            }

            if (video_handle && start_handle_init) {
              start_handle_init = false;
              video_uninit(video_handle);
              var _iv = lastIv;

              var _ivLength;

              if (!_iv) {
                _ivLength = 0;
              } else {
                _ivLength = _iv.length;
              }

              var _ptr = 0;
              _ptr = getWasmMemory(_iv);
              video_handle = video_init(o.ssid, o.mtu_size, meetingnumb, meetingid);
              freeWasmMemory(_ptr);

              if (!video_handle) {
                postMessage({
                  status: Video_Dec_Handle_FAILED
                });
                return;
              } //GCM


              if (videoenczoomid) {
                var _ptr2 = Module._malloc(videoenczoomid.length);

                var subarray = Module.HEAPU8.subarray(_ptr2, _ptr2 + videoenczoomid.length);
                subarray.set(videoenczoomid, 0, videoenczoomid.length);
                video_add_cooker_info(video_handle, videoencid, _ptr2, videoenczoomid.length);

                Module._free(_ptr2);
              } //end GCM
              // get_video_meat_weight(video_handle)


              if (pdu) {
                video_analysis(video_handle, pdu, pdu.length);
              }

              if (video_encrypt) {
                video_set_data_encryption(video_handle, 1);
              } else {
                video_set_data_encryption(video_handle, 0);
              }

              monitor_video_width = o.width;
              monitor_video_height = o.height;
              video_start_encode(video_handle, o.width, o.height, o.fps);
              isDataChannelOpen ? video_set_websocket_speed(video_handle, 1600000, 1) : video_set_websocket_speed(video_handle, 2000000, 0);
            }

            isStartCaptureVideo = true;

            if (video_capture_interval) {
              clearInterval(video_capture_interval);
            }

            MaybeCreateEncodeMultiThread();
            postMessage({
              status: Video_Capture_Tick
            });
            video_capture_interval = setInterval(function () {
              while (video_buffer.getLength() > 2) {
                var _data = video_buffer.dequeue();

                if (!isChromeOrEdge) {
                  postMessage({
                    data: _data
                  }, [_data.buffer]);
                }
              }

              var data = video_buffer.dequeue();

              if (data) {
                monitor_video();

                if (!video_memory_ptr || video_memory_len != data.length) {
                  if (video_memory_ptr) {
                    Module._free(video_memory_ptr);
                  }

                  video_memory_len = data.length;
                  video_memory_ptr = Module._malloc(video_memory_len);
                }

                video_momory_subarray = Module.HEAPU8.subarray(video_memory_ptr, video_memory_ptr + video_memory_len);
                video_momory_subarray.set(data, 0, video_memory_len);
                video_encode(video_handle, video_memory_ptr, video_memory_len);
              }

              if (canvas.size == 0) {
                if (!isChromeOrEdge && data) {
                  postMessage({
                    status: Video_Capture_Tick,
                    data: data
                  }, [data.buffer]);
                } else {
                  postMessage({
                    status: Video_Capture_Tick
                  });
                }
              }
            }, 1000 / o.fps);
          }
        }
        break;

      case "updateVideoPara":
        {
          if (video_handle) {
            canvasWidth = 640;
            canvasHeight = 360;
            canvasLeft = (canvasWidth - 640) / 2;
            canvasTop = (canvasHeight - 360) / 2;
            video_update_format(video_handle, o.width, o.height, o.fps);
          }
        }
        break;

      case "stopVideoEncode":
        {
          clearInterval(video_capture_interval);
          video_buffer = new Queue();
          isStartCaptureVideo = false;
        }
        break;

      case "ENCRYPT":
        {
          if (video_handle) {
            video_encrypt = o.encrypt;

            if (video_encrypt) {
              video_set_data_encryption(video_handle, 1); // 1 represent encryt data
            } else {
              video_set_data_encryption(video_handle, 0);
            }
          }
        }
        break;

      case "SOCKET_RECONNECT":
        {
          self.IS_DISABLE_SOCKET_RECONNECT = message.disable === true ? true : false;
        }
        break;

      case "PUSH_MESSAGE_FROM_MAIN_TO_WORKER":
        {
          // console.log("PUSH_MESSAGE_FROM_MAIN_TO_WORKER isSendVideo", !!isSendVideo);
          onMessageFromDataChannel(o.data);
        }
        break;

      case "UPDATE_DATACHANNEL_STATUS":
        {
          isDataChannelOpen = o.data.isDataChannelOpen;

          if (video_handle && isSendVideo) {
            isDataChannelOpen ? video_set_websocket_speed(video_handle, 1600000, 1) : video_set_websocket_speed(video_handle, 2000000, 0);
          }
        }
        break;
      // case "UPDATE_BANDWIDTH_SPEED": {
      //     console.log("video_handle, o.data.speed", o.data.speed);
      //     video_set_websocket_speed(video_handle, o.data.speed);
      // }
      // break;

      case "OfflineCanvas":
        // canvas = o.data.getContext('2d');
        // debugger
        if (o.canvasname) {
          var ctx = o.canvas.getContext('2d');

          if (ctx) {
            canvas.set(o.canvasname, o.canvas.getContext('2d'));
          }
        }

        break;

      case "imagebitmap":
        postMessage({
          status: Video_Capture_Tick
        });

        if (canvas && o.data && o.data.width >= 640 && o.data.height >= 360) {
          var realcanvas = canvas.get(o.canvasname);

          if (realcanvas) {
            realcanvas.canvas.width = 640;
            realcanvas.canvas.height = 360;
            realcanvas.drawImage(o.data, 0, 0, 640, 360);
            o.data.close();
            var img = realcanvas.getImageData(0, 0, 640, 360);
            var buffer = new Uint8Array(img.data);
            video_buffer.enqueue(buffer);
          }
        }

        break;

      case "VideoPlayStatus":
        {
          isVideoPlayWork = o.isVideoPlayWork;
        }
        break;

      case "renderOfflineCanvas":
        {
          if (o.canvas) {
            suppensionAndMainCanvas.set(o.rendercanvasID, {
              canvas: o.canvas
            });
          } else {
            var canvasObj = suppensionAndMainCanvas.get(o.rendercanvasID);

            if (canvasObj) {
              o.canvas = canvasObj.canvas;
            }
          }

          isVideoPlayWork = true;
          isSupportOffscreenCanvas = true;
          videoWaterMarkName = o.videoWaterMarkName;
          isCreateVideoWaterMark = o.isCreateVideoWaterMark;

          if (!waterMarkCanvasInWorker) {
            waterMarkCanvasInWorker = new OffscreenCanvas(0, 0);
          }

          ;

          if (!VideoRenderObj) {
            VideoRenderObj = new _JsMediaSDK_VideoRender.default((0, _assign.default)({}, {
              Notify_APPUI: null,
              isSupportOffscreenCanvas: true,
              jsMediaEngine: null
            }));
          }

          if (videoRenderArray.length > 0) {
            for (var i = 0; i < videoRenderArray.length; i++) {
              if (videoRenderArray[i].ssrc !== o.ssrc) {
                videoRenderArray.push(o);
              }
            }
          } else {
            videoRenderArray.push(o);
          }

          if (videoRenderInterval) {
            clearInterval(videoRenderInterval);
          }

          if (videoRenderArray.length > 0) {
            VideoRenderObj.Set_Render_Array(videoRenderArray);
          }

          VideoRenderObj.Set_WaterMark_Info(waterMarkCanvasInWorker, isCreateVideoWaterMark, videoWaterMarkName);
          var interval = VideoRenderObj.JsMediaSDK_VideoRender.bind(VideoRenderObj);
          videoRenderInterval = setInterval(interval, 10);
        }
        break;

      case "CHANGE_CURRENT_ACTIVE_SSRC":
        {
          // currentactive = o.ssrc;
          // videoQueue.ClearQueue();
          if (!VideoRenderObj) {
            VideoRenderObj = new _JsMediaSDK_VideoRender.default((0, _assign.default)({}, {
              Notify_APPUI: null,
              isSupportOffscreenCanvas: true,
              jsMediaEngine: null
            }));
          }

          VideoRenderObj.Change_Current_SSRC(o.ssrc);
        }
        break;

      case "stopVideoRender":
        {
          isCreateVideoWaterMark = false;
          videoWaterMarkName = "";

          if (videoRenderArray.length > 0) {
            for (var _i = 0; _i < videoRenderArray.length; _i++) {
              if (videoRenderArray[_i].ssrc == o.ssrc) {
                if (videoRenderArray[_i].display) {
                  videoRenderArray[_i].display.cleanup();
                }

                videoRenderArray.splice(_i, 1);

                if (videoRenderArray.length == 0) {
                  if (videoRenderInterval) {
                    clearInterval(videoRenderInterval);
                    videoRenderInterval = null;
                    VideoRenderObj.ClearQueue();
                    VideoRenderObj.Set_WaterMark_Info(waterMarkCanvasInWorker, isCreateVideoWaterMark, videoWaterMarkName);
                    isVideoPlayWork = false;
                  }
                }
              }
            }
          }
        }
        break;

      case "removeVideoPlay":
        {
          if (videoRenderInterval) {
            clearInterval(videoRenderInterval);
            videoRenderInterval = null;
            isVideoPlayWork = false;
          }
        }
        break;

      case "decodeVideoPortWithAudio":
        {
          var port = o.port;

          port.onmessage = function (e) {
            if (isVideoPlayWork) {
              VideoRenderObj.Set_SSRC_Latest_Time_Stamp(e.data.data);
            }
          };
        }
        break;

      case _CommonEnums.MAIN_WORKER_COMMAND.SET_USER_NODE_LIST:
        {
          var userNodeList = message.data.userNodeList;

          if (userNodeList) {
            userNodeList.forEach(function (user) {
              var userid = parseInt(user.userid);

              if (user.bremove) {
                if (video_handle) {
                  video_remove_cooker_info(video_handle, userid);
                }

                return;
              }

              var sn = user.sn;

              if (sn.length != 16 && sn.length != 32) {
                return;
              }

              var ptr = getWasmMemory(sn);

              if (video_handle) {
                var isAddCooker = false;

                if (!isSendVideo || videoencid == userid) {
                  isAddCooker = true;
                }

                if (isAddCooker) {
                  video_add_cooker_info(video_handle, userid, ptr, sn.length);
                }
              }

              if (isSendVideo && videoencid == userid) {
                //In this case, we must is in encode mode.
                //so we just save the userid of myself.
                videoenczoomid = sn;
              }

              freeWasmMemory(ptr);
            });
          }

          break;
        }
    }
  });
})(self);

/***/ }),

/***/ "./src/worker/videoWrapper.simd.js":
/*!*****************************************!*\
  !*** ./src/worker/videoWrapper.simd.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireWildcard = __webpack_require__(/*! @babel/runtime/helpers/interopRequireWildcard */ "./node_modules/@babel/runtime/helpers/interopRequireWildcard.js");

var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js");

var _keys = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/core-js/object/keys */ "./node_modules/@babel/runtime/core-js/object/keys.js"));

var video = _interopRequireWildcard(__webpack_require__(/*! ./video */ "./src/worker/video.js"));

self.databaseDataType = "videosimd";
(0, _keys.default)(video).forEach(function (vk) {
  return self[vk] = video[vk];
});

/***/ })

/******/ });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
 self.__wasmCodeDataEndFlag = 1;
var Module=typeof Module!=="undefined"?Module:{};
Module["onRuntimeInitialized"] = function(){

self.onWasmModuleReady();

}
var Module=typeof Module!=="undefined"?Module:{};var moduleOverrides={};var key;for(key in Module){if(Module.hasOwnProperty(key)){moduleOverrides[key]=Module[key]}}var arguments_=[];var thisProgram="./this.program";var quit_=function(status,toThrow){throw toThrow};var ENVIRONMENT_IS_WEB=false;var ENVIRONMENT_IS_WORKER=false;var ENVIRONMENT_IS_NODE=false;var ENVIRONMENT_IS_SHELL=false;ENVIRONMENT_IS_WEB=typeof window==="object";ENVIRONMENT_IS_WORKER=typeof importScripts==="function";ENVIRONMENT_IS_NODE=typeof process==="object"&&typeof process.versions==="object"&&typeof process.versions.node==="string";ENVIRONMENT_IS_SHELL=!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_NODE&&!ENVIRONMENT_IS_WORKER;var scriptDirectory="";function locateFile(path){if(Module["locateFile"]){return Module["locateFile"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;var nodeFS;var nodePath;if(ENVIRONMENT_IS_NODE){if(ENVIRONMENT_IS_WORKER){scriptDirectory=require("path").dirname(scriptDirectory)+"/"}else{scriptDirectory=__dirname+"/"}read_=function shell_read(filename,binary){if(!nodeFS)nodeFS=require("fs");if(!nodePath)nodePath=require("path");filename=nodePath["normalize"](filename);return nodeFS["readFileSync"](filename,binary?null:"utf8")};readBinary=function readBinary(filename){var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}assert(ret.buffer);return ret};if(process["argv"].length>1){thisProgram=process["argv"][1].replace(/\\/g,"/")}arguments_=process["argv"].slice(2);if(typeof module!=="undefined"){module["exports"]=Module}process["on"]("uncaughtException",function(ex){if(!(ex instanceof ExitStatus)){throw ex}});process["on"]("unhandledRejection",abort);quit_=function(status){process["exit"](status)};Module["inspect"]=function(){return"[Emscripten Module object]"}}else if(ENVIRONMENT_IS_SHELL){if(typeof read!="undefined"){read_=function shell_read(f){return read(f)}}readBinary=function readBinary(f){var data;if(typeof readbuffer==="function"){return new Uint8Array(readbuffer(f))}data=read(f,"binary");assert(typeof data==="object");return data};if(typeof scriptArgs!="undefined"){arguments_=scriptArgs}else if(typeof arguments!="undefined"){arguments_=arguments}if(typeof quit==="function"){quit_=function(status){quit(status)}}if(typeof print!=="undefined"){if(typeof console==="undefined")console={};console.log=print;console.warn=console.error=typeof printErr!=="undefined"?printErr:print}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(document.currentScript){scriptDirectory=document.currentScript.src}if(scriptDirectory.indexOf("blob:")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.lastIndexOf("/")+1)}else{scriptDirectory=""}{read_=function shell_read(url){var xhr=new XMLHttpRequest;xhr.open("GET",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=function readBinary(url){var xhr=new XMLHttpRequest;xhr.open("GET",url,false);xhr.responseType="arraybuffer";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=function readAsync(url,onload,onerror){var xhr=new XMLHttpRequest;xhr.open("GET",url,true);xhr.responseType="arraybuffer";xhr.onload=function xhr_onload(){if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}setWindowTitle=function(title){document.title=title}}else{}var out=Module["print"]||console.log.bind(console);var err=Module["printErr"]||console.warn.bind(console);for(key in moduleOverrides){if(moduleOverrides.hasOwnProperty(key)){Module[key]=moduleOverrides[key]}}moduleOverrides=null;if(Module["arguments"])arguments_=Module["arguments"];if(Module["thisProgram"])thisProgram=Module["thisProgram"];if(Module["quit"])quit_=Module["quit"];var STACK_ALIGN=16;function dynamicAlloc(size){var ret=HEAP32[DYNAMICTOP_PTR>>2];var end=ret+size+15&-16;HEAP32[DYNAMICTOP_PTR>>2]=end;return ret}function getNativeTypeSize(type){switch(type){case"i1":case"i8":return 1;case"i16":return 2;case"i32":return 4;case"i64":return 8;case"float":return 4;case"double":return 8;default:{if(type[type.length-1]==="*"){return 4}else if(type[0]==="i"){var bits=Number(type.substr(1));assert(bits%8===0,"getNativeTypeSize invalid bits "+bits+", type "+type);return bits/8}else{return 0}}}}function warnOnce(text){if(!warnOnce.shown)warnOnce.shown={};if(!warnOnce.shown[text]){warnOnce.shown[text]=1;err(text)}}function convertJsFunctionToWasm(func,sig){if(typeof WebAssembly.Function==="function"){var typeNames={"i":"i32","j":"i64","f":"f32","d":"f64"};var type={parameters:[],results:sig[0]=="v"?[]:[typeNames[sig[0]]]};for(var i=1;i<sig.length;++i){type.parameters.push(typeNames[sig[i]])}return new WebAssembly.Function(type,func)}var typeSection=[1,0,1,96];var sigRet=sig.slice(0,1);var sigParam=sig.slice(1);var typeCodes={"i":127,"j":126,"f":125,"d":124};typeSection.push(sigParam.length);for(var i=0;i<sigParam.length;++i){typeSection.push(typeCodes[sigParam[i]])}if(sigRet=="v"){typeSection.push(0)}else{typeSection=typeSection.concat([1,typeCodes[sigRet]])}typeSection[1]=typeSection.length-2;var bytes=new Uint8Array([0,97,115,109,1,0,0,0].concat(typeSection,[2,7,1,1,101,1,102,0,0,7,5,1,1,102,0,0]));var module=new WebAssembly.Module(bytes);var instance=new WebAssembly.Instance(module,{"e":{"f":func}});var wrappedFunc=instance.exports["f"];return wrappedFunc}var freeTableIndexes=[];var functionsInTableMap;function addFunctionWasm(func,sig){var table=wasmTable;if(!functionsInTableMap){functionsInTableMap=new WeakMap;for(var i=0;i<table.length;i++){var item=table.get(i);if(item){functionsInTableMap.set(item,i)}}}if(functionsInTableMap.has(func)){return functionsInTableMap.get(func)}var ret;if(freeTableIndexes.length){ret=freeTableIndexes.pop()}else{ret=table.length;try{table.grow(1)}catch(err){if(!(err instanceof RangeError)){throw err}throw"Unable to grow wasm table. Set ALLOW_TABLE_GROWTH."}}try{table.set(ret,func)}catch(err){if(!(err instanceof TypeError)){throw err}var wrapped=convertJsFunctionToWasm(func,sig);table.set(ret,wrapped)}functionsInTableMap.set(func,ret);return ret}function removeFunctionWasm(index){functionsInTableMap.delete(wasmTable.get(index));freeTableIndexes.push(index)}var funcWrappers={};function dynCall(sig,ptr,args){if(args&&args.length){return Module["dynCall_"+sig].apply(null,[ptr].concat(args))}else{return Module["dynCall_"+sig].call(null,ptr)}}var tempRet0=0;var setTempRet0=function(value){tempRet0=value};var wasmBinary;if(Module["wasmBinary"])wasmBinary=Module["wasmBinary"];var noExitRuntime;if(Module["noExitRuntime"])noExitRuntime=Module["noExitRuntime"];if(typeof WebAssembly!=="object"){err("no native wasm support detected")}function setValue(ptr,value,type,noSafe){type=type||"i8";if(type.charAt(type.length-1)==="*")type="i32";switch(type){case"i1":HEAP8[ptr>>0]=value;break;case"i8":HEAP8[ptr>>0]=value;break;case"i16":HEAP16[ptr>>1]=value;break;case"i32":HEAP32[ptr>>2]=value;break;case"i64":tempI64=[value>>>0,(tempDouble=value,+Math_abs(tempDouble)>=1?tempDouble>0?(Math_min(+Math_floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math_ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[ptr>>2]=tempI64[0],HEAP32[ptr+4>>2]=tempI64[1];break;case"float":HEAPF32[ptr>>2]=value;break;case"double":HEAPF64[ptr>>3]=value;break;default:abort("invalid type for setValue: "+type)}}var wasmMemory;var wasmTable=new WebAssembly.Table({"initial":7530,"maximum":7530+0,"element":"anyfunc"});var ABORT=false;var EXITSTATUS=0;function assert(condition,text){if(!condition){abort("Assertion failed: "+text)}}function getCFunc(ident){var func=Module["_"+ident];assert(func,"Cannot call unknown function "+ident+", make sure it is exported");return func}function ccall(ident,returnType,argTypes,args,opts){var toC={"string":function(str){var ret=0;if(str!==null&&str!==undefined&&str!==0){var len=(str.length<<2)+1;ret=stackAlloc(len);stringToUTF8(str,ret,len)}return ret},"array":function(arr){var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}};function convertReturnValue(ret){if(returnType==="string")return UTF8ToString(ret);if(returnType==="boolean")return Boolean(ret);return ret}var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);ret=convertReturnValue(ret);if(stack!==0)stackRestore(stack);return ret}function cwrap(ident,returnType,argTypes,opts){argTypes=argTypes||[];var numericArgs=argTypes.every(function(type){return type==="number"});var numericRet=returnType!=="string";if(numericRet&&numericArgs&&!opts){return getCFunc(ident)}return function(){return ccall(ident,returnType,argTypes,arguments,opts)}}var ALLOC_NONE=3;var UTF8Decoder=typeof TextDecoder!=="undefined"?new TextDecoder("utf8"):undefined;function UTF8ArrayToString(heap,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heap[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heap.subarray&&UTF8Decoder){return UTF8Decoder.decode(heap.subarray(idx,endPtr))}else{var str="";while(idx<endPtr){var u0=heap[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heap[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heap[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heap[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}return str}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):""}function stringToUTF8Array(str,heap,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127)++len;else if(u<=2047)len+=2;else if(u<=65535)len+=3;else len+=4}return len}var UTF16Decoder=typeof TextDecoder!=="undefined"?new TextDecoder("utf-16le"):undefined;function allocateUTF8(str){var size=lengthBytesUTF8(str)+1;var ret=_malloc(size);if(ret)stringToUTF8Array(str,HEAP8,ret,size);return ret}function writeArrayToMemory(array,buffer){HEAP8.set(array,buffer)}function writeAsciiToMemory(str,buffer,dontAddNull){for(var i=0;i<str.length;++i){HEAP8[buffer++>>0]=str.charCodeAt(i)}if(!dontAddNull)HEAP8[buffer>>0]=0}var WASM_PAGE_SIZE=65536;function alignUp(x,multiple){if(x%multiple>0){x+=multiple-x%multiple}return x}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferAndViews(buf){buffer=buf;Module["HEAP8"]=HEAP8=new Int8Array(buf);Module["HEAP16"]=HEAP16=new Int16Array(buf);Module["HEAP32"]=HEAP32=new Int32Array(buf);Module["HEAPU8"]=HEAPU8=new Uint8Array(buf);Module["HEAPU16"]=HEAPU16=new Uint16Array(buf);Module["HEAPU32"]=HEAPU32=new Uint32Array(buf);Module["HEAPF32"]=HEAPF32=new Float32Array(buf);Module["HEAPF64"]=HEAPF64=new Float64Array(buf)}var STACK_BASE=5523696,DYNAMIC_BASE=5523696,DYNAMICTOP_PTR=280656;var INITIAL_INITIAL_MEMORY=Module["INITIAL_MEMORY"]||16777216;if(Module["wasmMemory"]){wasmMemory=Module["wasmMemory"]}else{wasmMemory=new WebAssembly.Memory({"initial":INITIAL_INITIAL_MEMORY/WASM_PAGE_SIZE,"maximum":2147483648/WASM_PAGE_SIZE})}if(wasmMemory){buffer=wasmMemory.buffer}INITIAL_INITIAL_MEMORY=buffer.byteLength;updateGlobalBufferAndViews(buffer);HEAP32[DYNAMICTOP_PTR>>2]=DYNAMIC_BASE;function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback=="function"){callback(Module);continue}var func=callback.func;if(typeof func==="number"){if(callback.arg===undefined){Module["dynCall_v"](func)}else{Module["dynCall_vi"](func,callback.arg)}}else{func(callback.arg===undefined?null:callback.arg)}}}var __ATPRERUN__=[];var __ATINIT__=[];var __ATMAIN__=[];var __ATEXIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;var runtimeExited=false;function preRun(){if(Module["preRun"]){if(typeof Module["preRun"]=="function")Module["preRun"]=[Module["preRun"]];while(Module["preRun"].length){addOnPreRun(Module["preRun"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;if(!Module["noFSInit"]&&!FS.init.initialized)FS.init();TTY.init();SOCKFS.root=FS.mount(SOCKFS,{},null);callRuntimeCallbacks(__ATINIT__)}function preMain(){FS.ignorePermissions=false;callRuntimeCallbacks(__ATMAIN__)}function exitRuntime(){runtimeExited=true}function postRun(){if(Module["postRun"]){if(typeof Module["postRun"]=="function")Module["postRun"]=[Module["postRun"]];while(Module["postRun"].length){addOnPostRun(Module["postRun"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var Math_abs=Math.abs;var Math_ceil=Math.ceil;var Math_floor=Math.floor;var Math_min=Math.min;var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function getUniqueRunDependency(id){return id}function addRunDependency(id){runDependencies++;if(Module["monitorRunDependencies"]){Module["monitorRunDependencies"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module["monitorRunDependencies"]){Module["monitorRunDependencies"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module["preloadedImages"]={};Module["preloadedAudios"]={};function abort(what){if(Module["onAbort"]){Module["onAbort"](what)}what+="";out(what);err(what);ABORT=true;EXITSTATUS=1;what="abort("+what+"). Build with -s ASSERTIONS=1 for more info.";throw new WebAssembly.RuntimeError(what)}function hasPrefix(str,prefix){return String.prototype.startsWith?str.startsWith(prefix):str.indexOf(prefix)===0}var dataURIPrefix="data:application/octet-stream;base64,";function isDataURI(filename){return hasPrefix(filename,dataURIPrefix)}var fileURIPrefix="file://";function isFileURI(filename){return hasPrefix(filename,fileURIPrefix)}var wasmBinaryFile="video.simd.wasm";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinary(){try{if(wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(wasmBinaryFile)}else{throw"both async and sync fetching of the wasm failed"}}catch(err){abort(err)}}function getBinaryPromise(){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)&&typeof fetch==="function"&&!isFileURI(wasmBinaryFile)){return fetch(wasmBinaryFile,{credentials:"same-origin"}).then(function(response){if(!response["ok"]){throw"failed to load wasm binary file at '"+wasmBinaryFile+"'"}return response["arrayBuffer"]()}).catch(function(){return getBinary()})}return new Promise(function(resolve,reject){resolve(getBinary())})}function createWasm(){var info={"env":asmLibraryArg,"wasi_snapshot_preview1":asmLibraryArg};function receiveInstance(instance,module){var exports=instance.exports;Module["asm"]=exports;removeRunDependency("wasm-instantiate")}addRunDependency("wasm-instantiate");function receiveInstantiatedSource(output){receiveInstance(output["instance"])}function instantiateArrayBuffer(receiver){return instantiateCachedURL(108,wasmUrl,info);return {};getBinaryPromise().then(function(binary){return WebAssembly.instantiate(binary,info)}).then(receiver,function(reason){err("failed to asynchronously prepare wasm: "+reason);abort(reason)})}function instantiateAsync(){if(!wasmBinary&&typeof WebAssembly.instantiateStreaming==="function"&&!isDataURI(wasmBinaryFile)&&!isFileURI(wasmBinaryFile)&&typeof fetch==="function"){fetch(wasmBinaryFile,{credentials:"same-origin"}).then(function(response){var result=WebAssembly.instantiateStreaming(response,info);return result.then(receiveInstantiatedSource,function(reason){err("wasm streaming compile failed: "+reason);err("falling back to ArrayBuffer instantiation");instantiateArrayBuffer(receiveInstantiatedSource)})})}else{return instantiateArrayBuffer(receiveInstantiatedSource)}}if(Module["instantiateWasm"]){try{var exports=Module["instantiateWasm"](info,receiveInstance);return exports}catch(e){err("Module.instantiateWasm callback failed with error: "+e);return false}}instantiateAsync();return{}}var tempDouble;var tempI64;var ASM_CONSTS={1104:function($0,$1){send_data($0,$1)},1130:function($0,$1,$2){js_info_from_wcl($0,$1,$2)},1168:function($0,$1,$2,$3){monitor_drop_ratio($0,$1,$2,$3)},1210:function($0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11){frame_callback($0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11)},1293:function($0,$1){decode_callback($0,$1)},1324:function($0,$1,$2){js_info_from_wcl($0,$1,$2)},1356:function($0,$1){SAVE_IV($0,$1)},1377:function($0,$1){APP_Troubleshoting_Info($0,$1)},1417:function($0,$1,$2,$3){Monitor_Callback($0,$1,$2,$3)},1460:function($0,$1,$2,$3){Monitor_CallbackE($0,$1,$2,$3)},1504:function($0,$1,$2,$3){Monitor_CallbackD($0,$1,$2,$3)},1876:function($0,$1){SAVE_IV($0,$1)},1894:function($0,$1){Send_Data($0,$1)},1914:function($0,$1){APP_Troubleshoting_Info($0,$1)},1948:function($0,$1){decode_callback($0,$1)},1976:function($0,$1){Send_Data($0,$1)},1999:function($0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12){frame_callback_video_mode($0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12)},2097:function($0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10){frame_callback_mouse_video_mode($0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10)},2189:function($0){Update_WebSokcet_Speed($0)},2221:function($0,$1,$2,$3,$4){Sharing_Encode_Sending_Status($0,$1,$2,$3,$4)},2279:function($0,$1,$2,$3){Sharing_Encode_Codec_Info($0,$1,$2,$3)}};function _emscripten_asm_const_iii(code,sigPtr,argbuf){var args=readAsmConstArgs(sigPtr,argbuf);return ASM_CONSTS[code].apply(null,args)}__ATINIT__.push({func:function(){___wasm_call_ctors()}});function demangle(func){demangle.recursionGuard=(demangle.recursionGuard|0)+1;if(demangle.recursionGuard>1)return func;var __cxa_demangle_func=Module["___cxa_demangle"]||Module["__cxa_demangle"];assert(__cxa_demangle_func);var stackTop=stackSave();try{var s=func;if(s.startsWith("__Z"))s=s.substr(1);var len=lengthBytesUTF8(s)+1;var buf=stackAlloc(len);stringToUTF8(s,buf,len);var status=stackAlloc(4);var ret=__cxa_demangle_func(buf,0,0,status);if(HEAP32[status>>2]===0&&ret){return UTF8ToString(ret)}}catch(e){}finally{_free(ret);stackRestore(stackTop);if(demangle.recursionGuard<2)--demangle.recursionGuard}return func}function demangleAll(text){var regex=/\b_Z[\w\d_]+/g;return text.replace(regex,function(x){var y=demangle(x);return x===y?x:y+" ["+x+"]"})}function jsStackTrace(){var err=new Error;if(!err.stack){try{throw new Error}catch(e){err=e}if(!err.stack){return"(no stack trace available)"}}return err.stack.toString()}function stackTrace(){var js=jsStackTrace();if(Module["extraStackTrace"])js+="\n"+Module["extraStackTrace"]();return demangleAll(js)}function _CreateGltPlatform(){err("missing function: CreateGltPlatform");abort(-1)}function _DestroyGltPlatform(){err("missing function: DestroyGltPlatform");abort(-1)}function ___assert_fail(condition,filename,line,func){abort("Assertion failed: "+UTF8ToString(condition)+", at: "+[filename?UTF8ToString(filename):"unknown filename",line,func?UTF8ToString(func):"unknown function"])}function ___cxa_allocate_exception(size){return _malloc(size)}function _atexit(func,arg){__ATEXIT__.unshift({func:func,arg:arg})}function ___cxa_atexit(a0,a1){return _atexit(a0,a1)}var ___exception_infos={};var ___exception_last=0;function __ZSt18uncaught_exceptionv(){return __ZSt18uncaught_exceptionv.uncaught_exceptions>0}function ___cxa_throw(ptr,type,destructor){___exception_infos[ptr]={ptr:ptr,adjusted:[ptr],type:type,destructor:destructor,refcount:0,caught:false,rethrown:false};___exception_last=ptr;if(!("uncaught_exception"in __ZSt18uncaught_exceptionv)){__ZSt18uncaught_exceptionv.uncaught_exceptions=1}else{__ZSt18uncaught_exceptionv.uncaught_exceptions++}throw ptr}function setErrNo(value){HEAP32[___errno_location()>>2]=value;return value}function ___map_file(pathname,size){setErrNo(63);return-1}function ___sys__newselect(nfds,readfds,writefds,exceptfds,timeout){var total=0;var srcReadLow=readfds?HEAP32[readfds>>2]:0,srcReadHigh=readfds?HEAP32[readfds+4>>2]:0;var srcWriteLow=writefds?HEAP32[writefds>>2]:0,srcWriteHigh=writefds?HEAP32[writefds+4>>2]:0;var srcExceptLow=exceptfds?HEAP32[exceptfds>>2]:0,srcExceptHigh=exceptfds?HEAP32[exceptfds+4>>2]:0;var dstReadLow=0,dstReadHigh=0;var dstWriteLow=0,dstWriteHigh=0;var dstExceptLow=0,dstExceptHigh=0;var allLow=(readfds?HEAP32[readfds>>2]:0)|(writefds?HEAP32[writefds>>2]:0)|(exceptfds?HEAP32[exceptfds>>2]:0);var allHigh=(readfds?HEAP32[readfds+4>>2]:0)|(writefds?HEAP32[writefds+4>>2]:0)|(exceptfds?HEAP32[exceptfds+4>>2]:0);var check=function(fd,low,high,val){return fd<32?low&val:high&val};for(var fd=0;fd<nfds;fd++){var mask=1<<fd%32;if(!check(fd,allLow,allHigh,mask)){continue}var stream=FS.getStream(fd);if(!stream)throw new FS.ErrnoError(8);var flags=SYSCALLS.DEFAULT_POLLMASK;if(stream.stream_ops.poll){flags=stream.stream_ops.poll(stream)}if(flags&1&&check(fd,srcReadLow,srcReadHigh,mask)){fd<32?dstReadLow=dstReadLow|mask:dstReadHigh=dstReadHigh|mask;total++}if(flags&4&&check(fd,srcWriteLow,srcWriteHigh,mask)){fd<32?dstWriteLow=dstWriteLow|mask:dstWriteHigh=dstWriteHigh|mask;total++}if(flags&2&&check(fd,srcExceptLow,srcExceptHigh,mask)){fd<32?dstExceptLow=dstExceptLow|mask:dstExceptHigh=dstExceptHigh|mask;total++}}if(readfds){HEAP32[readfds>>2]=dstReadLow;HEAP32[readfds+4>>2]=dstReadHigh}if(writefds){HEAP32[writefds>>2]=dstWriteLow;HEAP32[writefds+4>>2]=dstWriteHigh}if(exceptfds){HEAP32[exceptfds>>2]=dstExceptLow;HEAP32[exceptfds+4>>2]=dstExceptHigh}return total}var PATH={splitPath:function(filename){var splitPathRe=/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;return splitPathRe.exec(filename).slice(1)},normalizeArray:function(parts,allowAboveRoot){var up=0;for(var i=parts.length-1;i>=0;i--){var last=parts[i];if(last==="."){parts.splice(i,1)}else if(last===".."){parts.splice(i,1);up++}else if(up){parts.splice(i,1);up--}}if(allowAboveRoot){for(;up;up--){parts.unshift("..")}}return parts},normalize:function(path){var isAbsolute=path.charAt(0)==="/",trailingSlash=path.substr(-1)==="/";path=PATH.normalizeArray(path.split("/").filter(function(p){return!!p}),!isAbsolute).join("/");if(!path&&!isAbsolute){path="."}if(path&&trailingSlash){path+="/"}return(isAbsolute?"/":"")+path},dirname:function(path){var result=PATH.splitPath(path),root=result[0],dir=result[1];if(!root&&!dir){return"."}if(dir){dir=dir.substr(0,dir.length-1)}return root+dir},basename:function(path){if(path==="/")return"/";var lastSlash=path.lastIndexOf("/");if(lastSlash===-1)return path;return path.substr(lastSlash+1)},extname:function(path){return PATH.splitPath(path)[3]},join:function(){var paths=Array.prototype.slice.call(arguments,0);return PATH.normalize(paths.join("/"))},join2:function(l,r){return PATH.normalize(l+"/"+r)}};var PATH_FS={resolve:function(){var resolvedPath="",resolvedAbsolute=false;for(var i=arguments.length-1;i>=-1&&!resolvedAbsolute;i--){var path=i>=0?arguments[i]:FS.cwd();if(typeof path!=="string"){throw new TypeError("Arguments to path.resolve must be strings")}else if(!path){return""}resolvedPath=path+"/"+resolvedPath;resolvedAbsolute=path.charAt(0)==="/"}resolvedPath=PATH.normalizeArray(resolvedPath.split("/").filter(function(p){return!!p}),!resolvedAbsolute).join("/");return(resolvedAbsolute?"/":"")+resolvedPath||"."},relative:function(from,to){from=PATH_FS.resolve(from).substr(1);to=PATH_FS.resolve(to).substr(1);function trim(arr){var start=0;for(;start<arr.length;start++){if(arr[start]!=="")break}var end=arr.length-1;for(;end>=0;end--){if(arr[end]!=="")break}if(start>end)return[];return arr.slice(start,end-start+1)}var fromParts=trim(from.split("/"));var toParts=trim(to.split("/"));var length=Math.min(fromParts.length,toParts.length);var samePartsLength=length;for(var i=0;i<length;i++){if(fromParts[i]!==toParts[i]){samePartsLength=i;break}}var outputParts=[];for(var i=samePartsLength;i<fromParts.length;i++){outputParts.push("..")}outputParts=outputParts.concat(toParts.slice(samePartsLength));return outputParts.join("/")}};var TTY={ttys:[],init:function(){},shutdown:function(){},register:function(dev,ops){TTY.ttys[dev]={input:[],output:[],ops:ops};FS.registerDevice(dev,TTY.stream_ops)},stream_ops:{open:function(stream){var tty=TTY.ttys[stream.node.rdev];if(!tty){throw new FS.ErrnoError(43)}stream.tty=tty;stream.seekable=false},close:function(stream){stream.tty.ops.flush(stream.tty)},flush:function(stream){stream.tty.ops.flush(stream.tty)},read:function(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.get_char){throw new FS.ErrnoError(60)}var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=stream.tty.ops.get_char(stream.tty)}catch(e){throw new FS.ErrnoError(29)}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(6)}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result}if(bytesRead){stream.node.timestamp=Date.now()}return bytesRead},write:function(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.put_char){throw new FS.ErrnoError(60)}try{for(var i=0;i<length;i++){stream.tty.ops.put_char(stream.tty,buffer[offset+i])}}catch(e){throw new FS.ErrnoError(29)}if(length){stream.node.timestamp=Date.now()}return i}},default_tty_ops:{get_char:function(tty){if(!tty.input.length){var result=null;if(ENVIRONMENT_IS_NODE){var BUFSIZE=256;var buf=Buffer.alloc?Buffer.alloc(BUFSIZE):new Buffer(BUFSIZE);var bytesRead=0;try{bytesRead=nodeFS.readSync(process.stdin.fd,buf,0,BUFSIZE,null)}catch(e){if(e.toString().indexOf("EOF")!=-1)bytesRead=0;else throw e}if(bytesRead>0){result=buf.slice(0,bytesRead).toString("utf-8")}else{result=null}}else if(typeof window!="undefined"&&typeof window.prompt=="function"){result=window.prompt("Input: ");if(result!==null){result+="\n"}}else if(typeof readline=="function"){result=readline();if(result!==null){result+="\n"}}if(!result){return null}tty.input=intArrayFromString(result,true)}return tty.input.shift()},put_char:function(tty,val){if(val===null||val===10){out(UTF8ArrayToString(tty.output,0));tty.output=[]}else{if(val!=0)tty.output.push(val)}},flush:function(tty){if(tty.output&&tty.output.length>0){out(UTF8ArrayToString(tty.output,0));tty.output=[]}}},default_tty1_ops:{put_char:function(tty,val){if(val===null||val===10){err(UTF8ArrayToString(tty.output,0));tty.output=[]}else{if(val!=0)tty.output.push(val)}},flush:function(tty){if(tty.output&&tty.output.length>0){err(UTF8ArrayToString(tty.output,0));tty.output=[]}}}};var MEMFS={ops_table:null,mount:function(mount){return MEMFS.createNode(null,"/",16384|511,0)},createNode:function(parent,name,mode,dev){if(FS.isBlkdev(mode)||FS.isFIFO(mode)){throw new FS.ErrnoError(63)}if(!MEMFS.ops_table){MEMFS.ops_table={dir:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,lookup:MEMFS.node_ops.lookup,mknod:MEMFS.node_ops.mknod,rename:MEMFS.node_ops.rename,unlink:MEMFS.node_ops.unlink,rmdir:MEMFS.node_ops.rmdir,readdir:MEMFS.node_ops.readdir,symlink:MEMFS.node_ops.symlink},stream:{llseek:MEMFS.stream_ops.llseek}},file:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:{llseek:MEMFS.stream_ops.llseek,read:MEMFS.stream_ops.read,write:MEMFS.stream_ops.write,allocate:MEMFS.stream_ops.allocate,mmap:MEMFS.stream_ops.mmap,msync:MEMFS.stream_ops.msync}},link:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,readlink:MEMFS.node_ops.readlink},stream:{}},chrdev:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:FS.chrdev_stream_ops}}}var node=FS.createNode(parent,name,mode,dev);if(FS.isDir(node.mode)){node.node_ops=MEMFS.ops_table.dir.node;node.stream_ops=MEMFS.ops_table.dir.stream;node.contents={}}else if(FS.isFile(node.mode)){node.node_ops=MEMFS.ops_table.file.node;node.stream_ops=MEMFS.ops_table.file.stream;node.usedBytes=0;node.contents=null}else if(FS.isLink(node.mode)){node.node_ops=MEMFS.ops_table.link.node;node.stream_ops=MEMFS.ops_table.link.stream}else if(FS.isChrdev(node.mode)){node.node_ops=MEMFS.ops_table.chrdev.node;node.stream_ops=MEMFS.ops_table.chrdev.stream}node.timestamp=Date.now();if(parent){parent.contents[name]=node}return node},getFileDataAsRegularArray:function(node){if(node.contents&&node.contents.subarray){var arr=[];for(var i=0;i<node.usedBytes;++i)arr.push(node.contents[i]);return arr}return node.contents},getFileDataAsTypedArray:function(node){if(!node.contents)return new Uint8Array(0);if(node.contents.subarray)return node.contents.subarray(0,node.usedBytes);return new Uint8Array(node.contents)},expandFileStorage:function(node,newCapacity){var prevCapacity=node.contents?node.contents.length:0;if(prevCapacity>=newCapacity)return;var CAPACITY_DOUBLING_MAX=1024*1024;newCapacity=Math.max(newCapacity,prevCapacity*(prevCapacity<CAPACITY_DOUBLING_MAX?2:1.125)>>>0);if(prevCapacity!=0)newCapacity=Math.max(newCapacity,256);var oldContents=node.contents;node.contents=new Uint8Array(newCapacity);if(node.usedBytes>0)node.contents.set(oldContents.subarray(0,node.usedBytes),0);return},resizeFileStorage:function(node,newSize){if(node.usedBytes==newSize)return;if(newSize==0){node.contents=null;node.usedBytes=0;return}if(!node.contents||node.contents.subarray){var oldContents=node.contents;node.contents=new Uint8Array(newSize);if(oldContents){node.contents.set(oldContents.subarray(0,Math.min(newSize,node.usedBytes)))}node.usedBytes=newSize;return}if(!node.contents)node.contents=[];if(node.contents.length>newSize)node.contents.length=newSize;else while(node.contents.length<newSize)node.contents.push(0);node.usedBytes=newSize},node_ops:{getattr:function(node){var attr={};attr.dev=FS.isChrdev(node.mode)?node.id:1;attr.ino=node.id;attr.mode=node.mode;attr.nlink=1;attr.uid=0;attr.gid=0;attr.rdev=node.rdev;if(FS.isDir(node.mode)){attr.size=4096}else if(FS.isFile(node.mode)){attr.size=node.usedBytes}else if(FS.isLink(node.mode)){attr.size=node.link.length}else{attr.size=0}attr.atime=new Date(node.timestamp);attr.mtime=new Date(node.timestamp);attr.ctime=new Date(node.timestamp);attr.blksize=4096;attr.blocks=Math.ceil(attr.size/attr.blksize);return attr},setattr:function(node,attr){if(attr.mode!==undefined){node.mode=attr.mode}if(attr.timestamp!==undefined){node.timestamp=attr.timestamp}if(attr.size!==undefined){MEMFS.resizeFileStorage(node,attr.size)}},lookup:function(parent,name){throw FS.genericErrors[44]},mknod:function(parent,name,mode,dev){return MEMFS.createNode(parent,name,mode,dev)},rename:function(old_node,new_dir,new_name){if(FS.isDir(old_node.mode)){var new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(new_node){for(var i in new_node.contents){throw new FS.ErrnoError(55)}}}delete old_node.parent.contents[old_node.name];old_node.name=new_name;new_dir.contents[new_name]=old_node;old_node.parent=new_dir},unlink:function(parent,name){delete parent.contents[name]},rmdir:function(parent,name){var node=FS.lookupNode(parent,name);for(var i in node.contents){throw new FS.ErrnoError(55)}delete parent.contents[name]},readdir:function(node){var entries=[".",".."];for(var key in node.contents){if(!node.contents.hasOwnProperty(key)){continue}entries.push(key)}return entries},symlink:function(parent,newname,oldpath){var node=MEMFS.createNode(parent,newname,511|40960,0);node.link=oldpath;return node},readlink:function(node){if(!FS.isLink(node.mode)){throw new FS.ErrnoError(28)}return node.link}},stream_ops:{read:function(stream,buffer,offset,length,position){var contents=stream.node.contents;if(position>=stream.node.usedBytes)return 0;var size=Math.min(stream.node.usedBytes-position,length);if(size>8&&contents.subarray){buffer.set(contents.subarray(position,position+size),offset)}else{for(var i=0;i<size;i++)buffer[offset+i]=contents[position+i]}return size},write:function(stream,buffer,offset,length,position,canOwn){if(buffer.buffer===HEAP8.buffer){canOwn=false}if(!length)return 0;var node=stream.node;node.timestamp=Date.now();if(buffer.subarray&&(!node.contents||node.contents.subarray)){if(canOwn){node.contents=buffer.subarray(offset,offset+length);node.usedBytes=length;return length}else if(node.usedBytes===0&&position===0){node.contents=buffer.slice(offset,offset+length);node.usedBytes=length;return length}else if(position+length<=node.usedBytes){node.contents.set(buffer.subarray(offset,offset+length),position);return length}}MEMFS.expandFileStorage(node,position+length);if(node.contents.subarray&&buffer.subarray)node.contents.set(buffer.subarray(offset,offset+length),position);else{for(var i=0;i<length;i++){node.contents[position+i]=buffer[offset+i]}}node.usedBytes=Math.max(node.usedBytes,position+length);return length},llseek:function(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position}else if(whence===2){if(FS.isFile(stream.node.mode)){position+=stream.node.usedBytes}}if(position<0){throw new FS.ErrnoError(28)}return position},allocate:function(stream,offset,length){MEMFS.expandFileStorage(stream.node,offset+length);stream.node.usedBytes=Math.max(stream.node.usedBytes,offset+length)},mmap:function(stream,buffer,offset,length,position,prot,flags){if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(43)}var ptr;var allocated;var contents=stream.node.contents;if(!(flags&2)&&contents.buffer===buffer.buffer){allocated=false;ptr=contents.byteOffset}else{if(position>0||position+length<contents.length){if(contents.subarray){contents=contents.subarray(position,position+length)}else{contents=Array.prototype.slice.call(contents,position,position+length)}}allocated=true;var fromHeap=buffer.buffer==HEAP8.buffer;ptr=_malloc(length);if(!ptr){throw new FS.ErrnoError(48)}(fromHeap?HEAP8:buffer).set(contents,ptr)}return{ptr:ptr,allocated:allocated}},msync:function(stream,buffer,offset,length,mmapFlags){if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(43)}if(mmapFlags&2){return 0}var bytesWritten=MEMFS.stream_ops.write(stream,buffer,0,length,offset,false);return 0}}};var FS={root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:false,ignorePermissions:true,trackingDelegate:{},tracking:{openFlags:{READ:1,WRITE:2}},ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,handleFSError:function(e){if(!(e instanceof FS.ErrnoError))throw e+" : "+stackTrace();return setErrNo(e.errno)},lookupPath:function(path,opts){path=PATH_FS.resolve(FS.cwd(),path);opts=opts||{};if(!path)return{path:"",node:null};var defaults={follow_mount:true,recurse_count:0};for(var key in defaults){if(opts[key]===undefined){opts[key]=defaults[key]}}if(opts.recurse_count>8){throw new FS.ErrnoError(32)}var parts=PATH.normalizeArray(path.split("/").filter(function(p){return!!p}),false);var current=FS.root;var current_path="/";for(var i=0;i<parts.length;i++){var islast=i===parts.length-1;if(islast&&opts.parent){break}current=FS.lookupNode(current,parts[i]);current_path=PATH.join2(current_path,parts[i]);if(FS.isMountpoint(current)){if(!islast||islast&&opts.follow_mount){current=current.mounted.root}}if(!islast||opts.follow){var count=0;while(FS.isLink(current.mode)){var link=FS.readlink(current_path);current_path=PATH_FS.resolve(PATH.dirname(current_path),link);var lookup=FS.lookupPath(current_path,{recurse_count:opts.recurse_count});current=lookup.node;if(count++>40){throw new FS.ErrnoError(32)}}}}return{path:current_path,node:current}},getPath:function(node){var path;while(true){if(FS.isRoot(node)){var mount=node.mount.mountpoint;if(!path)return mount;return mount[mount.length-1]!=="/"?mount+"/"+path:mount+path}path=path?node.name+"/"+path:node.name;node=node.parent}},hashName:function(parentid,name){var hash=0;for(var i=0;i<name.length;i++){hash=(hash<<5)-hash+name.charCodeAt(i)|0}return(parentid+hash>>>0)%FS.nameTable.length},hashAddNode:function(node){var hash=FS.hashName(node.parent.id,node.name);node.name_next=FS.nameTable[hash];FS.nameTable[hash]=node},hashRemoveNode:function(node){var hash=FS.hashName(node.parent.id,node.name);if(FS.nameTable[hash]===node){FS.nameTable[hash]=node.name_next}else{var current=FS.nameTable[hash];while(current){if(current.name_next===node){current.name_next=node.name_next;break}current=current.name_next}}},lookupNode:function(parent,name){var errCode=FS.mayLookup(parent);if(errCode){throw new FS.ErrnoError(errCode,parent)}var hash=FS.hashName(parent.id,name);for(var node=FS.nameTable[hash];node;node=node.name_next){var nodeName=node.name;if(node.parent.id===parent.id&&nodeName===name){return node}}return FS.lookup(parent,name)},createNode:function(parent,name,mode,rdev){var node=new FS.FSNode(parent,name,mode,rdev);FS.hashAddNode(node);return node},destroyNode:function(node){FS.hashRemoveNode(node)},isRoot:function(node){return node===node.parent},isMountpoint:function(node){return!!node.mounted},isFile:function(mode){return(mode&61440)===32768},isDir:function(mode){return(mode&61440)===16384},isLink:function(mode){return(mode&61440)===40960},isChrdev:function(mode){return(mode&61440)===8192},isBlkdev:function(mode){return(mode&61440)===24576},isFIFO:function(mode){return(mode&61440)===4096},isSocket:function(mode){return(mode&49152)===49152},flagModes:{"r":0,"rs":1052672,"r+":2,"w":577,"wx":705,"xw":705,"w+":578,"wx+":706,"xw+":706,"a":1089,"ax":1217,"xa":1217,"a+":1090,"ax+":1218,"xa+":1218},modeStringToFlags:function(str){var flags=FS.flagModes[str];if(typeof flags==="undefined"){throw new Error("Unknown file open mode: "+str)}return flags},flagsToPermissionString:function(flag){var perms=["r","w","rw"][flag&3];if(flag&512){perms+="w"}return perms},nodePermissions:function(node,perms){if(FS.ignorePermissions){return 0}if(perms.indexOf("r")!==-1&&!(node.mode&292)){return 2}else if(perms.indexOf("w")!==-1&&!(node.mode&146)){return 2}else if(perms.indexOf("x")!==-1&&!(node.mode&73)){return 2}return 0},mayLookup:function(dir){var errCode=FS.nodePermissions(dir,"x");if(errCode)return errCode;if(!dir.node_ops.lookup)return 2;return 0},mayCreate:function(dir,name){try{var node=FS.lookupNode(dir,name);return 20}catch(e){}return FS.nodePermissions(dir,"wx")},mayDelete:function(dir,name,isdir){var node;try{node=FS.lookupNode(dir,name)}catch(e){return e.errno}var errCode=FS.nodePermissions(dir,"wx");if(errCode){return errCode}if(isdir){if(!FS.isDir(node.mode)){return 54}if(FS.isRoot(node)||FS.getPath(node)===FS.cwd()){return 10}}else{if(FS.isDir(node.mode)){return 31}}return 0},mayOpen:function(node,flags){if(!node){return 44}if(FS.isLink(node.mode)){return 32}else if(FS.isDir(node.mode)){if(FS.flagsToPermissionString(flags)!=="r"||flags&512){return 31}}return FS.nodePermissions(node,FS.flagsToPermissionString(flags))},MAX_OPEN_FDS:4096,nextfd:function(fd_start,fd_end){fd_start=fd_start||0;fd_end=fd_end||FS.MAX_OPEN_FDS;for(var fd=fd_start;fd<=fd_end;fd++){if(!FS.streams[fd]){return fd}}throw new FS.ErrnoError(33)},getStream:function(fd){return FS.streams[fd]},createStream:function(stream,fd_start,fd_end){if(!FS.FSStream){FS.FSStream=function(){};FS.FSStream.prototype={object:{get:function(){return this.node},set:function(val){this.node=val}},isRead:{get:function(){return(this.flags&2097155)!==1}},isWrite:{get:function(){return(this.flags&2097155)!==0}},isAppend:{get:function(){return this.flags&1024}}}}var newStream=new FS.FSStream;for(var p in stream){newStream[p]=stream[p]}stream=newStream;var fd=FS.nextfd(fd_start,fd_end);stream.fd=fd;FS.streams[fd]=stream;return stream},closeStream:function(fd){FS.streams[fd]=null},chrdev_stream_ops:{open:function(stream){var device=FS.getDevice(stream.node.rdev);stream.stream_ops=device.stream_ops;if(stream.stream_ops.open){stream.stream_ops.open(stream)}},llseek:function(){throw new FS.ErrnoError(70)}},major:function(dev){return dev>>8},minor:function(dev){return dev&255},makedev:function(ma,mi){return ma<<8|mi},registerDevice:function(dev,ops){FS.devices[dev]={stream_ops:ops}},getDevice:function(dev){return FS.devices[dev]},getMounts:function(mount){var mounts=[];var check=[mount];while(check.length){var m=check.pop();mounts.push(m);check.push.apply(check,m.mounts)}return mounts},syncfs:function(populate,callback){if(typeof populate==="function"){callback=populate;populate=false}FS.syncFSRequests++;if(FS.syncFSRequests>1){err("warning: "+FS.syncFSRequests+" FS.syncfs operations in flight at once, probably just doing extra work")}var mounts=FS.getMounts(FS.root.mount);var completed=0;function doCallback(errCode){FS.syncFSRequests--;return callback(errCode)}function done(errCode){if(errCode){if(!done.errored){done.errored=true;return doCallback(errCode)}return}if(++completed>=mounts.length){doCallback(null)}}mounts.forEach(function(mount){if(!mount.type.syncfs){return done(null)}mount.type.syncfs(mount,populate,done)})},mount:function(type,opts,mountpoint){var root=mountpoint==="/";var pseudo=!mountpoint;var node;if(root&&FS.root){throw new FS.ErrnoError(10)}else if(!root&&!pseudo){var lookup=FS.lookupPath(mountpoint,{follow_mount:false});mountpoint=lookup.path;node=lookup.node;if(FS.isMountpoint(node)){throw new FS.ErrnoError(10)}if(!FS.isDir(node.mode)){throw new FS.ErrnoError(54)}}var mount={type:type,opts:opts,mountpoint:mountpoint,mounts:[]};var mountRoot=type.mount(mount);mountRoot.mount=mount;mount.root=mountRoot;if(root){FS.root=mountRoot}else if(node){node.mounted=mount;if(node.mount){node.mount.mounts.push(mount)}}return mountRoot},unmount:function(mountpoint){var lookup=FS.lookupPath(mountpoint,{follow_mount:false});if(!FS.isMountpoint(lookup.node)){throw new FS.ErrnoError(28)}var node=lookup.node;var mount=node.mounted;var mounts=FS.getMounts(mount);Object.keys(FS.nameTable).forEach(function(hash){var current=FS.nameTable[hash];while(current){var next=current.name_next;if(mounts.indexOf(current.mount)!==-1){FS.destroyNode(current)}current=next}});node.mounted=null;var idx=node.mount.mounts.indexOf(mount);node.mount.mounts.splice(idx,1)},lookup:function(parent,name){return parent.node_ops.lookup(parent,name)},mknod:function(path,mode,dev){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);if(!name||name==="."||name===".."){throw new FS.ErrnoError(28)}var errCode=FS.mayCreate(parent,name);if(errCode){throw new FS.ErrnoError(errCode)}if(!parent.node_ops.mknod){throw new FS.ErrnoError(63)}return parent.node_ops.mknod(parent,name,mode,dev)},create:function(path,mode){mode=mode!==undefined?mode:438;mode&=4095;mode|=32768;return FS.mknod(path,mode,0)},mkdir:function(path,mode){mode=mode!==undefined?mode:511;mode&=511|512;mode|=16384;return FS.mknod(path,mode,0)},mkdirTree:function(path,mode){var dirs=path.split("/");var d="";for(var i=0;i<dirs.length;++i){if(!dirs[i])continue;d+="/"+dirs[i];try{FS.mkdir(d,mode)}catch(e){if(e.errno!=20)throw e}}},mkdev:function(path,mode,dev){if(typeof dev==="undefined"){dev=mode;mode=438}mode|=8192;return FS.mknod(path,mode,dev)},symlink:function(oldpath,newpath){if(!PATH_FS.resolve(oldpath)){throw new FS.ErrnoError(44)}var lookup=FS.lookupPath(newpath,{parent:true});var parent=lookup.node;if(!parent){throw new FS.ErrnoError(44)}var newname=PATH.basename(newpath);var errCode=FS.mayCreate(parent,newname);if(errCode){throw new FS.ErrnoError(errCode)}if(!parent.node_ops.symlink){throw new FS.ErrnoError(63)}return parent.node_ops.symlink(parent,newname,oldpath)},rename:function(old_path,new_path){var old_dirname=PATH.dirname(old_path);var new_dirname=PATH.dirname(new_path);var old_name=PATH.basename(old_path);var new_name=PATH.basename(new_path);var lookup,old_dir,new_dir;try{lookup=FS.lookupPath(old_path,{parent:true});old_dir=lookup.node;lookup=FS.lookupPath(new_path,{parent:true});new_dir=lookup.node}catch(e){throw new FS.ErrnoError(10)}if(!old_dir||!new_dir)throw new FS.ErrnoError(44);if(old_dir.mount!==new_dir.mount){throw new FS.ErrnoError(75)}var old_node=FS.lookupNode(old_dir,old_name);var relative=PATH_FS.relative(old_path,new_dirname);if(relative.charAt(0)!=="."){throw new FS.ErrnoError(28)}relative=PATH_FS.relative(new_path,old_dirname);if(relative.charAt(0)!=="."){throw new FS.ErrnoError(55)}var new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(old_node===new_node){return}var isdir=FS.isDir(old_node.mode);var errCode=FS.mayDelete(old_dir,old_name,isdir);if(errCode){throw new FS.ErrnoError(errCode)}errCode=new_node?FS.mayDelete(new_dir,new_name,isdir):FS.mayCreate(new_dir,new_name);if(errCode){throw new FS.ErrnoError(errCode)}if(!old_dir.node_ops.rename){throw new FS.ErrnoError(63)}if(FS.isMountpoint(old_node)||new_node&&FS.isMountpoint(new_node)){throw new FS.ErrnoError(10)}if(new_dir!==old_dir){errCode=FS.nodePermissions(old_dir,"w");if(errCode){throw new FS.ErrnoError(errCode)}}try{if(FS.trackingDelegate["willMovePath"]){FS.trackingDelegate["willMovePath"](old_path,new_path)}}catch(e){err("FS.trackingDelegate['willMovePath']('"+old_path+"', '"+new_path+"') threw an exception: "+e.message)}FS.hashRemoveNode(old_node);try{old_dir.node_ops.rename(old_node,new_dir,new_name)}catch(e){throw e}finally{FS.hashAddNode(old_node)}try{if(FS.trackingDelegate["onMovePath"])FS.trackingDelegate["onMovePath"](old_path,new_path)}catch(e){err("FS.trackingDelegate['onMovePath']('"+old_path+"', '"+new_path+"') threw an exception: "+e.message)}},rmdir:function(path){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var errCode=FS.mayDelete(parent,name,true);if(errCode){throw new FS.ErrnoError(errCode)}if(!parent.node_ops.rmdir){throw new FS.ErrnoError(63)}if(FS.isMountpoint(node)){throw new FS.ErrnoError(10)}try{if(FS.trackingDelegate["willDeletePath"]){FS.trackingDelegate["willDeletePath"](path)}}catch(e){err("FS.trackingDelegate['willDeletePath']('"+path+"') threw an exception: "+e.message)}parent.node_ops.rmdir(parent,name);FS.destroyNode(node);try{if(FS.trackingDelegate["onDeletePath"])FS.trackingDelegate["onDeletePath"](path)}catch(e){err("FS.trackingDelegate['onDeletePath']('"+path+"') threw an exception: "+e.message)}},readdir:function(path){var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;if(!node.node_ops.readdir){throw new FS.ErrnoError(54)}return node.node_ops.readdir(node)},unlink:function(path){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var errCode=FS.mayDelete(parent,name,false);if(errCode){throw new FS.ErrnoError(errCode)}if(!parent.node_ops.unlink){throw new FS.ErrnoError(63)}if(FS.isMountpoint(node)){throw new FS.ErrnoError(10)}try{if(FS.trackingDelegate["willDeletePath"]){FS.trackingDelegate["willDeletePath"](path)}}catch(e){err("FS.trackingDelegate['willDeletePath']('"+path+"') threw an exception: "+e.message)}parent.node_ops.unlink(parent,name);FS.destroyNode(node);try{if(FS.trackingDelegate["onDeletePath"])FS.trackingDelegate["onDeletePath"](path)}catch(e){err("FS.trackingDelegate['onDeletePath']('"+path+"') threw an exception: "+e.message)}},readlink:function(path){var lookup=FS.lookupPath(path);var link=lookup.node;if(!link){throw new FS.ErrnoError(44)}if(!link.node_ops.readlink){throw new FS.ErrnoError(28)}return PATH_FS.resolve(FS.getPath(link.parent),link.node_ops.readlink(link))},stat:function(path,dontFollow){var lookup=FS.lookupPath(path,{follow:!dontFollow});var node=lookup.node;if(!node){throw new FS.ErrnoError(44)}if(!node.node_ops.getattr){throw new FS.ErrnoError(63)}return node.node_ops.getattr(node)},lstat:function(path){return FS.stat(path,true)},chmod:function(path,mode,dontFollow){var node;if(typeof path==="string"){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(63)}node.node_ops.setattr(node,{mode:mode&4095|node.mode&~4095,timestamp:Date.now()})},lchmod:function(path,mode){FS.chmod(path,mode,true)},fchmod:function(fd,mode){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(8)}FS.chmod(stream.node,mode)},chown:function(path,uid,gid,dontFollow){var node;if(typeof path==="string"){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(63)}node.node_ops.setattr(node,{timestamp:Date.now()})},lchown:function(path,uid,gid){FS.chown(path,uid,gid,true)},fchown:function(fd,uid,gid){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(8)}FS.chown(stream.node,uid,gid)},truncate:function(path,len){if(len<0){throw new FS.ErrnoError(28)}var node;if(typeof path==="string"){var lookup=FS.lookupPath(path,{follow:true});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(63)}if(FS.isDir(node.mode)){throw new FS.ErrnoError(31)}if(!FS.isFile(node.mode)){throw new FS.ErrnoError(28)}var errCode=FS.nodePermissions(node,"w");if(errCode){throw new FS.ErrnoError(errCode)}node.node_ops.setattr(node,{size:len,timestamp:Date.now()})},ftruncate:function(fd,len){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(8)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(28)}FS.truncate(stream.node,len)},utime:function(path,atime,mtime){var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;node.node_ops.setattr(node,{timestamp:Math.max(atime,mtime)})},open:function(path,flags,mode,fd_start,fd_end){if(path===""){throw new FS.ErrnoError(44)}flags=typeof flags==="string"?FS.modeStringToFlags(flags):flags;mode=typeof mode==="undefined"?438:mode;if(flags&64){mode=mode&4095|32768}else{mode=0}var node;if(typeof path==="object"){node=path}else{path=PATH.normalize(path);try{var lookup=FS.lookupPath(path,{follow:!(flags&131072)});node=lookup.node}catch(e){}}var created=false;if(flags&64){if(node){if(flags&128){throw new FS.ErrnoError(20)}}else{node=FS.mknod(path,mode,0);created=true}}if(!node){throw new FS.ErrnoError(44)}if(FS.isChrdev(node.mode)){flags&=~512}if(flags&65536&&!FS.isDir(node.mode)){throw new FS.ErrnoError(54)}if(!created){var errCode=FS.mayOpen(node,flags);if(errCode){throw new FS.ErrnoError(errCode)}}if(flags&512){FS.truncate(node,0)}flags&=~(128|512|131072);var stream=FS.createStream({node:node,path:FS.getPath(node),flags:flags,seekable:true,position:0,stream_ops:node.stream_ops,ungotten:[],error:false},fd_start,fd_end);if(stream.stream_ops.open){stream.stream_ops.open(stream)}if(Module["logReadFiles"]&&!(flags&1)){if(!FS.readFiles)FS.readFiles={};if(!(path in FS.readFiles)){FS.readFiles[path]=1;err("FS.trackingDelegate error on read file: "+path)}}try{if(FS.trackingDelegate["onOpenFile"]){var trackingFlags=0;if((flags&2097155)!==1){trackingFlags|=FS.tracking.openFlags.READ}if((flags&2097155)!==0){trackingFlags|=FS.tracking.openFlags.WRITE}FS.trackingDelegate["onOpenFile"](path,trackingFlags)}}catch(e){err("FS.trackingDelegate['onOpenFile']('"+path+"', flags) threw an exception: "+e.message)}return stream},close:function(stream){if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if(stream.getdents)stream.getdents=null;try{if(stream.stream_ops.close){stream.stream_ops.close(stream)}}catch(e){throw e}finally{FS.closeStream(stream.fd)}stream.fd=null},isClosed:function(stream){return stream.fd===null},llseek:function(stream,offset,whence){if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if(!stream.seekable||!stream.stream_ops.llseek){throw new FS.ErrnoError(70)}if(whence!=0&&whence!=1&&whence!=2){throw new FS.ErrnoError(28)}stream.position=stream.stream_ops.llseek(stream,offset,whence);stream.ungotten=[];return stream.position},read:function(stream,buffer,offset,length,position){if(length<0||position<0){throw new FS.ErrnoError(28)}if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if((stream.flags&2097155)===1){throw new FS.ErrnoError(8)}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(31)}if(!stream.stream_ops.read){throw new FS.ErrnoError(28)}var seeking=typeof position!=="undefined";if(!seeking){position=stream.position}else if(!stream.seekable){throw new FS.ErrnoError(70)}var bytesRead=stream.stream_ops.read(stream,buffer,offset,length,position);if(!seeking)stream.position+=bytesRead;return bytesRead},write:function(stream,buffer,offset,length,position,canOwn){if(length<0||position<0){throw new FS.ErrnoError(28)}if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(8)}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(31)}if(!stream.stream_ops.write){throw new FS.ErrnoError(28)}if(stream.seekable&&stream.flags&1024){FS.llseek(stream,0,2)}var seeking=typeof position!=="undefined";if(!seeking){position=stream.position}else if(!stream.seekable){throw new FS.ErrnoError(70)}var bytesWritten=stream.stream_ops.write(stream,buffer,offset,length,position,canOwn);if(!seeking)stream.position+=bytesWritten;try{if(stream.path&&FS.trackingDelegate["onWriteToFile"])FS.trackingDelegate["onWriteToFile"](stream.path)}catch(e){err("FS.trackingDelegate['onWriteToFile']('"+stream.path+"') threw an exception: "+e.message)}return bytesWritten},allocate:function(stream,offset,length){if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if(offset<0||length<=0){throw new FS.ErrnoError(28)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(8)}if(!FS.isFile(stream.node.mode)&&!FS.isDir(stream.node.mode)){throw new FS.ErrnoError(43)}if(!stream.stream_ops.allocate){throw new FS.ErrnoError(138)}stream.stream_ops.allocate(stream,offset,length)},mmap:function(stream,buffer,offset,length,position,prot,flags){if((prot&2)!==0&&(flags&2)===0&&(stream.flags&2097155)!==2){throw new FS.ErrnoError(2)}if((stream.flags&2097155)===1){throw new FS.ErrnoError(2)}if(!stream.stream_ops.mmap){throw new FS.ErrnoError(43)}return stream.stream_ops.mmap(stream,buffer,offset,length,position,prot,flags)},msync:function(stream,buffer,offset,length,mmapFlags){if(!stream||!stream.stream_ops.msync){return 0}return stream.stream_ops.msync(stream,buffer,offset,length,mmapFlags)},munmap:function(stream){return 0},ioctl:function(stream,cmd,arg){if(!stream.stream_ops.ioctl){throw new FS.ErrnoError(59)}return stream.stream_ops.ioctl(stream,cmd,arg)},readFile:function(path,opts){opts=opts||{};opts.flags=opts.flags||"r";opts.encoding=opts.encoding||"binary";if(opts.encoding!=="utf8"&&opts.encoding!=="binary"){throw new Error('Invalid encoding type "'+opts.encoding+'"')}var ret;var stream=FS.open(path,opts.flags);var stat=FS.stat(path);var length=stat.size;var buf=new Uint8Array(length);FS.read(stream,buf,0,length,0);if(opts.encoding==="utf8"){ret=UTF8ArrayToString(buf,0)}else if(opts.encoding==="binary"){ret=buf}FS.close(stream);return ret},writeFile:function(path,data,opts){opts=opts||{};opts.flags=opts.flags||"w";var stream=FS.open(path,opts.flags,opts.mode);if(typeof data==="string"){var buf=new Uint8Array(lengthBytesUTF8(data)+1);var actualNumBytes=stringToUTF8Array(data,buf,0,buf.length);FS.write(stream,buf,0,actualNumBytes,undefined,opts.canOwn)}else if(ArrayBuffer.isView(data)){FS.write(stream,data,0,data.byteLength,undefined,opts.canOwn)}else{throw new Error("Unsupported data type")}FS.close(stream)},cwd:function(){return FS.currentPath},chdir:function(path){var lookup=FS.lookupPath(path,{follow:true});if(lookup.node===null){throw new FS.ErrnoError(44)}if(!FS.isDir(lookup.node.mode)){throw new FS.ErrnoError(54)}var errCode=FS.nodePermissions(lookup.node,"x");if(errCode){throw new FS.ErrnoError(errCode)}FS.currentPath=lookup.path},createDefaultDirectories:function(){FS.mkdir("/tmp");FS.mkdir("/home");FS.mkdir("/home/web_user")},createDefaultDevices:function(){FS.mkdir("/dev");FS.registerDevice(FS.makedev(1,3),{read:function(){return 0},write:function(stream,buffer,offset,length,pos){return length}});FS.mkdev("/dev/null",FS.makedev(1,3));TTY.register(FS.makedev(5,0),TTY.default_tty_ops);TTY.register(FS.makedev(6,0),TTY.default_tty1_ops);FS.mkdev("/dev/tty",FS.makedev(5,0));FS.mkdev("/dev/tty1",FS.makedev(6,0));var random_device;if(typeof crypto==="object"&&typeof crypto["getRandomValues"]==="function"){var randomBuffer=new Uint8Array(1);random_device=function(){crypto.getRandomValues(randomBuffer);return randomBuffer[0]}}else if(ENVIRONMENT_IS_NODE){try{var crypto_module=require("crypto");random_device=function(){return crypto_module["randomBytes"](1)[0]}}catch(e){}}else{}if(!random_device){random_device=function(){abort("random_device")}}FS.createDevice("/dev","random",random_device);FS.createDevice("/dev","urandom",random_device);FS.mkdir("/dev/shm");FS.mkdir("/dev/shm/tmp")},createSpecialDirectories:function(){FS.mkdir("/proc");FS.mkdir("/proc/self");FS.mkdir("/proc/self/fd");FS.mount({mount:function(){var node=FS.createNode("/proc/self","fd",16384|511,73);node.node_ops={lookup:function(parent,name){var fd=+name;var stream=FS.getStream(fd);if(!stream)throw new FS.ErrnoError(8);var ret={parent:null,mount:{mountpoint:"fake"},node_ops:{readlink:function(){return stream.path}}};ret.parent=ret;return ret}};return node}},{},"/proc/self/fd")},createStandardStreams:function(){if(Module["stdin"]){FS.createDevice("/dev","stdin",Module["stdin"])}else{FS.symlink("/dev/tty","/dev/stdin")}if(Module["stdout"]){FS.createDevice("/dev","stdout",null,Module["stdout"])}else{FS.symlink("/dev/tty","/dev/stdout")}if(Module["stderr"]){FS.createDevice("/dev","stderr",null,Module["stderr"])}else{FS.symlink("/dev/tty1","/dev/stderr")}var stdin=FS.open("/dev/stdin","r");var stdout=FS.open("/dev/stdout","w");var stderr=FS.open("/dev/stderr","w")},ensureErrnoError:function(){if(FS.ErrnoError)return;FS.ErrnoError=function ErrnoError(errno,node){this.node=node;this.setErrno=function(errno){this.errno=errno};this.setErrno(errno);this.message="FS error"};FS.ErrnoError.prototype=new Error;FS.ErrnoError.prototype.constructor=FS.ErrnoError;[44].forEach(function(code){FS.genericErrors[code]=new FS.ErrnoError(code);FS.genericErrors[code].stack="<generic error, no stack>"})},staticInit:function(){FS.ensureErrnoError();FS.nameTable=new Array(4096);FS.mount(MEMFS,{},"/");FS.createDefaultDirectories();FS.createDefaultDevices();FS.createSpecialDirectories();FS.filesystems={"MEMFS":MEMFS}},init:function(input,output,error){FS.init.initialized=true;FS.ensureErrnoError();Module["stdin"]=input||Module["stdin"];Module["stdout"]=output||Module["stdout"];Module["stderr"]=error||Module["stderr"];FS.createStandardStreams()},quit:function(){FS.init.initialized=false;var fflush=Module["_fflush"];if(fflush)fflush(0);for(var i=0;i<FS.streams.length;i++){var stream=FS.streams[i];if(!stream){continue}FS.close(stream)}},getMode:function(canRead,canWrite){var mode=0;if(canRead)mode|=292|73;if(canWrite)mode|=146;return mode},joinPath:function(parts,forceRelative){var path=PATH.join.apply(null,parts);if(forceRelative&&path[0]=="/")path=path.substr(1);return path},absolutePath:function(relative,base){return PATH_FS.resolve(base,relative)},standardizePath:function(path){return PATH.normalize(path)},findObject:function(path,dontResolveLastLink){var ret=FS.analyzePath(path,dontResolveLastLink);if(ret.exists){return ret.object}else{setErrNo(ret.error);return null}},analyzePath:function(path,dontResolveLastLink){try{var lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});path=lookup.path}catch(e){}var ret={isRoot:false,exists:false,error:0,name:null,path:null,object:null,parentExists:false,parentPath:null,parentObject:null};try{var lookup=FS.lookupPath(path,{parent:true});ret.parentExists=true;ret.parentPath=lookup.path;ret.parentObject=lookup.node;ret.name=PATH.basename(path);lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});ret.exists=true;ret.path=lookup.path;ret.object=lookup.node;ret.name=lookup.node.name;ret.isRoot=lookup.path==="/"}catch(e){ret.error=e.errno}return ret},createFolder:function(parent,name,canRead,canWrite){var path=PATH.join2(typeof parent==="string"?parent:FS.getPath(parent),name);var mode=FS.getMode(canRead,canWrite);return FS.mkdir(path,mode)},createPath:function(parent,path,canRead,canWrite){parent=typeof parent==="string"?parent:FS.getPath(parent);var parts=path.split("/").reverse();while(parts.length){var part=parts.pop();if(!part)continue;var current=PATH.join2(parent,part);try{FS.mkdir(current)}catch(e){}parent=current}return current},createFile:function(parent,name,properties,canRead,canWrite){var path=PATH.join2(typeof parent==="string"?parent:FS.getPath(parent),name);var mode=FS.getMode(canRead,canWrite);return FS.create(path,mode)},createDataFile:function(parent,name,data,canRead,canWrite,canOwn){var path=name?PATH.join2(typeof parent==="string"?parent:FS.getPath(parent),name):parent;var mode=FS.getMode(canRead,canWrite);var node=FS.create(path,mode);if(data){if(typeof data==="string"){var arr=new Array(data.length);for(var i=0,len=data.length;i<len;++i)arr[i]=data.charCodeAt(i);data=arr}FS.chmod(node,mode|146);var stream=FS.open(node,"w");FS.write(stream,data,0,data.length,0,canOwn);FS.close(stream);FS.chmod(node,mode)}return node},createDevice:function(parent,name,input,output){var path=PATH.join2(typeof parent==="string"?parent:FS.getPath(parent),name);var mode=FS.getMode(!!input,!!output);if(!FS.createDevice.major)FS.createDevice.major=64;var dev=FS.makedev(FS.createDevice.major++,0);FS.registerDevice(dev,{open:function(stream){stream.seekable=false},close:function(stream){if(output&&output.buffer&&output.buffer.length){output(10)}},read:function(stream,buffer,offset,length,pos){var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=input()}catch(e){throw new FS.ErrnoError(29)}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(6)}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result}if(bytesRead){stream.node.timestamp=Date.now()}return bytesRead},write:function(stream,buffer,offset,length,pos){for(var i=0;i<length;i++){try{output(buffer[offset+i])}catch(e){throw new FS.ErrnoError(29)}}if(length){stream.node.timestamp=Date.now()}return i}});return FS.mkdev(path,mode,dev)},createLink:function(parent,name,target,canRead,canWrite){var path=PATH.join2(typeof parent==="string"?parent:FS.getPath(parent),name);return FS.symlink(target,path)},forceLoadFile:function(obj){if(obj.isDevice||obj.isFolder||obj.link||obj.contents)return true;var success=true;if(typeof XMLHttpRequest!=="undefined"){throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.")}else if(read_){try{obj.contents=intArrayFromString(read_(obj.url),true);obj.usedBytes=obj.contents.length}catch(e){success=false}}else{throw new Error("Cannot load without read() or XMLHttpRequest.")}if(!success)setErrNo(29);return success},createLazyFile:function(parent,name,url,canRead,canWrite){function LazyUint8Array(){this.lengthKnown=false;this.chunks=[]}LazyUint8Array.prototype.get=function LazyUint8Array_get(idx){if(idx>this.length-1||idx<0){return undefined}var chunkOffset=idx%this.chunkSize;var chunkNum=idx/this.chunkSize|0;return this.getter(chunkNum)[chunkOffset]};LazyUint8Array.prototype.setDataGetter=function LazyUint8Array_setDataGetter(getter){this.getter=getter};LazyUint8Array.prototype.cacheLength=function LazyUint8Array_cacheLength(){var xhr=new XMLHttpRequest;xhr.open("HEAD",url,false);xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error("Couldn't load "+url+". Status: "+xhr.status);var datalength=Number(xhr.getResponseHeader("Content-length"));var header;var hasByteServing=(header=xhr.getResponseHeader("Accept-Ranges"))&&header==="bytes";var usesGzip=(header=xhr.getResponseHeader("Content-Encoding"))&&header==="gzip";var chunkSize=1024*1024;if(!hasByteServing)chunkSize=datalength;var doXHR=function(from,to){if(from>to)throw new Error("invalid range ("+from+", "+to+") or no bytes requested!");if(to>datalength-1)throw new Error("only "+datalength+" bytes available! programmer error!");var xhr=new XMLHttpRequest;xhr.open("GET",url,false);if(datalength!==chunkSize)xhr.setRequestHeader("Range","bytes="+from+"-"+to);if(typeof Uint8Array!="undefined")xhr.responseType="arraybuffer";if(xhr.overrideMimeType){xhr.overrideMimeType("text/plain; charset=x-user-defined")}xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error("Couldn't load "+url+". Status: "+xhr.status);if(xhr.response!==undefined){return new Uint8Array(xhr.response||[])}else{return intArrayFromString(xhr.responseText||"",true)}};var lazyArray=this;lazyArray.setDataGetter(function(chunkNum){var start=chunkNum*chunkSize;var end=(chunkNum+1)*chunkSize-1;end=Math.min(end,datalength-1);if(typeof lazyArray.chunks[chunkNum]==="undefined"){lazyArray.chunks[chunkNum]=doXHR(start,end)}if(typeof lazyArray.chunks[chunkNum]==="undefined")throw new Error("doXHR failed!");return lazyArray.chunks[chunkNum]});if(usesGzip||!datalength){chunkSize=datalength=1;datalength=this.getter(0).length;chunkSize=datalength;out("LazyFiles on gzip forces download of the whole file when length is accessed")}this._length=datalength;this._chunkSize=chunkSize;this.lengthKnown=true};if(typeof XMLHttpRequest!=="undefined"){if(!ENVIRONMENT_IS_WORKER)throw"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";var lazyArray=new LazyUint8Array;Object.defineProperties(lazyArray,{length:{get:function(){if(!this.lengthKnown){this.cacheLength()}return this._length}},chunkSize:{get:function(){if(!this.lengthKnown){this.cacheLength()}return this._chunkSize}}});var properties={isDevice:false,contents:lazyArray}}else{var properties={isDevice:false,url:url}}var node=FS.createFile(parent,name,properties,canRead,canWrite);if(properties.contents){node.contents=properties.contents}else if(properties.url){node.contents=null;node.url=properties.url}Object.defineProperties(node,{usedBytes:{get:function(){return this.contents.length}}});var stream_ops={};var keys=Object.keys(node.stream_ops);keys.forEach(function(key){var fn=node.stream_ops[key];stream_ops[key]=function forceLoadLazyFile(){if(!FS.forceLoadFile(node)){throw new FS.ErrnoError(29)}return fn.apply(null,arguments)}});stream_ops.read=function stream_ops_read(stream,buffer,offset,length,position){if(!FS.forceLoadFile(node)){throw new FS.ErrnoError(29)}var contents=stream.node.contents;if(position>=contents.length)return 0;var size=Math.min(contents.length-position,length);if(contents.slice){for(var i=0;i<size;i++){buffer[offset+i]=contents[position+i]}}else{for(var i=0;i<size;i++){buffer[offset+i]=contents.get(position+i)}}return size};node.stream_ops=stream_ops;return node},createPreloadedFile:function(parent,name,url,canRead,canWrite,onload,onerror,dontCreateFile,canOwn,preFinish){Browser.init();var fullname=name?PATH_FS.resolve(PATH.join2(parent,name)):parent;var dep=getUniqueRunDependency("cp "+fullname);function processData(byteArray){function finish(byteArray){if(preFinish)preFinish();if(!dontCreateFile){FS.createDataFile(parent,name,byteArray,canRead,canWrite,canOwn)}if(onload)onload();removeRunDependency(dep)}var handled=false;Module["preloadPlugins"].forEach(function(plugin){if(handled)return;if(plugin["canHandle"](fullname)){plugin["handle"](byteArray,fullname,finish,function(){if(onerror)onerror();removeRunDependency(dep)});handled=true}});if(!handled)finish(byteArray)}addRunDependency(dep);if(typeof url=="string"){Browser.asyncLoad(url,function(byteArray){processData(byteArray)},onerror)}else{processData(url)}},indexedDB:function(){return window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB},DB_NAME:function(){return"EM_FS_"+window.location.pathname},DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:function(paths,onload,onerror){onload=onload||function(){};onerror=onerror||function(){};var indexedDB=FS.indexedDB();try{var openRequest=indexedDB.open(FS.DB_NAME(),FS.DB_VERSION)}catch(e){return onerror(e)}openRequest.onupgradeneeded=function openRequest_onupgradeneeded(){out("creating db");var db=openRequest.result;db.createObjectStore(FS.DB_STORE_NAME)};openRequest.onsuccess=function openRequest_onsuccess(){var db=openRequest.result;var transaction=db.transaction([FS.DB_STORE_NAME],"readwrite");var files=transaction.objectStore(FS.DB_STORE_NAME);var ok=0,fail=0,total=paths.length;function finish(){if(fail==0)onload();else onerror()}paths.forEach(function(path){var putRequest=files.put(FS.analyzePath(path).object.contents,path);putRequest.onsuccess=function putRequest_onsuccess(){ok++;if(ok+fail==total)finish()};putRequest.onerror=function putRequest_onerror(){fail++;if(ok+fail==total)finish()}});transaction.onerror=onerror};openRequest.onerror=onerror},loadFilesFromDB:function(paths,onload,onerror){onload=onload||function(){};onerror=onerror||function(){};var indexedDB=FS.indexedDB();try{var openRequest=indexedDB.open(FS.DB_NAME(),FS.DB_VERSION)}catch(e){return onerror(e)}openRequest.onupgradeneeded=onerror;openRequest.onsuccess=function openRequest_onsuccess(){var db=openRequest.result;try{var transaction=db.transaction([FS.DB_STORE_NAME],"readonly")}catch(e){onerror(e);return}var files=transaction.objectStore(FS.DB_STORE_NAME);var ok=0,fail=0,total=paths.length;function finish(){if(fail==0)onload();else onerror()}paths.forEach(function(path){var getRequest=files.get(path);getRequest.onsuccess=function getRequest_onsuccess(){if(FS.analyzePath(path).exists){FS.unlink(path)}FS.createDataFile(PATH.dirname(path),PATH.basename(path),getRequest.result,true,true,true);ok++;if(ok+fail==total)finish()};getRequest.onerror=function getRequest_onerror(){fail++;if(ok+fail==total)finish()}});transaction.onerror=onerror};openRequest.onerror=onerror}};var SYSCALLS={mappings:{},DEFAULT_POLLMASK:5,umask:511,calculateAt:function(dirfd,path){if(path[0]!=="/"){var dir;if(dirfd===-100){dir=FS.cwd()}else{var dirstream=FS.getStream(dirfd);if(!dirstream)throw new FS.ErrnoError(8);dir=dirstream.path}path=PATH.join2(dir,path)}return path},doStat:function(func,path,buf){try{var stat=func(path)}catch(e){if(e&&e.node&&PATH.normalize(path)!==PATH.normalize(FS.getPath(e.node))){return-54}throw e}HEAP32[buf>>2]=stat.dev;HEAP32[buf+4>>2]=0;HEAP32[buf+8>>2]=stat.ino;HEAP32[buf+12>>2]=stat.mode;HEAP32[buf+16>>2]=stat.nlink;HEAP32[buf+20>>2]=stat.uid;HEAP32[buf+24>>2]=stat.gid;HEAP32[buf+28>>2]=stat.rdev;HEAP32[buf+32>>2]=0;tempI64=[stat.size>>>0,(tempDouble=stat.size,+Math_abs(tempDouble)>=1?tempDouble>0?(Math_min(+Math_floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math_ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[buf+40>>2]=tempI64[0],HEAP32[buf+44>>2]=tempI64[1];HEAP32[buf+48>>2]=4096;HEAP32[buf+52>>2]=stat.blocks;HEAP32[buf+56>>2]=stat.atime.getTime()/1e3|0;HEAP32[buf+60>>2]=0;HEAP32[buf+64>>2]=stat.mtime.getTime()/1e3|0;HEAP32[buf+68>>2]=0;HEAP32[buf+72>>2]=stat.ctime.getTime()/1e3|0;HEAP32[buf+76>>2]=0;tempI64=[stat.ino>>>0,(tempDouble=stat.ino,+Math_abs(tempDouble)>=1?tempDouble>0?(Math_min(+Math_floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math_ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[buf+80>>2]=tempI64[0],HEAP32[buf+84>>2]=tempI64[1];return 0},doMsync:function(addr,stream,len,flags,offset){var buffer=HEAPU8.slice(addr,addr+len);FS.msync(stream,buffer,offset,len,flags)},doMkdir:function(path,mode){path=PATH.normalize(path);if(path[path.length-1]==="/")path=path.substr(0,path.length-1);FS.mkdir(path,mode,0);return 0},doMknod:function(path,mode,dev){switch(mode&61440){case 32768:case 8192:case 24576:case 4096:case 49152:break;default:return-28}FS.mknod(path,mode,dev);return 0},doReadlink:function(path,buf,bufsize){if(bufsize<=0)return-28;var ret=FS.readlink(path);var len=Math.min(bufsize,lengthBytesUTF8(ret));var endChar=HEAP8[buf+len];stringToUTF8(ret,buf,bufsize+1);HEAP8[buf+len]=endChar;return len},doAccess:function(path,amode){if(amode&~7){return-28}var node;var lookup=FS.lookupPath(path,{follow:true});node=lookup.node;if(!node){return-44}var perms="";if(amode&4)perms+="r";if(amode&2)perms+="w";if(amode&1)perms+="x";if(perms&&FS.nodePermissions(node,perms)){return-2}return 0},doDup:function(path,flags,suggestFD){var suggest=FS.getStream(suggestFD);if(suggest)FS.close(suggest);return FS.open(path,flags,0,suggestFD,suggestFD).fd},doReadv:function(stream,iov,iovcnt,offset){var ret=0;for(var i=0;i<iovcnt;i++){var ptr=HEAP32[iov+i*8>>2];var len=HEAP32[iov+(i*8+4)>>2];var curr=FS.read(stream,HEAP8,ptr,len,offset);if(curr<0)return-1;ret+=curr;if(curr<len)break}return ret},doWritev:function(stream,iov,iovcnt,offset){var ret=0;for(var i=0;i<iovcnt;i++){var ptr=HEAP32[iov+i*8>>2];var len=HEAP32[iov+(i*8+4)>>2];var curr=FS.write(stream,HEAP8,ptr,len,offset);if(curr<0)return-1;ret+=curr}return ret},varargs:undefined,get:function(){SYSCALLS.varargs+=4;var ret=HEAP32[SYSCALLS.varargs-4>>2];return ret},getStr:function(ptr){var ret=UTF8ToString(ptr);return ret},getStreamFromFD:function(fd){var stream=FS.getStream(fd);if(!stream)throw new FS.ErrnoError(8);return stream},get64:function(low,high){return low}};function ___sys_fcntl64(fd,cmd,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(fd);switch(cmd){case 0:{var arg=SYSCALLS.get();if(arg<0){return-28}var newStream;newStream=FS.open(stream.path,stream.flags,0,arg);return newStream.fd}case 1:case 2:return 0;case 3:return stream.flags;case 4:{var arg=SYSCALLS.get();stream.flags|=arg;return 0}case 12:{var arg=SYSCALLS.get();var offset=0;HEAP16[arg+offset>>1]=2;return 0}case 13:case 14:return 0;case 16:case 8:return-28;case 9:setErrNo(28);return-1;default:{return-28}}}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___sys_fstat64(fd,buf){try{var stream=SYSCALLS.getStreamFromFD(fd);return SYSCALLS.doStat(FS.stat,stream.path,buf)}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___sys_getpid(){return 42}function ___sys_getegid32(){return 0}function ___sys_getuid32(){return ___sys_getegid32()}function ___sys_ioctl(fd,op,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(fd);switch(op){case 21509:case 21505:{if(!stream.tty)return-59;return 0}case 21510:case 21511:case 21512:case 21506:case 21507:case 21508:{if(!stream.tty)return-59;return 0}case 21519:{if(!stream.tty)return-59;var argp=SYSCALLS.get();HEAP32[argp>>2]=0;return 0}case 21520:{if(!stream.tty)return-59;return-28}case 21531:{var argp=SYSCALLS.get();return FS.ioctl(stream,op,argp)}case 21523:{if(!stream.tty)return-59;return 0}case 21524:{if(!stream.tty)return-59;return 0}default:abort("bad ioctl syscall "+op)}}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function syscallMunmap(addr,len){if((addr|0)===-1||len===0){return-28}var info=SYSCALLS.mappings[addr];if(!info)return 0;if(len===info.len){var stream=FS.getStream(info.fd);if(info.prot&2){SYSCALLS.doMsync(addr,stream,len,info.flags,info.offset)}FS.munmap(stream);SYSCALLS.mappings[addr]=null;if(info.allocated){_free(info.malloc)}}return 0}function ___sys_munmap(addr,len){try{return syscallMunmap(addr,len)}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___sys_open(path,flags,varargs){SYSCALLS.varargs=varargs;try{var pathname=SYSCALLS.getStr(path);var mode=SYSCALLS.get();var stream=FS.open(pathname,flags,mode);return stream.fd}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___sys_read(fd,buf,count){try{var stream=SYSCALLS.getStreamFromFD(fd);return FS.read(stream,HEAP8,buf,count)}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}var ERRNO_CODES={EPERM:63,ENOENT:44,ESRCH:71,EINTR:27,EIO:29,ENXIO:60,E2BIG:1,ENOEXEC:45,EBADF:8,ECHILD:12,EAGAIN:6,EWOULDBLOCK:6,ENOMEM:48,EACCES:2,EFAULT:21,ENOTBLK:105,EBUSY:10,EEXIST:20,EXDEV:75,ENODEV:43,ENOTDIR:54,EISDIR:31,EINVAL:28,ENFILE:41,EMFILE:33,ENOTTY:59,ETXTBSY:74,EFBIG:22,ENOSPC:51,ESPIPE:70,EROFS:69,EMLINK:34,EPIPE:64,EDOM:18,ERANGE:68,ENOMSG:49,EIDRM:24,ECHRNG:106,EL2NSYNC:156,EL3HLT:107,EL3RST:108,ELNRNG:109,EUNATCH:110,ENOCSI:111,EL2HLT:112,EDEADLK:16,ENOLCK:46,EBADE:113,EBADR:114,EXFULL:115,ENOANO:104,EBADRQC:103,EBADSLT:102,EDEADLOCK:16,EBFONT:101,ENOSTR:100,ENODATA:116,ETIME:117,ENOSR:118,ENONET:119,ENOPKG:120,EREMOTE:121,ENOLINK:47,EADV:122,ESRMNT:123,ECOMM:124,EPROTO:65,EMULTIHOP:36,EDOTDOT:125,EBADMSG:9,ENOTUNIQ:126,EBADFD:127,EREMCHG:128,ELIBACC:129,ELIBBAD:130,ELIBSCN:131,ELIBMAX:132,ELIBEXEC:133,ENOSYS:52,ENOTEMPTY:55,ENAMETOOLONG:37,ELOOP:32,EOPNOTSUPP:138,EPFNOSUPPORT:139,ECONNRESET:15,ENOBUFS:42,EAFNOSUPPORT:5,EPROTOTYPE:67,ENOTSOCK:57,ENOPROTOOPT:50,ESHUTDOWN:140,ECONNREFUSED:14,EADDRINUSE:3,ECONNABORTED:13,ENETUNREACH:40,ENETDOWN:38,ETIMEDOUT:73,EHOSTDOWN:142,EHOSTUNREACH:23,EINPROGRESS:26,EALREADY:7,EDESTADDRREQ:17,EMSGSIZE:35,EPROTONOSUPPORT:66,ESOCKTNOSUPPORT:137,EADDRNOTAVAIL:4,ENETRESET:39,EISCONN:30,ENOTCONN:53,ETOOMANYREFS:141,EUSERS:136,EDQUOT:19,ESTALE:72,ENOTSUP:138,ENOMEDIUM:148,EILSEQ:25,EOVERFLOW:61,ECANCELED:11,ENOTRECOVERABLE:56,EOWNERDEAD:62,ESTRPIPE:135};var SOCKFS={mount:function(mount){Module["websocket"]=Module["websocket"]&&"object"===typeof Module["websocket"]?Module["websocket"]:{};Module["websocket"]._callbacks={};Module["websocket"]["on"]=function(event,callback){if("function"===typeof callback){this._callbacks[event]=callback}return this};Module["websocket"].emit=function(event,param){if("function"===typeof this._callbacks[event]){this._callbacks[event].call(this,param)}};return FS.createNode(null,"/",16384|511,0)},createSocket:function(family,type,protocol){var streaming=type==1;if(protocol){assert(streaming==(protocol==6))}var sock={family:family,type:type,protocol:protocol,server:null,error:null,peers:{},pending:[],recv_queue:[],sock_ops:SOCKFS.websocket_sock_ops};var name=SOCKFS.nextname();var node=FS.createNode(SOCKFS.root,name,49152,0);node.sock=sock;var stream=FS.createStream({path:name,node:node,flags:FS.modeStringToFlags("r+"),seekable:false,stream_ops:SOCKFS.stream_ops});sock.stream=stream;return sock},getSocket:function(fd){var stream=FS.getStream(fd);if(!stream||!FS.isSocket(stream.node.mode)){return null}return stream.node.sock},stream_ops:{poll:function(stream){var sock=stream.node.sock;return sock.sock_ops.poll(sock)},ioctl:function(stream,request,varargs){var sock=stream.node.sock;return sock.sock_ops.ioctl(sock,request,varargs)},read:function(stream,buffer,offset,length,position){var sock=stream.node.sock;var msg=sock.sock_ops.recvmsg(sock,length);if(!msg){return 0}buffer.set(msg.buffer,offset);return msg.buffer.length},write:function(stream,buffer,offset,length,position){var sock=stream.node.sock;return sock.sock_ops.sendmsg(sock,buffer,offset,length)},close:function(stream){var sock=stream.node.sock;sock.sock_ops.close(sock)}},nextname:function(){if(!SOCKFS.nextname.current){SOCKFS.nextname.current=0}return"socket["+SOCKFS.nextname.current+++"]"},websocket_sock_ops:{createPeer:function(sock,addr,port){var ws;if(typeof addr==="object"){ws=addr;addr=null;port=null}if(ws){if(ws._socket){addr=ws._socket.remoteAddress;port=ws._socket.remotePort}else{var result=/ws[s]?:\/\/([^:]+):(\d+)/.exec(ws.url);if(!result){throw new Error("WebSocket URL must be in the format ws(s)://address:port")}addr=result[1];port=parseInt(result[2],10)}}else{try{var runtimeConfig=Module["websocket"]&&"object"===typeof Module["websocket"];var url="ws:#".replace("#","//");if(runtimeConfig){if("string"===typeof Module["websocket"]["url"]){url=Module["websocket"]["url"]}}if(url==="ws://"||url==="wss://"){var parts=addr.split("/");url=url+parts[0]+":"+port+"/"+parts.slice(1).join("/")}var subProtocols="binary";if(runtimeConfig){if("string"===typeof Module["websocket"]["subprotocol"]){subProtocols=Module["websocket"]["subprotocol"]}}var opts=undefined;if(subProtocols!=="null"){subProtocols=subProtocols.replace(/^ +| +$/g,"").split(/ *, */);opts=ENVIRONMENT_IS_NODE?{"protocol":subProtocols.toString()}:subProtocols}if(runtimeConfig&&null===Module["websocket"]["subprotocol"]){subProtocols="null";opts=undefined}var WebSocketConstructor;if(ENVIRONMENT_IS_NODE){WebSocketConstructor=require("ws")}else{WebSocketConstructor=WebSocket}ws=new WebSocketConstructor(url,opts);ws.binaryType="arraybuffer"}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EHOSTUNREACH)}}var peer={addr:addr,port:port,socket:ws,dgram_send_queue:[]};SOCKFS.websocket_sock_ops.addPeer(sock,peer);SOCKFS.websocket_sock_ops.handlePeerEvents(sock,peer);if(sock.type===2&&typeof sock.sport!=="undefined"){peer.dgram_send_queue.push(new Uint8Array([255,255,255,255,"p".charCodeAt(0),"o".charCodeAt(0),"r".charCodeAt(0),"t".charCodeAt(0),(sock.sport&65280)>>8,sock.sport&255]))}return peer},getPeer:function(sock,addr,port){return sock.peers[addr+":"+port]},addPeer:function(sock,peer){sock.peers[peer.addr+":"+peer.port]=peer},removePeer:function(sock,peer){delete sock.peers[peer.addr+":"+peer.port]},handlePeerEvents:function(sock,peer){var first=true;var handleOpen=function(){Module["websocket"].emit("open",sock.stream.fd);try{var queued=peer.dgram_send_queue.shift();while(queued){peer.socket.send(queued);queued=peer.dgram_send_queue.shift()}}catch(e){peer.socket.close()}};function handleMessage(data){if(typeof data==="string"){var encoder=new TextEncoder;data=encoder.encode(data)}else{assert(data.byteLength!==undefined);if(data.byteLength==0){return}else{data=new Uint8Array(data)}}var wasfirst=first;first=false;if(wasfirst&&data.length===10&&data[0]===255&&data[1]===255&&data[2]===255&&data[3]===255&&data[4]==="p".charCodeAt(0)&&data[5]==="o".charCodeAt(0)&&data[6]==="r".charCodeAt(0)&&data[7]==="t".charCodeAt(0)){var newport=data[8]<<8|data[9];SOCKFS.websocket_sock_ops.removePeer(sock,peer);peer.port=newport;SOCKFS.websocket_sock_ops.addPeer(sock,peer);return}sock.recv_queue.push({addr:peer.addr,port:peer.port,data:data});Module["websocket"].emit("message",sock.stream.fd)}if(ENVIRONMENT_IS_NODE){peer.socket.on("open",handleOpen);peer.socket.on("message",function(data,flags){if(!flags.binary){return}handleMessage(new Uint8Array(data).buffer)});peer.socket.on("close",function(){Module["websocket"].emit("close",sock.stream.fd)});peer.socket.on("error",function(error){sock.error=ERRNO_CODES.ECONNREFUSED;Module["websocket"].emit("error",[sock.stream.fd,sock.error,"ECONNREFUSED: Connection refused"])})}else{peer.socket.onopen=handleOpen;peer.socket.onclose=function(){Module["websocket"].emit("close",sock.stream.fd)};peer.socket.onmessage=function peer_socket_onmessage(event){handleMessage(event.data)};peer.socket.onerror=function(error){sock.error=ERRNO_CODES.ECONNREFUSED;Module["websocket"].emit("error",[sock.stream.fd,sock.error,"ECONNREFUSED: Connection refused"])}}},poll:function(sock){if(sock.type===1&&sock.server){return sock.pending.length?64|1:0}var mask=0;var dest=sock.type===1?SOCKFS.websocket_sock_ops.getPeer(sock,sock.daddr,sock.dport):null;if(sock.recv_queue.length||!dest||dest&&dest.socket.readyState===dest.socket.CLOSING||dest&&dest.socket.readyState===dest.socket.CLOSED){mask|=64|1}if(!dest||dest&&dest.socket.readyState===dest.socket.OPEN){mask|=4}if(dest&&dest.socket.readyState===dest.socket.CLOSING||dest&&dest.socket.readyState===dest.socket.CLOSED){mask|=16}return mask},ioctl:function(sock,request,arg){switch(request){case 21531:var bytes=0;if(sock.recv_queue.length){bytes=sock.recv_queue[0].data.length}HEAP32[arg>>2]=bytes;return 0;default:return ERRNO_CODES.EINVAL}},close:function(sock){if(sock.server){try{sock.server.close()}catch(e){}sock.server=null}var peers=Object.keys(sock.peers);for(var i=0;i<peers.length;i++){var peer=sock.peers[peers[i]];try{peer.socket.close()}catch(e){}SOCKFS.websocket_sock_ops.removePeer(sock,peer)}return 0},bind:function(sock,addr,port){if(typeof sock.saddr!=="undefined"||typeof sock.sport!=="undefined"){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}sock.saddr=addr;sock.sport=port;if(sock.type===2){if(sock.server){sock.server.close();sock.server=null}try{sock.sock_ops.listen(sock,0)}catch(e){if(!(e instanceof FS.ErrnoError))throw e;if(e.errno!==ERRNO_CODES.EOPNOTSUPP)throw e}}},connect:function(sock,addr,port){if(sock.server){throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP)}if(typeof sock.daddr!=="undefined"&&typeof sock.dport!=="undefined"){var dest=SOCKFS.websocket_sock_ops.getPeer(sock,sock.daddr,sock.dport);if(dest){if(dest.socket.readyState===dest.socket.CONNECTING){throw new FS.ErrnoError(ERRNO_CODES.EALREADY)}else{throw new FS.ErrnoError(ERRNO_CODES.EISCONN)}}}var peer=SOCKFS.websocket_sock_ops.createPeer(sock,addr,port);sock.daddr=peer.addr;sock.dport=peer.port;throw new FS.ErrnoError(ERRNO_CODES.EINPROGRESS)},listen:function(sock,backlog){if(!ENVIRONMENT_IS_NODE){throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP)}if(sock.server){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var WebSocketServer=require("ws").Server;var host=sock.saddr;sock.server=new WebSocketServer({host:host,port:sock.sport});Module["websocket"].emit("listen",sock.stream.fd);sock.server.on("connection",function(ws){if(sock.type===1){var newsock=SOCKFS.createSocket(sock.family,sock.type,sock.protocol);var peer=SOCKFS.websocket_sock_ops.createPeer(newsock,ws);newsock.daddr=peer.addr;newsock.dport=peer.port;sock.pending.push(newsock);Module["websocket"].emit("connection",newsock.stream.fd)}else{SOCKFS.websocket_sock_ops.createPeer(sock,ws);Module["websocket"].emit("connection",sock.stream.fd)}});sock.server.on("closed",function(){Module["websocket"].emit("close",sock.stream.fd);sock.server=null});sock.server.on("error",function(error){sock.error=ERRNO_CODES.EHOSTUNREACH;Module["websocket"].emit("error",[sock.stream.fd,sock.error,"EHOSTUNREACH: Host is unreachable"])})},accept:function(listensock){if(!listensock.server){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var newsock=listensock.pending.shift();newsock.stream.flags=listensock.stream.flags;return newsock},getname:function(sock,peer){var addr,port;if(peer){if(sock.daddr===undefined||sock.dport===undefined){throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN)}addr=sock.daddr;port=sock.dport}else{addr=sock.saddr||0;port=sock.sport||0}return{addr:addr,port:port}},sendmsg:function(sock,buffer,offset,length,addr,port){if(sock.type===2){if(addr===undefined||port===undefined){addr=sock.daddr;port=sock.dport}if(addr===undefined||port===undefined){throw new FS.ErrnoError(ERRNO_CODES.EDESTADDRREQ)}}else{addr=sock.daddr;port=sock.dport}var dest=SOCKFS.websocket_sock_ops.getPeer(sock,addr,port);if(sock.type===1){if(!dest||dest.socket.readyState===dest.socket.CLOSING||dest.socket.readyState===dest.socket.CLOSED){throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN)}else if(dest.socket.readyState===dest.socket.CONNECTING){throw new FS.ErrnoError(ERRNO_CODES.EAGAIN)}}if(ArrayBuffer.isView(buffer)){offset+=buffer.byteOffset;buffer=buffer.buffer}var data;data=buffer.slice(offset,offset+length);if(sock.type===2){if(!dest||dest.socket.readyState!==dest.socket.OPEN){if(!dest||dest.socket.readyState===dest.socket.CLOSING||dest.socket.readyState===dest.socket.CLOSED){dest=SOCKFS.websocket_sock_ops.createPeer(sock,addr,port)}dest.dgram_send_queue.push(data);return length}}try{dest.socket.send(data);return length}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}},recvmsg:function(sock,length){if(sock.type===1&&sock.server){throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN)}var queued=sock.recv_queue.shift();if(!queued){if(sock.type===1){var dest=SOCKFS.websocket_sock_ops.getPeer(sock,sock.daddr,sock.dport);if(!dest){throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN)}else if(dest.socket.readyState===dest.socket.CLOSING||dest.socket.readyState===dest.socket.CLOSED){return null}else{throw new FS.ErrnoError(ERRNO_CODES.EAGAIN)}}else{throw new FS.ErrnoError(ERRNO_CODES.EAGAIN)}}var queuedLength=queued.data.byteLength||queued.data.length;var queuedOffset=queued.data.byteOffset||0;var queuedBuffer=queued.data.buffer||queued.data;var bytesRead=Math.min(length,queuedLength);var res={buffer:new Uint8Array(queuedBuffer,queuedOffset,bytesRead),addr:queued.addr,port:queued.port};if(sock.type===1&&bytesRead<queuedLength){var bytesRemaining=queuedLength-bytesRead;queued.data=new Uint8Array(queuedBuffer,queuedOffset+bytesRead,bytesRemaining);sock.recv_queue.unshift(queued)}return res}}};function __inet_pton4_raw(str){var b=str.split(".");for(var i=0;i<4;i++){var tmp=Number(b[i]);if(isNaN(tmp))return null;b[i]=tmp}return(b[0]|b[1]<<8|b[2]<<16|b[3]<<24)>>>0}function jstoi_q(str){return parseInt(str)}function __inet_pton6_raw(str){var words;var w,offset,z;var valid6regx=/^((?=.*::)(?!.*::.+::)(::)?([\dA-F]{1,4}:(:|\b)|){5}|([\dA-F]{1,4}:){6})((([\dA-F]{1,4}((?!\3)::|:\b|$))|(?!\2\3)){2}|(((2[0-4]|1\d|[1-9])?\d|25[0-5])\.?\b){4})$/i;var parts=[];if(!valid6regx.test(str)){return null}if(str==="::"){return[0,0,0,0,0,0,0,0]}if(str.indexOf("::")===0){str=str.replace("::","Z:")}else{str=str.replace("::",":Z:")}if(str.indexOf(".")>0){str=str.replace(new RegExp("[.]","g"),":");words=str.split(":");words[words.length-4]=jstoi_q(words[words.length-4])+jstoi_q(words[words.length-3])*256;words[words.length-3]=jstoi_q(words[words.length-2])+jstoi_q(words[words.length-1])*256;words=words.slice(0,words.length-2)}else{words=str.split(":")}offset=0;z=0;for(w=0;w<words.length;w++){if(typeof words[w]==="string"){if(words[w]==="Z"){for(z=0;z<8-words.length+1;z++){parts[w+z]=0}offset=z-1}else{parts[w+offset]=_htons(parseInt(words[w],16))}}else{parts[w+offset]=words[w]}}return[parts[1]<<16|parts[0],parts[3]<<16|parts[2],parts[5]<<16|parts[4],parts[7]<<16|parts[6]]}var DNS={address_map:{id:1,addrs:{},names:{}},lookup_name:function(name){var res=__inet_pton4_raw(name);if(res!==null){return name}res=__inet_pton6_raw(name);if(res!==null){return name}var addr;if(DNS.address_map.addrs[name]){addr=DNS.address_map.addrs[name]}else{var id=DNS.address_map.id++;assert(id<65535,"exceeded max address mappings of 65535");addr="172.29."+(id&255)+"."+(id&65280);DNS.address_map.names[addr]=name;DNS.address_map.addrs[name]=addr}return addr},lookup_addr:function(addr){if(DNS.address_map.names[addr]){return DNS.address_map.names[addr]}return null}};function __inet_ntop4_raw(addr){return(addr&255)+"."+(addr>>8&255)+"."+(addr>>16&255)+"."+(addr>>24&255)}function __inet_ntop6_raw(ints){var str="";var word=0;var longest=0;var lastzero=0;var zstart=0;var len=0;var i=0;var parts=[ints[0]&65535,ints[0]>>16,ints[1]&65535,ints[1]>>16,ints[2]&65535,ints[2]>>16,ints[3]&65535,ints[3]>>16];var hasipv4=true;var v4part="";for(i=0;i<5;i++){if(parts[i]!==0){hasipv4=false;break}}if(hasipv4){v4part=__inet_ntop4_raw(parts[6]|parts[7]<<16);if(parts[5]===-1){str="::ffff:";str+=v4part;return str}if(parts[5]===0){str="::";if(v4part==="0.0.0.0")v4part="";if(v4part==="0.0.0.1")v4part="1";str+=v4part;return str}}for(word=0;word<8;word++){if(parts[word]===0){if(word-lastzero>1){len=0}lastzero=word;len++}if(len>longest){longest=len;zstart=word-longest+1}}for(word=0;word<8;word++){if(longest>1){if(parts[word]===0&&word>=zstart&&word<zstart+longest){if(word===zstart){str+=":";if(zstart===0)str+=":"}continue}}str+=Number(_ntohs(parts[word]&65535)).toString(16);str+=word<7?":":""}return str}function __read_sockaddr(sa,salen){var family=HEAP16[sa>>1];var port=_ntohs(HEAPU16[sa+2>>1]);var addr;switch(family){case 2:if(salen!==16){return{errno:28}}addr=HEAP32[sa+4>>2];addr=__inet_ntop4_raw(addr);break;case 10:if(salen!==28){return{errno:28}}addr=[HEAP32[sa+8>>2],HEAP32[sa+12>>2],HEAP32[sa+16>>2],HEAP32[sa+20>>2]];addr=__inet_ntop6_raw(addr);break;default:return{errno:5}}return{family:family,addr:addr,port:port}}function __write_sockaddr(sa,family,addr,port){switch(family){case 2:addr=__inet_pton4_raw(addr);HEAP16[sa>>1]=family;HEAP32[sa+4>>2]=addr;HEAP16[sa+2>>1]=_htons(port);break;case 10:addr=__inet_pton6_raw(addr);HEAP32[sa>>2]=family;HEAP32[sa+8>>2]=addr[0];HEAP32[sa+12>>2]=addr[1];HEAP32[sa+16>>2]=addr[2];HEAP32[sa+20>>2]=addr[3];HEAP16[sa+2>>1]=_htons(port);HEAP32[sa+4>>2]=0;HEAP32[sa+24>>2]=0;break;default:return{errno:5}}return{}}function ___sys_socketcall(call,socketvararg){try{SYSCALLS.varargs=socketvararg;var getSocketFromFD=function(){var socket=SOCKFS.getSocket(SYSCALLS.get());if(!socket)throw new FS.ErrnoError(8);return socket};var getSocketAddress=function(allowNull){var addrp=SYSCALLS.get(),addrlen=SYSCALLS.get();if(allowNull&&addrp===0)return null;var info=__read_sockaddr(addrp,addrlen);if(info.errno)throw new FS.ErrnoError(info.errno);info.addr=DNS.lookup_addr(info.addr)||info.addr;return info};switch(call){case 1:{var domain=SYSCALLS.get(),type=SYSCALLS.get(),protocol=SYSCALLS.get();var sock=SOCKFS.createSocket(domain,type,protocol);return sock.stream.fd}case 2:{var sock=getSocketFromFD(),info=getSocketAddress();sock.sock_ops.bind(sock,info.addr,info.port);return 0}case 3:{var sock=getSocketFromFD(),info=getSocketAddress();sock.sock_ops.connect(sock,info.addr,info.port);return 0}case 4:{var sock=getSocketFromFD(),backlog=SYSCALLS.get();sock.sock_ops.listen(sock,backlog);return 0}case 5:{var sock=getSocketFromFD(),addr=SYSCALLS.get(),addrlen=SYSCALLS.get();var newsock=sock.sock_ops.accept(sock);if(addr){var res=__write_sockaddr(addr,newsock.family,DNS.lookup_name(newsock.daddr),newsock.dport)}return newsock.stream.fd}case 6:{var sock=getSocketFromFD(),addr=SYSCALLS.get(),addrlen=SYSCALLS.get();var res=__write_sockaddr(addr,sock.family,DNS.lookup_name(sock.saddr||"0.0.0.0"),sock.sport);return 0}case 7:{var sock=getSocketFromFD(),addr=SYSCALLS.get(),addrlen=SYSCALLS.get();if(!sock.daddr){return-53}var res=__write_sockaddr(addr,sock.family,DNS.lookup_name(sock.daddr),sock.dport);return 0}case 11:{var sock=getSocketFromFD(),message=SYSCALLS.get(),length=SYSCALLS.get(),flags=SYSCALLS.get(),dest=getSocketAddress(true);if(!dest){return FS.write(sock.stream,HEAP8,message,length)}else{return sock.sock_ops.sendmsg(sock,HEAP8,message,length,dest.addr,dest.port)}}case 12:{var sock=getSocketFromFD(),buf=SYSCALLS.get(),len=SYSCALLS.get(),flags=SYSCALLS.get(),addr=SYSCALLS.get(),addrlen=SYSCALLS.get();var msg=sock.sock_ops.recvmsg(sock,len);if(!msg)return 0;if(addr){var res=__write_sockaddr(addr,sock.family,DNS.lookup_name(msg.addr),msg.port)}HEAPU8.set(msg.buffer,buf);return msg.buffer.byteLength}case 14:{return-50}case 15:{var sock=getSocketFromFD(),level=SYSCALLS.get(),optname=SYSCALLS.get(),optval=SYSCALLS.get(),optlen=SYSCALLS.get();if(level===1){if(optname===4){HEAP32[optval>>2]=sock.error;HEAP32[optlen>>2]=4;sock.error=null;return 0}}return-50}case 16:{var sock=getSocketFromFD(),message=SYSCALLS.get(),flags=SYSCALLS.get();var iov=HEAP32[message+8>>2];var num=HEAP32[message+12>>2];var addr,port;var name=HEAP32[message>>2];var namelen=HEAP32[message+4>>2];if(name){var info=__read_sockaddr(name,namelen);if(info.errno)return-info.errno;port=info.port;addr=DNS.lookup_addr(info.addr)||info.addr}var total=0;for(var i=0;i<num;i++){total+=HEAP32[iov+(8*i+4)>>2]}var view=new Uint8Array(total);var offset=0;for(var i=0;i<num;i++){var iovbase=HEAP32[iov+(8*i+0)>>2];var iovlen=HEAP32[iov+(8*i+4)>>2];for(var j=0;j<iovlen;j++){view[offset++]=HEAP8[iovbase+j>>0]}}return sock.sock_ops.sendmsg(sock,view,0,total,addr,port)}case 17:{var sock=getSocketFromFD(),message=SYSCALLS.get(),flags=SYSCALLS.get();var iov=HEAP32[message+8>>2];var num=HEAP32[message+12>>2];var total=0;for(var i=0;i<num;i++){total+=HEAP32[iov+(8*i+4)>>2]}var msg=sock.sock_ops.recvmsg(sock,total);if(!msg)return 0;var name=HEAP32[message>>2];if(name){var res=__write_sockaddr(name,sock.family,DNS.lookup_name(msg.addr),msg.port)}var bytesRead=0;var bytesRemaining=msg.buffer.byteLength;for(var i=0;bytesRemaining>0&&i<num;i++){var iovbase=HEAP32[iov+(8*i+0)>>2];var iovlen=HEAP32[iov+(8*i+4)>>2];if(!iovlen){continue}var length=Math.min(iovlen,bytesRemaining);var buf=msg.buffer.subarray(bytesRead,bytesRead+length);HEAPU8.set(buf,iovbase+bytesRead);bytesRead+=length;bytesRemaining-=length}return bytesRead}default:{return-52}}}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___sys_stat64(path,buf){try{path=SYSCALLS.getStr(path);return SYSCALLS.doStat(FS.stat,path,buf)}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function _abort(){abort()}var _emscripten_get_now;if(ENVIRONMENT_IS_NODE){_emscripten_get_now=function(){var t=process["hrtime"]();return t[0]*1e3+t[1]/1e6}}else if(typeof dateNow!=="undefined"){_emscripten_get_now=dateNow}else _emscripten_get_now=function(){return performance.now()};var _emscripten_get_now_is_monotonic=true;function _clock_gettime(clk_id,tp){var now;if(clk_id===0){now=Date.now()}else if((clk_id===1||clk_id===4)&&_emscripten_get_now_is_monotonic){now=_emscripten_get_now()}else{setErrNo(28);return-1}HEAP32[tp>>2]=now/1e3|0;HEAP32[tp+4>>2]=now%1e3*1e3*1e3|0;return 0}function _emscripten_get_sbrk_ptr(){return 280656}function _emscripten_memcpy_big(dest,src,num){HEAPU8.copyWithin(dest,src,src+num)}function _emscripten_get_heap_size(){return HEAPU8.length}function emscripten_realloc_buffer(size){try{wasmMemory.grow(size-buffer.byteLength+65535>>>16);updateGlobalBufferAndViews(wasmMemory.buffer);return 1}catch(e){}}function _emscripten_resize_heap(requestedSize){requestedSize=requestedSize>>>0;var oldSize=_emscripten_get_heap_size();var PAGE_MULTIPLE=65536;var maxHeapSize=2147483648;if(requestedSize>maxHeapSize){return false}var minHeapSize=16777216;for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(minHeapSize,requestedSize,overGrownHeapSize),PAGE_MULTIPLE));var replacement=emscripten_realloc_buffer(newSize);if(replacement){return true}}return false}var ENV={};function __getExecutableName(){return thisProgram||"./this.program"}function getEnvStrings(){if(!getEnvStrings.strings){var env={"USER":"web_user","LOGNAME":"web_user","PATH":"/","PWD":"/","HOME":"/home/web_user","LANG":(typeof navigator==="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8","_":__getExecutableName()};for(var x in ENV){env[x]=ENV[x]}var strings=[];for(var x in env){strings.push(x+"="+env[x])}getEnvStrings.strings=strings}return getEnvStrings.strings}function _environ_get(__environ,environ_buf){var bufSize=0;getEnvStrings().forEach(function(string,i){var ptr=environ_buf+bufSize;HEAP32[__environ+i*4>>2]=ptr;writeAsciiToMemory(string,ptr);bufSize+=string.length+1});return 0}function _environ_sizes_get(penviron_count,penviron_buf_size){var strings=getEnvStrings();HEAP32[penviron_count>>2]=strings.length;var bufSize=0;strings.forEach(function(string){bufSize+=string.length+1});HEAP32[penviron_buf_size>>2]=bufSize;return 0}function _fd_close(fd){try{var stream=SYSCALLS.getStreamFromFD(fd);FS.close(stream);return 0}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return e.errno}}function _fd_fdstat_get(fd,pbuf){try{var stream=SYSCALLS.getStreamFromFD(fd);var type=stream.tty?2:FS.isDir(stream.mode)?3:FS.isLink(stream.mode)?7:4;HEAP8[pbuf>>0]=type;return 0}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return e.errno}}function _fd_read(fd,iov,iovcnt,pnum){try{var stream=SYSCALLS.getStreamFromFD(fd);var num=SYSCALLS.doReadv(stream,iov,iovcnt);HEAP32[pnum>>2]=num;return 0}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return e.errno}}function _fd_seek(fd,offset_low,offset_high,whence,newOffset){try{var stream=SYSCALLS.getStreamFromFD(fd);var HIGH_OFFSET=4294967296;var offset=offset_high*HIGH_OFFSET+(offset_low>>>0);var DOUBLE_LIMIT=9007199254740992;if(offset<=-DOUBLE_LIMIT||offset>=DOUBLE_LIMIT){return-61}FS.llseek(stream,offset,whence);tempI64=[stream.position>>>0,(tempDouble=stream.position,+Math_abs(tempDouble)>=1?tempDouble>0?(Math_min(+Math_floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math_ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[newOffset>>2]=tempI64[0],HEAP32[newOffset+4>>2]=tempI64[1];if(stream.getdents&&offset===0&&whence===0)stream.getdents=null;return 0}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return e.errno}}function _fd_write(fd,iov,iovcnt,pnum){try{var stream=SYSCALLS.getStreamFromFD(fd);var num=SYSCALLS.doWritev(stream,iov,iovcnt);HEAP32[pnum>>2]=num;return 0}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return e.errno}}function _gettimeofday(ptr){var now=Date.now();HEAP32[ptr>>2]=now/1e3|0;HEAP32[ptr+4>>2]=now%1e3*1e3|0;return 0}var ___tm_current=280672;var ___tm_timezone=(stringToUTF8("GMT",280720,4),280720);function _tzset(){if(_tzset.called)return;_tzset.called=true;HEAP32[__get_timezone()>>2]=(new Date).getTimezoneOffset()*60;var currentYear=(new Date).getFullYear();var winter=new Date(currentYear,0,1);var summer=new Date(currentYear,6,1);HEAP32[__get_daylight()>>2]=Number(winter.getTimezoneOffset()!=summer.getTimezoneOffset());function extractZone(date){var match=date.toTimeString().match(/\(([A-Za-z ]+)\)$/);return match?match[1]:"GMT"}var winterName=extractZone(winter);var summerName=extractZone(summer);var winterNamePtr=allocateUTF8(winterName);var summerNamePtr=allocateUTF8(summerName);if(summer.getTimezoneOffset()<winter.getTimezoneOffset()){HEAP32[__get_tzname()>>2]=winterNamePtr;HEAP32[__get_tzname()+4>>2]=summerNamePtr}else{HEAP32[__get_tzname()>>2]=summerNamePtr;HEAP32[__get_tzname()+4>>2]=winterNamePtr}}function _localtime_r(time,tmPtr){_tzset();var date=new Date(HEAP32[time>>2]*1e3);HEAP32[tmPtr>>2]=date.getSeconds();HEAP32[tmPtr+4>>2]=date.getMinutes();HEAP32[tmPtr+8>>2]=date.getHours();HEAP32[tmPtr+12>>2]=date.getDate();HEAP32[tmPtr+16>>2]=date.getMonth();HEAP32[tmPtr+20>>2]=date.getFullYear()-1900;HEAP32[tmPtr+24>>2]=date.getDay();var start=new Date(date.getFullYear(),0,1);var yday=(date.getTime()-start.getTime())/(1e3*60*60*24)|0;HEAP32[tmPtr+28>>2]=yday;HEAP32[tmPtr+36>>2]=-(date.getTimezoneOffset()*60);var summerOffset=new Date(date.getFullYear(),6,1).getTimezoneOffset();var winterOffset=start.getTimezoneOffset();var dst=(summerOffset!=winterOffset&&date.getTimezoneOffset()==Math.min(winterOffset,summerOffset))|0;HEAP32[tmPtr+32>>2]=dst;var zonePtr=HEAP32[__get_tzname()+(dst?4:0)>>2];HEAP32[tmPtr+40>>2]=zonePtr;return tmPtr}function _localtime(time){return _localtime_r(time,___tm_current)}function _usleep(useconds){var start=_emscripten_get_now();while(_emscripten_get_now()-start<useconds/1e3){}}function _nanosleep(rqtp,rmtp){if(rqtp===0){setErrNo(28);return-1}var seconds=HEAP32[rqtp>>2];var nanoseconds=HEAP32[rqtp+4>>2];if(nanoseconds<0||nanoseconds>999999999||seconds<0){setErrNo(28);return-1}if(rmtp!==0){HEAP32[rmtp>>2]=0;HEAP32[rmtp+4>>2]=0}return _usleep(seconds*1e6+nanoseconds/1e3)}function _pthread_attr_destroy(attr){return 0}function _pthread_attr_init(attr){return 0}function _pthread_attr_setdetachstate(){}function _pthread_create(){return 6}function _pthread_join(){}function _pthread_mutexattr_destroy(){}function _pthread_mutexattr_init(){}function _pthread_mutexattr_settype(){}function _setTempRet0($i){setTempRet0($i|0)}function __isLeapYear(year){return year%4===0&&(year%100!==0||year%400===0)}function __arraySum(array,index){var sum=0;for(var i=0;i<=index;sum+=array[i++]){}return sum}var __MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31];var __MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31];function __addDays(date,days){var newDate=new Date(date.getTime());while(days>0){var leap=__isLeapYear(newDate.getFullYear());var currentMonth=newDate.getMonth();var daysInCurrentMonth=(leap?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR)[currentMonth];if(days>daysInCurrentMonth-newDate.getDate()){days-=daysInCurrentMonth-newDate.getDate()+1;newDate.setDate(1);if(currentMonth<11){newDate.setMonth(currentMonth+1)}else{newDate.setMonth(0);newDate.setFullYear(newDate.getFullYear()+1)}}else{newDate.setDate(newDate.getDate()+days);return newDate}}return newDate}function _strftime(s,maxsize,format,tm){var tm_zone=HEAP32[tm+40>>2];var date={tm_sec:HEAP32[tm>>2],tm_min:HEAP32[tm+4>>2],tm_hour:HEAP32[tm+8>>2],tm_mday:HEAP32[tm+12>>2],tm_mon:HEAP32[tm+16>>2],tm_year:HEAP32[tm+20>>2],tm_wday:HEAP32[tm+24>>2],tm_yday:HEAP32[tm+28>>2],tm_isdst:HEAP32[tm+32>>2],tm_gmtoff:HEAP32[tm+36>>2],tm_zone:tm_zone?UTF8ToString(tm_zone):""};var pattern=UTF8ToString(format);var EXPANSION_RULES_1={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var rule in EXPANSION_RULES_1){pattern=pattern.replace(new RegExp(rule,"g"),EXPANSION_RULES_1[rule])}var WEEKDAYS=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"];var MONTHS=["January","February","March","April","May","June","July","August","September","October","November","December"];function leadingSomething(value,digits,character){var str=typeof value==="number"?value.toString():value||"";while(str.length<digits){str=character[0]+str}return str}function leadingNulls(value,digits){return leadingSomething(value,digits,"0")}function compareByDay(date1,date2){function sgn(value){return value<0?-1:value>0?1:0}var compare;if((compare=sgn(date1.getFullYear()-date2.getFullYear()))===0){if((compare=sgn(date1.getMonth()-date2.getMonth()))===0){compare=sgn(date1.getDate()-date2.getDate())}}return compare}function getFirstWeekStartDate(janFourth){switch(janFourth.getDay()){case 0:return new Date(janFourth.getFullYear()-1,11,29);case 1:return janFourth;case 2:return new Date(janFourth.getFullYear(),0,3);case 3:return new Date(janFourth.getFullYear(),0,2);case 4:return new Date(janFourth.getFullYear(),0,1);case 5:return new Date(janFourth.getFullYear()-1,11,31);case 6:return new Date(janFourth.getFullYear()-1,11,30)}}function getWeekBasedYear(date){var thisDate=__addDays(new Date(date.tm_year+1900,0,1),date.tm_yday);var janFourthThisYear=new Date(thisDate.getFullYear(),0,4);var janFourthNextYear=new Date(thisDate.getFullYear()+1,0,4);var firstWeekStartThisYear=getFirstWeekStartDate(janFourthThisYear);var firstWeekStartNextYear=getFirstWeekStartDate(janFourthNextYear);if(compareByDay(firstWeekStartThisYear,thisDate)<=0){if(compareByDay(firstWeekStartNextYear,thisDate)<=0){return thisDate.getFullYear()+1}else{return thisDate.getFullYear()}}else{return thisDate.getFullYear()-1}}var EXPANSION_RULES_2={"%a":function(date){return WEEKDAYS[date.tm_wday].substring(0,3)},"%A":function(date){return WEEKDAYS[date.tm_wday]},"%b":function(date){return MONTHS[date.tm_mon].substring(0,3)},"%B":function(date){return MONTHS[date.tm_mon]},"%C":function(date){var year=date.tm_year+1900;return leadingNulls(year/100|0,2)},"%d":function(date){return leadingNulls(date.tm_mday,2)},"%e":function(date){return leadingSomething(date.tm_mday,2," ")},"%g":function(date){return getWeekBasedYear(date).toString().substring(2)},"%G":function(date){return getWeekBasedYear(date)},"%H":function(date){return leadingNulls(date.tm_hour,2)},"%I":function(date){var twelveHour=date.tm_hour;if(twelveHour==0)twelveHour=12;else if(twelveHour>12)twelveHour-=12;return leadingNulls(twelveHour,2)},"%j":function(date){return leadingNulls(date.tm_mday+__arraySum(__isLeapYear(date.tm_year+1900)?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR,date.tm_mon-1),3)},"%m":function(date){return leadingNulls(date.tm_mon+1,2)},"%M":function(date){return leadingNulls(date.tm_min,2)},"%n":function(){return"\n"},"%p":function(date){if(date.tm_hour>=0&&date.tm_hour<12){return"AM"}else{return"PM"}},"%S":function(date){return leadingNulls(date.tm_sec,2)},"%t":function(){return"\t"},"%u":function(date){return date.tm_wday||7},"%U":function(date){var janFirst=new Date(date.tm_year+1900,0,1);var firstSunday=janFirst.getDay()===0?janFirst:__addDays(janFirst,7-janFirst.getDay());var endDate=new Date(date.tm_year+1900,date.tm_mon,date.tm_mday);if(compareByDay(firstSunday,endDate)<0){var februaryFirstUntilEndMonth=__arraySum(__isLeapYear(endDate.getFullYear())?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR,endDate.getMonth()-1)-31;var firstSundayUntilEndJanuary=31-firstSunday.getDate();var days=firstSundayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();return leadingNulls(Math.ceil(days/7),2)}return compareByDay(firstSunday,janFirst)===0?"01":"00"},"%V":function(date){var janFourthThisYear=new Date(date.tm_year+1900,0,4);var janFourthNextYear=new Date(date.tm_year+1901,0,4);var firstWeekStartThisYear=getFirstWeekStartDate(janFourthThisYear);var firstWeekStartNextYear=getFirstWeekStartDate(janFourthNextYear);var endDate=__addDays(new Date(date.tm_year+1900,0,1),date.tm_yday);if(compareByDay(endDate,firstWeekStartThisYear)<0){return"53"}if(compareByDay(firstWeekStartNextYear,endDate)<=0){return"01"}var daysDifference;if(firstWeekStartThisYear.getFullYear()<date.tm_year+1900){daysDifference=date.tm_yday+32-firstWeekStartThisYear.getDate()}else{daysDifference=date.tm_yday+1-firstWeekStartThisYear.getDate()}return leadingNulls(Math.ceil(daysDifference/7),2)},"%w":function(date){return date.tm_wday},"%W":function(date){var janFirst=new Date(date.tm_year,0,1);var firstMonday=janFirst.getDay()===1?janFirst:__addDays(janFirst,janFirst.getDay()===0?1:7-janFirst.getDay()+1);var endDate=new Date(date.tm_year+1900,date.tm_mon,date.tm_mday);if(compareByDay(firstMonday,endDate)<0){var februaryFirstUntilEndMonth=__arraySum(__isLeapYear(endDate.getFullYear())?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR,endDate.getMonth()-1)-31;var firstMondayUntilEndJanuary=31-firstMonday.getDate();var days=firstMondayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();return leadingNulls(Math.ceil(days/7),2)}return compareByDay(firstMonday,janFirst)===0?"01":"00"},"%y":function(date){return(date.tm_year+1900).toString().substring(2)},"%Y":function(date){return date.tm_year+1900},"%z":function(date){var off=date.tm_gmtoff;var ahead=off>=0;off=Math.abs(off)/60;off=off/60*100+off%60;return(ahead?"+":"-")+String("0000"+off).slice(-4)},"%Z":function(date){return date.tm_zone},"%%":function(){return"%"}};for(var rule in EXPANSION_RULES_2){if(pattern.indexOf(rule)>=0){pattern=pattern.replace(new RegExp(rule,"g"),EXPANSION_RULES_2[rule](date))}}var bytes=intArrayFromString(pattern,false);if(bytes.length>maxsize){return 0}writeArrayToMemory(bytes,s);return bytes.length-1}function _strftime_l(s,maxsize,format,tm){return _strftime(s,maxsize,format,tm)}function _sysconf(name){switch(name){case 30:return 16384;case 85:var maxHeapSize=2147483648;return maxHeapSize/16384;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 80:case 81:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:case 79:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:{if(typeof navigator==="object")return navigator["hardwareConcurrency"]||1;return 1}}setErrNo(28);return-1}function _time(ptr){var ret=Date.now()/1e3|0;if(ptr){HEAP32[ptr>>2]=ret}return ret}function _times(buffer){if(buffer!==0){_memset(buffer,0,16)}return 0}function _zoom_wcl_get_cpu_num(){return GetEncThreadNum()}function _zoom_wcl_get_csc_thread_num(){return GetCscThreadNum()}function _zoom_wcl_support_multi_thread(){return IsSupportMultiThread()}function readAsmConstArgs(sigPtr,buf){if(!readAsmConstArgs.array){readAsmConstArgs.array=[]}var args=readAsmConstArgs.array;args.length=0;var ch;while(ch=HEAPU8[sigPtr++]){if(ch===100||ch===102){buf=buf+7&~7;args.push(HEAPF64[buf>>3]);buf+=8}else{buf=buf+3&~3;args.push(HEAP32[buf>>2]);buf+=4}}return args}var FSNode=function(parent,name,mode,rdev){if(!parent){parent=this}this.parent=parent;this.mount=parent.mount;this.mounted=null;this.id=FS.nextInode++;this.name=name;this.mode=mode;this.node_ops={};this.stream_ops={};this.rdev=rdev};var readMode=292|73;var writeMode=146;Object.defineProperties(FSNode.prototype,{read:{get:function(){return(this.mode&readMode)===readMode},set:function(val){val?this.mode|=readMode:this.mode&=~readMode}},write:{get:function(){return(this.mode&writeMode)===writeMode},set:function(val){val?this.mode|=writeMode:this.mode&=~writeMode}},isFolder:{get:function(){return FS.isDir(this.mode)}},isDevice:{get:function(){return FS.isChrdev(this.mode)}}});FS.FSNode=FSNode;FS.staticInit();var ASSERTIONS=false;function intArrayFromString(stringy,dontAddNull,length){var len=length>0?length:lengthBytesUTF8(stringy)+1;var u8array=new Array(len);var numBytesWritten=stringToUTF8Array(stringy,u8array,0,u8array.length);if(dontAddNull)u8array.length=numBytesWritten;return u8array}var asmLibraryArg={"CreateGltPlatform":_CreateGltPlatform,"DestroyGltPlatform":_DestroyGltPlatform,"__assert_fail":___assert_fail,"__cxa_allocate_exception":___cxa_allocate_exception,"__cxa_atexit":___cxa_atexit,"__cxa_throw":___cxa_throw,"__map_file":___map_file,"__sys__newselect":___sys__newselect,"__sys_fcntl64":___sys_fcntl64,"__sys_fstat64":___sys_fstat64,"__sys_getpid":___sys_getpid,"__sys_getuid32":___sys_getuid32,"__sys_ioctl":___sys_ioctl,"__sys_munmap":___sys_munmap,"__sys_open":___sys_open,"__sys_read":___sys_read,"__sys_socketcall":___sys_socketcall,"__sys_stat64":___sys_stat64,"abort":_abort,"clock_gettime":_clock_gettime,"emscripten_asm_const_iii":_emscripten_asm_const_iii,"emscripten_get_sbrk_ptr":_emscripten_get_sbrk_ptr,"emscripten_memcpy_big":_emscripten_memcpy_big,"emscripten_resize_heap":_emscripten_resize_heap,"environ_get":_environ_get,"environ_sizes_get":_environ_sizes_get,"fd_close":_fd_close,"fd_fdstat_get":_fd_fdstat_get,"fd_read":_fd_read,"fd_seek":_fd_seek,"fd_write":_fd_write,"gettimeofday":_gettimeofday,"localtime":_localtime,"localtime_r":_localtime_r,"memory":wasmMemory,"nanosleep":_nanosleep,"pthread_attr_destroy":_pthread_attr_destroy,"pthread_attr_init":_pthread_attr_init,"pthread_attr_setdetachstate":_pthread_attr_setdetachstate,"pthread_create":_pthread_create,"pthread_join":_pthread_join,"pthread_mutexattr_destroy":_pthread_mutexattr_destroy,"pthread_mutexattr_init":_pthread_mutexattr_init,"pthread_mutexattr_settype":_pthread_mutexattr_settype,"setTempRet0":_setTempRet0,"strftime_l":_strftime_l,"sysconf":_sysconf,"table":wasmTable,"time":_time,"times":_times,"zoom_wcl_get_cpu_num":_zoom_wcl_get_cpu_num,"zoom_wcl_get_csc_thread_num":_zoom_wcl_get_csc_thread_num,"zoom_wcl_support_multi_thread":_zoom_wcl_support_multi_thread};var asm=createWasm();Module["asm"]=asm;var ___wasm_call_ctors=Module["___wasm_call_ctors"]=function(){return(___wasm_call_ctors=Module["___wasm_call_ctors"]=Module["asm"]["__wasm_call_ctors"]).apply(null,arguments)};var _memcpy=Module["_memcpy"]=function(){return(_memcpy=Module["_memcpy"]=Module["asm"]["memcpy"]).apply(null,arguments)};var __Video_Init=Module["__Video_Init"]=function(){return(__Video_Init=Module["__Video_Init"]=Module["asm"]["_Video_Init"]).apply(null,arguments)};var __Video_UnInit=Module["__Video_UnInit"]=function(){return(__Video_UnInit=Module["__Video_UnInit"]=Module["asm"]["_Video_UnInit"]).apply(null,arguments)};var __Video_Decode=Module["__Video_Decode"]=function(){return(__Video_Decode=Module["__Video_Decode"]=Module["asm"]["_Video_Decode"]).apply(null,arguments)};var __Video_Try_Analysis=Module["__Video_Try_Analysis"]=function(){return(__Video_Try_Analysis=Module["__Video_Try_Analysis"]=Module["asm"]["_Video_Try_Analysis"]).apply(null,arguments)};var _memset=Module["_memset"]=function(){return(_memset=Module["_memset"]=Module["asm"]["memset"]).apply(null,arguments)};var __Video_Encode=Module["__Video_Encode"]=function(){return(__Video_Encode=Module["__Video_Encode"]=Module["asm"]["_Video_Encode"]).apply(null,arguments)};var __Video_Websocket_Speed=Module["__Video_Websocket_Speed"]=function(){return(__Video_Websocket_Speed=Module["__Video_Websocket_Speed"]=Module["asm"]["_Video_Websocket_Speed"]).apply(null,arguments)};var __Video_Start_Encode=Module["__Video_Start_Encode"]=function(){return(__Video_Start_Encode=Module["__Video_Start_Encode"]=Module["asm"]["_Video_Start_Encode"]).apply(null,arguments)};var __Video_Stop_Encode=Module["__Video_Stop_Encode"]=function(){return(__Video_Stop_Encode=Module["__Video_Stop_Encode"]=Module["asm"]["_Video_Stop_Encode"]).apply(null,arguments)};var __Video_Update_Format=Module["__Video_Update_Format"]=function(){return(__Video_Update_Format=Module["__Video_Update_Format"]=Module["asm"]["_Video_Update_Format"]).apply(null,arguments)};var __Video_Get_Sending_Status=Module["__Video_Get_Sending_Status"]=function(){return(__Video_Get_Sending_Status=Module["__Video_Get_Sending_Status"]=Module["asm"]["_Video_Get_Sending_Status"]).apply(null,arguments)};var __Video_Get_Encode_Codec_Info=Module["__Video_Get_Encode_Codec_Info"]=function(){return(__Video_Get_Encode_Codec_Info=Module["__Video_Get_Encode_Codec_Info"]=Module["asm"]["_Video_Get_Encode_Codec_Info"]).apply(null,arguments)};var __Video_Get_Decode_Codec_Info=Module["__Video_Get_Decode_Codec_Info"]=function(){return(__Video_Get_Decode_Codec_Info=Module["__Video_Get_Decode_Codec_Info"]=Module["asm"]["_Video_Get_Decode_Codec_Info"]).apply(null,arguments)};var __Video_Set_Data_Encryption=Module["__Video_Set_Data_Encryption"]=function(){return(__Video_Set_Data_Encryption=Module["__Video_Set_Data_Encryption"]=Module["asm"]["_Video_Set_Data_Encryption"]).apply(null,arguments)};var __Add_Video_Cooker_info=Module["__Add_Video_Cooker_info"]=function(){return(__Add_Video_Cooker_info=Module["__Add_Video_Cooker_info"]=Module["asm"]["_Add_Video_Cooker_info"]).apply(null,arguments)};var __Remove_Video_Cooker_Info=Module["__Remove_Video_Cooker_Info"]=function(){return(__Remove_Video_Cooker_Info=Module["__Remove_Video_Cooker_Info"]=Module["asm"]["_Remove_Video_Cooker_Info"]).apply(null,arguments)};var __Get_Video_Meat_Weight=Module["__Get_Video_Meat_Weight"]=function(){return(__Get_Video_Meat_Weight=Module["__Get_Video_Meat_Weight"]=Module["asm"]["_Get_Video_Meat_Weight"]).apply(null,arguments)};var __Sharing_Encode_Init=Module["__Sharing_Encode_Init"]=function(){return(__Sharing_Encode_Init=Module["__Sharing_Encode_Init"]=Module["asm"]["_Sharing_Encode_Init"]).apply(null,arguments)};var __Sharing_Encode_Try_Analysis=Module["__Sharing_Encode_Try_Analysis"]=function(){return(__Sharing_Encode_Try_Analysis=Module["__Sharing_Encode_Try_Analysis"]=Module["asm"]["_Sharing_Encode_Try_Analysis"]).apply(null,arguments)};var __Sharing_Encode_Uninit=Module["__Sharing_Encode_Uninit"]=function(){return(__Sharing_Encode_Uninit=Module["__Sharing_Encode_Uninit"]=Module["asm"]["_Sharing_Encode_Uninit"]).apply(null,arguments)};var __Sharing_Encode=Module["__Sharing_Encode"]=function(){return(__Sharing_Encode=Module["__Sharing_Encode"]=Module["asm"]["_Sharing_Encode"]).apply(null,arguments)};var __Sharing_Set_Data_Encryption=Module["__Sharing_Set_Data_Encryption"]=function(){return(__Sharing_Set_Data_Encryption=Module["__Sharing_Set_Data_Encryption"]=Module["asm"]["_Sharing_Set_Data_Encryption"]).apply(null,arguments)};var __Get_Sharing_Sending_Status=Module["__Get_Sharing_Sending_Status"]=function(){return(__Get_Sharing_Sending_Status=Module["__Get_Sharing_Sending_Status"]=Module["asm"]["_Get_Sharing_Sending_Status"]).apply(null,arguments)};var __Get_Codec_Info=Module["__Get_Codec_Info"]=function(){return(__Get_Codec_Info=Module["__Get_Codec_Info"]=Module["asm"]["_Get_Codec_Info"]).apply(null,arguments)};var __Sharing_Pause_Encode=Module["__Sharing_Pause_Encode"]=function(){return(__Sharing_Pause_Encode=Module["__Sharing_Pause_Encode"]=Module["asm"]["_Sharing_Pause_Encode"]).apply(null,arguments)};var __Sharing_Resume_Encode=Module["__Sharing_Resume_Encode"]=function(){return(__Sharing_Resume_Encode=Module["__Sharing_Resume_Encode"]=Module["asm"]["_Sharing_Resume_Encode"]).apply(null,arguments)};var __Sharing_Stop_Encode=Module["__Sharing_Stop_Encode"]=function(){return(__Sharing_Stop_Encode=Module["__Sharing_Stop_Encode"]=Module["asm"]["_Sharing_Stop_Encode"]).apply(null,arguments)};var __Sharing_Websocket_Speed=Module["__Sharing_Websocket_Speed"]=function(){return(__Sharing_Websocket_Speed=Module["__Sharing_Websocket_Speed"]=Module["asm"]["_Sharing_Websocket_Speed"]).apply(null,arguments)};var __Add_Sharing_Cooker_info=Module["__Add_Sharing_Cooker_info"]=function(){return(__Add_Sharing_Cooker_info=Module["__Add_Sharing_Cooker_info"]=Module["asm"]["_Add_Sharing_Cooker_info"]).apply(null,arguments)};var __Remove_Sharing_Cooker_Info=Module["__Remove_Sharing_Cooker_Info"]=function(){return(__Remove_Sharing_Cooker_Info=Module["__Remove_Sharing_Cooker_Info"]=Module["asm"]["_Remove_Sharing_Cooker_Info"]).apply(null,arguments)};var __Get_Sharing_Meat_Weight=Module["__Get_Sharing_Meat_Weight"]=function(){return(__Get_Sharing_Meat_Weight=Module["__Get_Sharing_Meat_Weight"]=Module["asm"]["_Get_Sharing_Meat_Weight"]).apply(null,arguments)};var _free=Module["_free"]=function(){return(_free=Module["_free"]=Module["asm"]["free"]).apply(null,arguments)};var _malloc=Module["_malloc"]=function(){return(_malloc=Module["_malloc"]=Module["asm"]["malloc"]).apply(null,arguments)};var _htonl=Module["_htonl"]=function(){return(_htonl=Module["_htonl"]=Module["asm"]["htonl"]).apply(null,arguments)};var ___errno_location=Module["___errno_location"]=function(){return(___errno_location=Module["___errno_location"]=Module["asm"]["__errno_location"]).apply(null,arguments)};var _ntohs=Module["_ntohs"]=function(){return(_ntohs=Module["_ntohs"]=Module["asm"]["ntohs"]).apply(null,arguments)};var _htons=Module["_htons"]=function(){return(_htons=Module["_htons"]=Module["asm"]["htons"]).apply(null,arguments)};var __get_tzname=Module["__get_tzname"]=function(){return(__get_tzname=Module["__get_tzname"]=Module["asm"]["_get_tzname"]).apply(null,arguments)};var __get_daylight=Module["__get_daylight"]=function(){return(__get_daylight=Module["__get_daylight"]=Module["asm"]["_get_daylight"]).apply(null,arguments)};var __get_timezone=Module["__get_timezone"]=function(){return(__get_timezone=Module["__get_timezone"]=Module["asm"]["_get_timezone"]).apply(null,arguments)};var _setThrew=Module["_setThrew"]=function(){return(_setThrew=Module["_setThrew"]=Module["asm"]["setThrew"]).apply(null,arguments)};var ___cxa_demangle=Module["___cxa_demangle"]=function(){return(___cxa_demangle=Module["___cxa_demangle"]=Module["asm"]["__cxa_demangle"]).apply(null,arguments)};var _emscripten_main_thread_process_queued_calls=Module["_emscripten_main_thread_process_queued_calls"]=function(){return(_emscripten_main_thread_process_queued_calls=Module["_emscripten_main_thread_process_queued_calls"]=Module["asm"]["emscripten_main_thread_process_queued_calls"]).apply(null,arguments)};var stackSave=Module["stackSave"]=function(){return(stackSave=Module["stackSave"]=Module["asm"]["stackSave"]).apply(null,arguments)};var stackAlloc=Module["stackAlloc"]=function(){return(stackAlloc=Module["stackAlloc"]=Module["asm"]["stackAlloc"]).apply(null,arguments)};var stackRestore=Module["stackRestore"]=function(){return(stackRestore=Module["stackRestore"]=Module["asm"]["stackRestore"]).apply(null,arguments)};var __growWasmMemory=Module["__growWasmMemory"]=function(){return(__growWasmMemory=Module["__growWasmMemory"]=Module["asm"]["__growWasmMemory"]).apply(null,arguments)};var dynCall_vi=Module["dynCall_vi"]=function(){return(dynCall_vi=Module["dynCall_vi"]=Module["asm"]["dynCall_vi"]).apply(null,arguments)};var dynCall_ii=Module["dynCall_ii"]=function(){return(dynCall_ii=Module["dynCall_ii"]=Module["asm"]["dynCall_ii"]).apply(null,arguments)};var dynCall_iiiiiii=Module["dynCall_iiiiiii"]=function(){return(dynCall_iiiiiii=Module["dynCall_iiiiiii"]=Module["asm"]["dynCall_iiiiiii"]).apply(null,arguments)};var dynCall_iiiii=Module["dynCall_iiiii"]=function(){return(dynCall_iiiii=Module["dynCall_iiiii"]=Module["asm"]["dynCall_iiiii"]).apply(null,arguments)};var dynCall_iijiiiiiiiiiii=Module["dynCall_iijiiiiiiiiiii"]=function(){return(dynCall_iijiiiiiiiiiii=Module["dynCall_iijiiiiiiiiiii"]=Module["asm"]["dynCall_iijiiiiiiiiiii"]).apply(null,arguments)};var dynCall_iiii=Module["dynCall_iiii"]=function(){return(dynCall_iiii=Module["dynCall_iiii"]=Module["asm"]["dynCall_iiii"]).apply(null,arguments)};var dynCall_v=Module["dynCall_v"]=function(){return(dynCall_v=Module["dynCall_v"]=Module["asm"]["dynCall_v"]).apply(null,arguments)};var dynCall_iijiiiiiiiiiiii=Module["dynCall_iijiiiiiiiiiiii"]=function(){return(dynCall_iijiiiiiiiiiiii=Module["dynCall_iijiiiiiiiiiiii"]=Module["asm"]["dynCall_iijiiiiiiiiiiii"]).apply(null,arguments)};var dynCall_iiiiiiiiiiiii=Module["dynCall_iiiiiiiiiiiii"]=function(){return(dynCall_iiiiiiiiiiiii=Module["dynCall_iiiiiiiiiiiii"]=Module["asm"]["dynCall_iiiiiiiiiiiii"]).apply(null,arguments)};var dynCall_iii=Module["dynCall_iii"]=function(){return(dynCall_iii=Module["dynCall_iii"]=Module["asm"]["dynCall_iii"]).apply(null,arguments)};var dynCall_iiiif=Module["dynCall_iiiif"]=function(){return(dynCall_iiiif=Module["dynCall_iiiif"]=Module["asm"]["dynCall_iiiif"]).apply(null,arguments)};var dynCall_iij=Module["dynCall_iij"]=function(){return(dynCall_iij=Module["dynCall_iij"]=Module["asm"]["dynCall_iij"]).apply(null,arguments)};var dynCall_iiiiii=Module["dynCall_iiiiii"]=function(){return(dynCall_iiiiii=Module["dynCall_iiiiii"]=Module["asm"]["dynCall_iiiiii"]).apply(null,arguments)};var dynCall_iiiiiiiiiij=Module["dynCall_iiiiiiiiiij"]=function(){return(dynCall_iiiiiiiiiij=Module["dynCall_iiiiiiiiiij"]=Module["asm"]["dynCall_iiiiiiiiiij"]).apply(null,arguments)};var dynCall_iiiiiiii=Module["dynCall_iiiiiiii"]=function(){return(dynCall_iiiiiiii=Module["dynCall_iiiiiiii"]=Module["asm"]["dynCall_iiiiiiii"]).apply(null,arguments)};var dynCall_iiij=Module["dynCall_iiij"]=function(){return(dynCall_iiij=Module["dynCall_iiij"]=Module["asm"]["dynCall_iiij"]).apply(null,arguments)};var dynCall_iiiiiijiji=Module["dynCall_iiiiiijiji"]=function(){return(dynCall_iiiiiijiji=Module["dynCall_iiiiiijiji"]=Module["asm"]["dynCall_iiiiiijiji"]).apply(null,arguments)};var dynCall_iiiiiiiii=Module["dynCall_iiiiiiiii"]=function(){return(dynCall_iiiiiiiii=Module["dynCall_iiiiiiiii"]=Module["asm"]["dynCall_iiiiiiiii"]).apply(null,arguments)};var dynCall_viiiii=Module["dynCall_viiiii"]=function(){return(dynCall_viiiii=Module["dynCall_viiiii"]=Module["asm"]["dynCall_viiiii"]).apply(null,arguments)};var dynCall_iiiiiiiiiiiij=Module["dynCall_iiiiiiiiiiiij"]=function(){return(dynCall_iiiiiiiiiiiij=Module["dynCall_iiiiiiiiiiiij"]=Module["asm"]["dynCall_iiiiiiiiiiiij"]).apply(null,arguments)};var dynCall_iiiiiiiiiiii=Module["dynCall_iiiiiiiiiiii"]=function(){return(dynCall_iiiiiiiiiiii=Module["dynCall_iiiiiiiiiiii"]=Module["asm"]["dynCall_iiiiiiiiiiii"]).apply(null,arguments)};var dynCall_vii=Module["dynCall_vii"]=function(){return(dynCall_vii=Module["dynCall_vii"]=Module["asm"]["dynCall_vii"]).apply(null,arguments)};var dynCall_iiiiiiiiiii=Module["dynCall_iiiiiiiiiii"]=function(){return(dynCall_iiiiiiiiiii=Module["dynCall_iiiiiiiiiii"]=Module["asm"]["dynCall_iiiiiiiiiii"]).apply(null,arguments)};var dynCall_iiiiijiji=Module["dynCall_iiiiijiji"]=function(){return(dynCall_iiiiijiji=Module["dynCall_iiiiijiji"]=Module["asm"]["dynCall_iiiiijiji"]).apply(null,arguments)};var dynCall_iiif=Module["dynCall_iiif"]=function(){return(dynCall_iiif=Module["dynCall_iiif"]=Module["asm"]["dynCall_iiif"]).apply(null,arguments)};var dynCall_iiiiifi=Module["dynCall_iiiiifi"]=function(){return(dynCall_iiiiifi=Module["dynCall_iiiiifi"]=Module["asm"]["dynCall_iiiiifi"]).apply(null,arguments)};var dynCall_iiiiiiiiiiij=Module["dynCall_iiiiiiiiiiij"]=function(){return(dynCall_iiiiiiiiiiij=Module["dynCall_iiiiiiiiiiij"]=Module["asm"]["dynCall_iiiiiiiiiiij"]).apply(null,arguments)};var dynCall_iiiifi=Module["dynCall_iiiifi"]=function(){return(dynCall_iiiifi=Module["dynCall_iiiifi"]=Module["asm"]["dynCall_iiiifi"]).apply(null,arguments)};var dynCall_iiiffi=Module["dynCall_iiiffi"]=function(){return(dynCall_iiiffi=Module["dynCall_iiiffi"]=Module["asm"]["dynCall_iiiffi"]).apply(null,arguments)};var dynCall_iiiiiiiffff=Module["dynCall_iiiiiiiffff"]=function(){return(dynCall_iiiiiiiffff=Module["dynCall_iiiiiiiffff"]=Module["asm"]["dynCall_iiiiiiiffff"]).apply(null,arguments)};var dynCall_iiiiiffff=Module["dynCall_iiiiiffff"]=function(){return(dynCall_iiiiiffff=Module["dynCall_iiiiiffff"]=Module["asm"]["dynCall_iiiiiffff"]).apply(null,arguments)};var dynCall_iiiiiiiiij=Module["dynCall_iiiiiiiiij"]=function(){return(dynCall_iiiiiiiiij=Module["dynCall_iiiiiiiiij"]=Module["asm"]["dynCall_iiiiiiiiij"]).apply(null,arguments)};var dynCall_iiiiiji=Module["dynCall_iiiiiji"]=function(){return(dynCall_iiiiiji=Module["dynCall_iiiiiji"]=Module["asm"]["dynCall_iiiiiji"]).apply(null,arguments)};var dynCall_iiffi=Module["dynCall_iiffi"]=function(){return(dynCall_iiffi=Module["dynCall_iiffi"]=Module["asm"]["dynCall_iiffi"]).apply(null,arguments)};var dynCall_iiiiiiiiii=Module["dynCall_iiiiiiiiii"]=function(){return(dynCall_iiiiiiiiii=Module["dynCall_iiiiiiiiii"]=Module["asm"]["dynCall_iiiiiiiiii"]).apply(null,arguments)};var dynCall_viijii=Module["dynCall_viijii"]=function(){return(dynCall_viijii=Module["dynCall_viijii"]=Module["asm"]["dynCall_viijii"]).apply(null,arguments)};var dynCall_viiii=Module["dynCall_viiii"]=function(){return(dynCall_viiii=Module["dynCall_viiii"]=Module["asm"]["dynCall_viiii"]).apply(null,arguments)};var dynCall_viii=Module["dynCall_viii"]=function(){return(dynCall_viii=Module["dynCall_viii"]=Module["asm"]["dynCall_viii"]).apply(null,arguments)};var dynCall_viji=Module["dynCall_viji"]=function(){return(dynCall_viji=Module["dynCall_viji"]=Module["asm"]["dynCall_viji"]).apply(null,arguments)};var dynCall_viiiiii=Module["dynCall_viiiiii"]=function(){return(dynCall_viiiiii=Module["dynCall_viiiiii"]=Module["asm"]["dynCall_viiiiii"]).apply(null,arguments)};var dynCall_iiiifii=Module["dynCall_iiiifii"]=function(){return(dynCall_iiiifii=Module["dynCall_iiiifii"]=Module["asm"]["dynCall_iiiifii"]).apply(null,arguments)};var dynCall_iiiiifiii=Module["dynCall_iiiiifiii"]=function(){return(dynCall_iiiiifiii=Module["dynCall_iiiiifiii"]=Module["asm"]["dynCall_iiiiifiii"]).apply(null,arguments)};var dynCall_iiifii=Module["dynCall_iiifii"]=function(){return(dynCall_iiifii=Module["dynCall_iiifii"]=Module["asm"]["dynCall_iiifii"]).apply(null,arguments)};var dynCall_iiiiiiiiiiiiii=Module["dynCall_iiiiiiiiiiiiii"]=function(){return(dynCall_iiiiiiiiiiiiii=Module["dynCall_iiiiiiiiiiiiii"]=Module["asm"]["dynCall_iiiiiiiiiiiiii"]).apply(null,arguments)};var dynCall_iiiiiiiiiiiiiiii=Module["dynCall_iiiiiiiiiiiiiiii"]=function(){return(dynCall_iiiiiiiiiiiiiiii=Module["dynCall_iiiiiiiiiiiiiiii"]=Module["asm"]["dynCall_iiiiiiiiiiiiiiii"]).apply(null,arguments)};var dynCall_viiiiiiiii=Module["dynCall_viiiiiiiii"]=function(){return(dynCall_viiiiiiiii=Module["dynCall_viiiiiiiii"]=Module["asm"]["dynCall_viiiiiiiii"]).apply(null,arguments)};var dynCall_i=Module["dynCall_i"]=function(){return(dynCall_i=Module["dynCall_i"]=Module["asm"]["dynCall_i"]).apply(null,arguments)};var dynCall_viid=Module["dynCall_viid"]=function(){return(dynCall_viid=Module["dynCall_viid"]=Module["asm"]["dynCall_viid"]).apply(null,arguments)};var dynCall_viiiiiii=Module["dynCall_viiiiiii"]=function(){return(dynCall_viiiiiii=Module["dynCall_viiiiiii"]=Module["asm"]["dynCall_viiiiiii"]).apply(null,arguments)};var dynCall_viiiiiiii=Module["dynCall_viiiiiiii"]=function(){return(dynCall_viiiiiiii=Module["dynCall_viiiiiiii"]=Module["asm"]["dynCall_viiiiiiii"]).apply(null,arguments)};var dynCall_ji=Module["dynCall_ji"]=function(){return(dynCall_ji=Module["dynCall_ji"]=Module["asm"]["dynCall_ji"]).apply(null,arguments)};var dynCall_viiiiiiiiiiiiiii=Module["dynCall_viiiiiiiiiiiiiii"]=function(){return(dynCall_viiiiiiiiiiiiiii=Module["dynCall_viiiiiiiiiiiiiii"]=Module["asm"]["dynCall_viiiiiiiiiiiiiii"]).apply(null,arguments)};var dynCall_viiiiiiiiiiiiii=Module["dynCall_viiiiiiiiiiiiii"]=function(){return(dynCall_viiiiiiiiiiiiii=Module["dynCall_viiiiiiiiiiiiii"]=Module["asm"]["dynCall_viiiiiiiiiiiiii"]).apply(null,arguments)};var dynCall_viiiiiiiiiiii=Module["dynCall_viiiiiiiiiiii"]=function(){return(dynCall_viiiiiiiiiiii=Module["dynCall_viiiiiiiiiiii"]=Module["asm"]["dynCall_viiiiiiiiiiii"]).apply(null,arguments)};var dynCall_viiiiiiiiiii=Module["dynCall_viiiiiiiiiii"]=function(){return(dynCall_viiiiiiiiiii=Module["dynCall_viiiiiiiiiii"]=Module["asm"]["dynCall_viiiiiiiiiii"]).apply(null,arguments)};var dynCall_iiiid=Module["dynCall_iiiid"]=function(){return(dynCall_iiiid=Module["dynCall_iiiid"]=Module["asm"]["dynCall_iiiid"]).apply(null,arguments)};var dynCall_vidi=Module["dynCall_vidi"]=function(){return(dynCall_vidi=Module["dynCall_vidi"]=Module["asm"]["dynCall_vidi"]).apply(null,arguments)};var dynCall_viiiiiiiiiiiiiiiiiiiii=Module["dynCall_viiiiiiiiiiiiiiiiiiiii"]=function(){return(dynCall_viiiiiiiiiiiiiiiiiiiii=Module["dynCall_viiiiiiiiiiiiiiiiiiiii"]=Module["asm"]["dynCall_viiiiiiiiiiiiiiiiiiiii"]).apply(null,arguments)};var dynCall_viiiiiiiiii=Module["dynCall_viiiiiiiiii"]=function(){return(dynCall_viiiiiiiiii=Module["dynCall_viiiiiiiiii"]=Module["asm"]["dynCall_viiiiiiiiii"]).apply(null,arguments)};var dynCall_dd=Module["dynCall_dd"]=function(){return(dynCall_dd=Module["dynCall_dd"]=Module["asm"]["dynCall_dd"]).apply(null,arguments)};var dynCall_viiiiiiiiiiiiiiii=Module["dynCall_viiiiiiiiiiiiiiii"]=function(){return(dynCall_viiiiiiiiiiiiiiii=Module["dynCall_viiiiiiiiiiiiiiii"]=Module["asm"]["dynCall_viiiiiiiiiiiiiiii"]).apply(null,arguments)};var dynCall_jiji=Module["dynCall_jiji"]=function(){return(dynCall_jiji=Module["dynCall_jiji"]=Module["asm"]["dynCall_jiji"]).apply(null,arguments)};var dynCall_iidiiii=Module["dynCall_iidiiii"]=function(){return(dynCall_iidiiii=Module["dynCall_iidiiii"]=Module["asm"]["dynCall_iidiiii"]).apply(null,arguments)};var dynCall_iiiiij=Module["dynCall_iiiiij"]=function(){return(dynCall_iiiiij=Module["dynCall_iiiiij"]=Module["asm"]["dynCall_iiiiij"]).apply(null,arguments)};var dynCall_iiiiid=Module["dynCall_iiiiid"]=function(){return(dynCall_iiiiid=Module["dynCall_iiiiid"]=Module["asm"]["dynCall_iiiiid"]).apply(null,arguments)};var dynCall_iiiiijj=Module["dynCall_iiiiijj"]=function(){return(dynCall_iiiiijj=Module["dynCall_iiiiijj"]=Module["asm"]["dynCall_iiiiijj"]).apply(null,arguments)};var dynCall_iiiiiijj=Module["dynCall_iiiiiijj"]=function(){return(dynCall_iiiiiijj=Module["dynCall_iiiiiijj"]=Module["asm"]["dynCall_iiiiiijj"]).apply(null,arguments)};Module["asm"]=asm;Module["cwrap"]=cwrap;var calledRun;function ExitStatus(status){this.name="ExitStatus";this.message="Program terminated with exit("+status+")";this.status=status}dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(args){args=args||arguments_;if(runDependencies>0){return}preRun();if(runDependencies>0)return;function doRun(){if(calledRun)return;calledRun=true;Module["calledRun"]=true;if(ABORT)return;initRuntime();preMain();if(Module["onRuntimeInitialized"])Module["onRuntimeInitialized"]();postRun()}if(Module["setStatus"]){Module["setStatus"]("Running...");setTimeout(function(){setTimeout(function(){Module["setStatus"]("")},1);doRun()},1)}else{doRun()}}Module["run"]=run;if(Module["preInit"]){if(typeof Module["preInit"]=="function")Module["preInit"]=[Module["preInit"]];while(Module["preInit"].length>0){Module["preInit"].pop()()}}noExitRuntime=true;run();
